{"version":3,"sources":["file:///Users/waostudio/Desktop/Fix4/node_modules/cross-fetch/dist/node-ponyfill.js"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","nodeFetch","realFetch","default","fetch","options","test","call","ponyfill","Headers","Request","Response","_cjsExports","_fetch","_Headers","_Request","_Response","_default"],"mappings":";;;;;;;;;AAAOA,MAAAA,U;;AACkBC,MAAAA,I,cAAhBC,Y;;;8BAOHA,Y,GAAe,cAAYC,G;;AACjCH,MAAAA,UAAU,CAACI,MAAX,CAAkBF,YAAlB,EAAgC,UAAUG,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2D;AAC3F;AAGC,cAAMC,SAAS,GAAGJ,OAAO,CAAC,YAAD,CAAzB;;AACA,cAAMK,SAAS,GAAGD,SAAS,CAACE,OAAV,IAAqBF,SAAvC;;AAEA,cAAMG,KAAK,GAAG,UAAUV,GAAV,EAAeW,OAAf,EAAwB;AACpC;AACA;AACA,cAAI,QAAQC,IAAR,CAAaZ,GAAb,CAAJ,EAAuB;AACrBA,YAAAA,GAAG,GAAG,WAAWA,GAAjB;AACD;;AACD,iBAAOQ,SAAS,CAACK,IAAV,CAAe,IAAf,EAAqBb,GAArB,EAA0BW,OAA1B,CAAP;AACD,SAPD;;AASAD,QAAAA,KAAK,CAACI,QAAN,GAAiB,IAAjB;AAEAV,QAAAA,MAAM,CAACF,OAAP,GAAiBA,OAAO,GAAGQ,KAA3B;AACAR,QAAAA,OAAO,CAACQ,KAAR,GAAgBA,KAAhB;AACAR,QAAAA,OAAO,CAACa,OAAR,GAAkBR,SAAS,CAACQ,OAA5B;AACAb,QAAAA,OAAO,CAACc,OAAR,GAAkBT,SAAS,CAACS,OAA5B;AACAd,QAAAA,OAAO,CAACe,QAAR,GAAmBV,SAAS,CAACU,QAA7B,CAtB0F,CAwB1F;;AACAf,QAAAA,OAAO,CAACO,OAAR,GAAkBC,KAAlB,CAzB0F,CA4B3F;;AAEA,2BAAAQ,WAAW,GAAGd,MAAM,CAACF,OAArB;;AACAiB,QAAAA,MAAM,GAAGf,MAAM,CAACF,OAAP,CAAeQ,KAAxB;AACAU,QAAAA,QAAQ,GAAGhB,MAAM,CAACF,OAAP,CAAea,OAA1B;AACAM,QAAAA,QAAQ,GAAGjB,MAAM,CAACF,OAAP,CAAec,OAA1B;AACAM,QAAAA,SAAS,GAAGlB,MAAM,CAACF,OAAP,CAAee,QAA3B;AACAM,QAAAA,QAAQ,GAAGnB,MAAM,CAACF,OAAP,CAAeO,OAA1B;AAEC,OArCD,EAqCG,OAAO;AACR,sBAAcX;AADN,OAAP,CArCH","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'node-fetch';\nlet _cjsExports;\nlet _fetch;\nlet _Headers;\nlet _Request;\nlet _Response;\nlet _default;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n const nodeFetch = require('node-fetch')\n const realFetch = nodeFetch.default || nodeFetch\n\n const fetch = function (url, options) {\n   // Support schemaless URIs on the server for parity with the browser.\n   // Ex: //github.com/ -> https://github.com/\n   if (/^\\/\\//.test(url)) {\n     url = 'https:' + url\n   }\n   return realFetch.call(this, url, options)\n }\n\n fetch.ponyfill = true\n\n module.exports = exports = fetch\n exports.fetch = fetch\n exports.Headers = nodeFetch.Headers\n exports.Request = nodeFetch.Request\n exports.Response = nodeFetch.Response\n\n // Needed for TypeScript consumers without esModuleInterop.\n exports.default = fetch\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n_fetch = module.exports.fetch;\n_Headers = module.exports.Headers;\n_Request = module.exports.Request;\n_Response = module.exports.Response;\n_default = module.exports.default;\n\n}, () => ({\n  'node-fetch': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}