{"version":3,"sources":["file:///Users/waostudio/Desktop/dragonfix/assets/Scripts/GameController.ts"],"names":["_decorator","Component","Label","Node","tween","Vec3","Animation","SpriteFrame","Sprite","Graphics","Color","instantiate","Prefab","Button","AudioSource","Chip","NetworkConnect","AudioController","ccclass","property","GameController","type","UserBetTigerIcon","UserBetDragonIcon","UserBetTieIcon","clonePosCardL","clonePosCardR","randomValueCardR","randomValueCardL","balanceUser","currentCol","currentRow","currentRowClone","currentColL","currentRowL","previousPrefabType","previousPrefabTypeL","winIntroType","numRows","numCols","cellWidth","cellHeight","countdownTimerBet","cloneBalance","GameEnd","GameStateStart","GameStateIdle","GameStateReuslt","GameStateFight","GameStatePayOut","GameStateStopBet","checkSateCurrent","checkBettedTiger","checkBettedDragon","checkBettedTie","loggedInUsername","sessionId","currentHostName","assignUserName","assignHostName","spriteFrame","spriteFrameR","cardSuit","cardValue","cardTigerSuit","cardTigerValue","cardImg","Tiewarn","result","host","log3","onLoad","CardNodeL","position","clone","CardNodeR","shuffelCard","drawRectangle","drawRectangle1","drawRectangle2","drawRectangle3","drawRectangleTotalUser","drawRectanglel","AvatarL1","AvatarL2","AvatarL3","AvatarL4","AvatarL5","AvatarL6","drawGrid","GridL","GridR","drawRectangleTotal","settingAudio","update","deltaTime","room","onMessage","message","console","log","dragonCard","suit","tigerCard","value","displayImages","displayImagesCardR","state","players","get","BalancerLb","string","balance","TotalBetLB","betTiger","toString","betDragon","betTie","totalUserBet","totaluserBetTiger","totaluserBetDragon","totaluserBetTie","undefined","player","displayName","UserName","warn","currentHost","error","chipNode","node","active","avaliablebet","scroll","getComponent","color","NameHost","gameState","bgHost","hostAnim","play","setTimeout","on","EventType","FINISHED","send","createGridNot","documents","createGrid","RestartBalnce","Idle","CardNodeAnim","StartBet","StartBetting","loadingPage","loadingAudio","volume","stopBetting","fight","shownResult","i","ListLabel","length","removeAllChildren","listCancelBet","addScore","Score","betLB","betValueIcon","betTigerBtn","UserBet","JSON","stringify","betAmount","betType","ToatalUser","betTigerLb","createSpriteNode","ValueAnim","onAudio","betDragonBtn","betDragonLb","ValueAnim1","betTieBtn","ValueAnim2","betTieLb","to","call","start","suitToResourceMap","listCardRes","listCardResHeart","listCardResclubs","listCardResdiamonds","cardList","spriteComponent","sprite","width","height","graphics","AvatarNode","addComponent","lightGray","fillColor","glowColor","BLACK","strokeColor","lineWidth","roundRect","fill","stroke","AvatarNode1","AvatarNode2","AvatarNode3","number","circleRadius","WHITE","circle","list","ToatalAv","centerX","centerY","pillHeight","pillWidth","pillRadius","bodyWidth","rect","arc","Math","PI","Avatar","posX","posY","posNode","buttonPub","buttonNode","buttonSpriteFrame","spriteNode","scale","addChild","Grid","gridSize","min","y","moveTo","lineTo","j","x","prefabMap","TigerWin","Under","DragonWin","Over","Tie","clearGrid","previousResult","doc","prefabType","cell","pref","clearGridNt","prefL","startCountdown","timeCountDown","timereset","countdownInterval","setInterval","clearInterval","Cancel","CancelBetTiger","CancelBetDragon","CancelBetTie","tweenChildrenToPosition","targetPosition","duration","children","forEach","child","removeFromParent","DragonNode","TigerNode","bankCard","WinNotice","DragonWinintro","off","ExplosionDra"],"mappings":"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","sourcesContent":["import { NewComponent } from \"./PlayerList\";\nimport {\n  _decorator,\n  Component,\n  Label,\n  Node,\n  tween,\n  Vec3,\n  Animation,\n  SpriteFrame,\n  Sprite,\n  math,\n  log,\n  Graphics,\n  Color,\n  instantiate,\n  Prefab,\n  Button,\n  CCInteger,\n  AudioSource,\n  director,\n} from \"cc\";\nimport { Chip } from \"./Chip\";\nimport { NetworkConnect } from \"./NetworkConnect\";\nimport { AudioController } from \"./AudioController\";\nimport { Create } from \"phaser\";\nconst { ccclass, property } = _decorator;\ninterface Document {\n  result: string;\n  // Định nghĩa các thuộc tính khác của mỗi document ở đây nếu cần\n}\n\n@ccclass(\"GameController\")\nexport class GameController extends Component {\n  @property({\n    type: Label,\n  })\n  private betTigerLb: Label;\n\n  @property({\n    type: Label,\n  })\n  private betDragonLb: Label;\n\n  @property({\n    type: Label,\n  })\n  private betTieLb: Label;\n\n  @property({\n    type: Label,\n  })\n  private UserName: Label;\n\n  @property({\n    type: Label,\n  })\n  private BalancerLb: Label;\n\n  @property({\n    type: Label,\n  })\n  private totalUserBet: Label[] = [];\n\n  @property({\n    type: Label,\n  })\n  private NameHost: Label;\n\n  @property({\n    type: Chip,\n  })\n  private chipNode: Chip;\n\n  @property({\n    type: Node,\n  })\n  private CardNodeL: Node;\n\n  @property({\n    type: Node,\n  })\n  private CardNodeR: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarNode: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarNode1: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarNode2: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarNode3: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarL1: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarL2: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarL3: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarL4: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarL5: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarL6: Node;\n\n  @property({\n    type: Node,\n  })\n  private GridL: Node;\n  @property({\n    type: Node,\n  })\n  private GridR: Node;\n\n  @property({\n    type: Node,\n  })\n  private ValueAnim: Node;\n\n  @property({\n    type: Node,\n  })\n  private avaliablebet: Node;\n\n  @property({\n    type: Node,\n  })\n  private scroll: Node;\n\n  @property({\n    type: Node,\n  })\n  private ValueAnim1: Node;\n\n  @property({\n    type: Node,\n  })\n  private ValueAnim2: Node;\n\n  @property({\n    type: Node,\n  })\n  private loadingPage: Node;\n\n  @property({\n    type: Node,\n  })\n  private bgHost: Node;\n\n  @property({\n    type: AudioSource,\n  })\n  private loadingAudio: AudioSource;\n\n  @property({\n    type: Animation,\n  })\n  private CardNodeAnim: Animation;\n\n  @property({\n    type: Animation,\n  })\n  private WinNotice: Animation;\n\n  @property({\n    type: Animation,\n  })\n  private DragonWinintro: Animation;\n\n  @property({\n    type: Animation,\n  })\n  private DragonNode: Animation;\n\n  @property({\n    type: Animation,\n  })\n  private TigerNode: Animation;\n\n  @property({\n    type: Animation,\n  })\n  private StartBet: Animation;\n\n  @property({\n    type: Animation,\n  })\n  private ExplosionDra: Animation;\n\n  @property({\n    type: Animation,\n  })\n  private hostAnim: Animation;\n\n  @property({\n    type: SpriteFrame,\n  })\n  private listCardRes: SpriteFrame[] = [];\n\n  @property({\n    type: SpriteFrame,\n  })\n  private listCardResHeart: SpriteFrame[] = [];\n\n  @property({\n    type: SpriteFrame,\n  })\n  private listCardResclubs: SpriteFrame[] = [];\n\n  @property({\n    type: SpriteFrame,\n  })\n  private listCardResdiamonds: SpriteFrame[] = [];\n\n  @property({\n    type: SpriteFrame,\n  })\n  private bankCard: SpriteFrame;\n\n  @property(Node)\n  pref: Node;\n\n  @property(Node)\n  prefL: Node;\n\n  @property(Prefab)\n  private Over: Prefab = null;\n\n  @property(Prefab)\n  private Under: Prefab = null;\n\n  @property(Prefab)\n  private Tie: Prefab = null;\n\n  // private countDownLb: Label;\n  @property({\n    type: Node,\n  })\n  private ToatalAv: Node[] = [];\n\n  @property({\n    type: Node,\n  })\n  private ToatalUser: Node[] = [];\n\n  @property({\n    type: Node,\n  })\n  private PayUser: Node[] = [];\n\n  @property({\n    type: Label,\n  })\n  private BalanceList: Label[] = [];\n\n  @property({\n    type: Label,\n  })\n  private TotalBetLB: Label[] = [];\n\n  @property({\n    type: SpriteFrame,\n  })\n  private PayUserSprite: SpriteFrame[] = [];\n\n  @property({ type: [Button] })\n  listCancelBet: Button[] = [];\n\n  @property(NetworkConnect)\n  private NetworkConnect: NetworkConnect;\n\n  @property({\n    type: AudioController,\n  })\n  private AudioController: AudioController;\n\n  private UserBetTigerIcon: number = 0;\n  private UserBetDragonIcon: number = 0;\n  private UserBetTieIcon: number = 0;\n  private clonePosCardL: Vec3 = new Vec3();\n  private clonePosCardR: Vec3 = new Vec3();\n  private randomValueCardR: number = 0;\n  private randomValueCardL: number = 0;\n  private balanceUser: number = 300;\n  private currentCol = 0;\n  private currentRow = 0;\n  private currentRowClone = 0;\n  private currentColL = 0;\n  private currentRowL = 0;\n  previousPrefabType = null;\n  previousPrefabTypeL = null;\n  winIntroType;\n  private numRows: number = 6;\n  private numCols: number = 20;\n  private cellWidth: number = 27;\n  private cellHeight: number = 30;\n  private countdownTimerBet: number = 30;\n  private cloneBalance: number = 0;\n  private GameEnd: boolean = false;\n  private GameStateStart: boolean = false;\n  private GameStateIdle: boolean = false;\n  private GameStateReuslt: boolean = false;\n  private GameStateFight: boolean = false;\n  private GameStatePayOut: boolean = false;\n  private GameStateStopBet: boolean = false;\n  private checkSateCurrent: boolean = false;\n  private checkBettedTiger: boolean = false;\n  private checkBettedDragon: boolean = false;\n  private checkBettedTie: boolean = false;\n  private loggedInUsername;\n  private sessionId;\n  private currentHostName;\n  private assignUserName: boolean = false;\n  private assignHostName: boolean = false;\n  private spriteFrame;\n  private spriteFrameR;\n  private cardSuit;\n  private cardValue;\n  private cardTigerSuit;\n  private cardTigerValue;\n  private cardImg = false;\n  private Tiewarn = false;\n  private result;\n  private host = false;\n\n  log3;\n  onLoad() {\n    this.clonePosCardL = this.CardNodeL.position.clone();\n    this.clonePosCardR = this.CardNodeR.position.clone();\n    this.shuffelCard();\n    this.drawRectangle();\n    this.drawRectangle1();\n    this.drawRectangle2();\n    this.drawRectangle3();\n    this.drawRectangleTotalUser(0);\n    this.drawRectangleTotalUser(1);\n    this.drawRectangleTotalUser(2);\n\n    this.drawRectanglel(this.AvatarL1);\n    this.drawRectanglel(this.AvatarL2);\n    this.drawRectanglel(this.AvatarL3);\n    this.drawRectanglel(this.AvatarL4);\n    this.drawRectanglel(this.AvatarL5);\n    this.drawRectanglel(this.AvatarL6);\n    this.drawGrid(this.GridL);\n    this.drawGrid(this.GridR);\n    this.drawRectangleTotal(0);\n    this.drawRectangleTotal(1);\n    this.drawRectangleTotal(2);\n    this.AudioController.settingAudio(0);\n    this.cardSuit = \"1\";\n    this.cardTigerSuit = \"1\";\n  }\n\n  update(deltaTime: number) {\n    if (this.cardImg === false) {\n      this.NetworkConnect.room.onMessage(\"result\", (message) => {\n        console.log(message.result);\n        this.cardTigerSuit = message.dragonCard.suit;\n        this.cardTigerSuit = message.tigerCard.suit;\n        this.cardValue = message.dragonCard.value;\n        this.cardTigerValue = message.tigerCard.value;\n        this.result = message.result;\n        // this.cardImg = true;\n        this.displayImages();\n        this.displayImagesCardR();\n      });\n\n      // Đặt cờ để biết rằng sự kiện đã được thiết lập\n    }\n    if (this.NetworkConnect.balanceUser) {\n      if (this.assignUserName === false) {\n        this.sessionId = this.NetworkConnect.room.state.players.get(\n          this.NetworkConnect.room.sessionId\n        );\n        this.assignUserName = true;\n      }\n\n      this.BalancerLb.string = this.sessionId.balance;\n      this.TotalBetLB[0].string = this.NetworkConnect.betTiger.toString();\n      this.TotalBetLB[1].string = this.NetworkConnect.betDragon.toString();\n      this.TotalBetLB[2].string = this.NetworkConnect.betTie.toString();\n      this.totalUserBet[0].string =\n        this.NetworkConnect.totaluserBetTiger.toString();\n      this.totalUserBet[1].string =\n        this.NetworkConnect.totaluserBetDragon.toString();\n      this.totalUserBet[2].string =\n        this.NetworkConnect.totaluserBetTie.toString();\n    }\n\n    if (\n      this.NetworkConnect.room &&\n      this.NetworkConnect.room.sessionId !== undefined\n    ) {\n      const player = this.NetworkConnect.room.state.players.get(\n        this.NetworkConnect.room.sessionId\n      );\n      if (player && player.displayName) {\n        this.UserName.string = player.displayName;\n      } else {\n        console.warn(\n          `Display name not found for sessionId ${this.NetworkConnect.room.sessionId}`\n        );\n      }\n    }\n    if (\n      this.NetworkConnect &&\n      this.NetworkConnect.room &&\n      this.NetworkConnect.room.state &&\n      this.NetworkConnect.room.state.players\n    ) {\n      const player = this.NetworkConnect.room.state.players.get(\n        this.NetworkConnect.currentHost\n      );\n      if (player && player.displayName) {\n        this.currentHostName = player.displayName;\n      } else {\n        console.warn(\n          `Display name not found for currentHost ${this.NetworkConnect.currentHost}`\n        );\n      }\n    } else {\n      console.error(\n        \"NetworkConnect or its properties are not properly initialized.\"\n      );\n    }\n    if (\n      this.NetworkConnect.room &&\n      this.NetworkConnect.room.sessionId === this.NetworkConnect.currentHost\n    ) {\n      this.chipNode.node.active = false;\n      this.avaliablebet.active = true;\n      this.scroll.getComponent(Sprite).color = new Color(104, 104, 104, 230);\n      this.NameHost.string = this.currentHostName;\n    } else {\n      this.chipNode.node.active = true;\n      this.avaliablebet.active = false;\n      this.scroll.getComponent(Sprite).color = new Color(255, 255, 255, 255);\n      this.NameHost.string = this.currentHostName;\n    }\n    if (\n      this.NetworkConnect.gameState === \"idle\" &&\n      this.GameStateIdle === false\n    ) {\n      if (\n        this.NetworkConnect.room &&\n        this.NetworkConnect.room.sessionId !== this.NetworkConnect.currentHost\n      ) {\n        this.host = false;\n      }\n      console.log(\"HostStatus:;;;;;;;;;\", this.host);\n\n      if (\n        this.NetworkConnect.room &&\n        this.NetworkConnect.room.sessionId === this.NetworkConnect.currentHost\n      ) {\n        if (this.host === false) {\n          this.bgHost.active = true;\n          this.hostAnim.play();\n          setTimeout(() => {\n            this.bgHost.active = false;\n          }, 1730);\n          // this.hostAnim.node.active = true;\n          this.hostAnim.on(Animation.EventType.FINISHED, () => {\n            // this.hostAnim.node.active = false;\n          });\n          this.host = true;\n        }\n      }\n      this.NetworkConnect.room.send(\"getHistories\");\n      this.NetworkConnect.room.onMessage(\"histories\", (message) => {\n        // console.log(\"History\", message.documents[0].result);\n        // console.log(\"History\", message.documents[0].result2);\n        this.createGridNot(message.documents);\n        this.createGrid(message.documents);\n      });\n      this.RestartBalnce();\n      this.checkSateCurrent = true;\n      this.UserName.string = this.NetworkConnect.room.sessionId;\n      this.Idle();\n      this.GameEnd = false;\n      this.GameStateIdle = true;\n      this.GameStateReuslt = false;\n      this.GameStateFight = false;\n      this.GameStateStopBet = false;\n      this.Tiewarn = false;\n      // this.cardImg = false;\n    }\n    if (this.NetworkConnect.gameState === \"startBetting\") {\n      this.CardNodeAnim.node.active = false;\n      this.CardNodeL.active = true;\n      this.CardNodeR.active = true;\n      this.checkSateCurrent = true;\n    }\n\n    if (\n      this.NetworkConnect.gameState === \"startBetting\" &&\n      this.GameStateStart === false\n    ) {\n      this.StartBet.node.active = true;\n      this.StartBetting();\n      this.NetworkConnect.room.send(\"getHistories\");\n      this.NetworkConnect.room.onMessage(\"histories\", (message) => {\n        console.log(\"History\", message.documents[0].result);\n        this.createGridNot(message.documents);\n        this.createGrid(message.documents);\n      });\n      // if (this.host === false) {\n      //   this.bgHost.active = true;\n      //   this.hostAnim.play();\n      //   setTimeout(() => {\n      //     this.bgHost.active = false;\n      //   }, 1730);\n      //   this.hostAnim.node.active = true;\n      //   this.hostAnim.on(Animation.EventType.FINISHED, () => {\n      //     // this.hostAnim.node.active = false;\n      //   });\n      //   this.host = true;\n      // }\n      this.GameStateStart = true;\n    }\n\n    if (this.checkSateCurrent === true) {\n      this.loadingPage.active = false;\n      this.loadingAudio.volume = 0;\n      this.AudioController.settingAudio(1);\n    }\n\n    if (\n      this.NetworkConnect.gameState === \"stopBetting\" &&\n      this.GameStateStopBet === false\n    ) {\n      this.GameStateStart = false;\n      this.stopBetting();\n      this.GameStateStopBet = true;\n    }\n\n    if (\n      this.NetworkConnect.gameState === \"fight\" &&\n      this.GameStateFight === false\n    ) {\n      this.fight();\n      this.GameStateFight = true;\n    }\n    if (\n      this.NetworkConnect.gameState === \"showResult\" &&\n      this.GameStateReuslt === false\n    ) {\n      this.StartBet.node.active = false;\n      this.shownResult();\n      this.GameStateReuslt = true;\n    }\n    if (\n      this.NetworkConnect.gameState === \"payout\" &&\n      this.GameStatePayOut === false\n    ) {\n      for (let i = 0; i < this.NetworkConnect.ListLabel.length; i++) {\n        this.NetworkConnect.ListLabel[i].node.removeAllChildren();\n      }\n      // this.createGridNot();\n      // this.createGrid();\n      this.GameStatePayOut = true;\n    }\n    if (this.cloneBalance > 0) {\n      this.listCancelBet[0].node.active = true;\n    } else {\n      this.listCancelBet[0].node.active = false;\n    }\n  }\n\n  private addScore(Score: number, betLB: Label, betValueIcon: number) {\n    if (this.balanceUser >= Score) {\n      betValueIcon = betValueIcon + Score;\n      betLB.string = betValueIcon.toString();\n    }\n  }\n\n  private betTigerBtn() {\n    if (\n      this.balanceUser >= this.chipNode.UserBet &&\n      this.GameEnd === false &&\n      this.checkBettedDragon === false &&\n      this.checkBettedTie === false\n    ) {\n      if (this.chipNode.UserBet !== 0) {\n        this.checkBettedTiger = true;\n        this.NetworkConnect.room.send(\n          \"Bet\",\n          JSON.stringify({ betAmount: this.chipNode.UserBet, betType: \"Tiger\" })\n        );\n        this.ToatalUser[2].active = true;\n        this.addScore(\n          this.chipNode.UserBet,\n          this.betTigerLb,\n          this.UserBetTigerIcon\n        );\n        this.UserBetTigerIcon += this.chipNode.UserBet;\n        this.createSpriteNode(-406, 200, this.ValueAnim);\n\n        this.listCancelBet[1].node.active = true;\n      }\n\n      this.AudioController.onAudio(8);\n    }\n  }\n\n  private betDragonBtn() {\n    if (\n      this.balanceUser >= this.chipNode.UserBet &&\n      this.GameEnd === false &&\n      this.checkBettedTiger === false &&\n      this.checkBettedTie === false\n    ) {\n      if (this.chipNode.UserBet !== 0) {\n        this.checkBettedDragon = true;\n        this.NetworkConnect.room.send(\n          \"Bet\",\n          JSON.stringify({\n            betAmount: this.chipNode.UserBet,\n            betType: \"Dragon\",\n          })\n        );\n        this.addScore(\n          this.chipNode.UserBet,\n          this.betDragonLb,\n          this.UserBetDragonIcon\n        );\n        this.UserBetDragonIcon += this.chipNode.UserBet;\n\n        this.ToatalUser[0].active = true;\n        this.listCancelBet[3].node.active = true;\n        this.createSpriteNode(-951, 193, this.ValueAnim1);\n      }\n      this.AudioController.onAudio(8);\n    }\n  }\n\n  private betTieBtn() {\n    if (\n      this.balanceUser >= this.chipNode.UserBet &&\n      this.GameEnd === false &&\n      this.checkBettedDragon === false &&\n      this.checkBettedTiger === false\n    ) {\n      if (this.chipNode.UserBet !== 0) {\n        this.checkBettedTie = true;\n        this.NetworkConnect.room.send(\n          \"Bet\",\n          JSON.stringify({ betAmount: this.chipNode.UserBet, betType: \"Tie\" })\n        );\n\n        this.listCancelBet[2].node.active = true;\n        this.createSpriteNode(-670, 221, this.ValueAnim2);\n        this.ToatalUser[1].active = true;\n        this.addScore(\n          this.chipNode.UserBet,\n          this.betTieLb,\n          this.UserBetTieIcon\n        );\n        this.UserBetTieIcon += this.chipNode.UserBet;\n      }\n\n      this.AudioController.onAudio(8);\n    }\n  }\n\n  private shuffelCard() {\n    tween(this.CardNodeL)\n      .to(0.4, { position: new Vec3(1, 70) })\n      .call(() => {\n        this.CardNodeL.active = false;\n        this.CardNodeR.active = false;\n        this.CardNodeAnim.node.active = true;\n        this.AudioController.onAudio(0);\n        this.RestartBalnce();\n      })\n      .start();\n\n    tween(this.CardNodeR)\n      .to(0.4, { position: new Vec3(1, 70) })\n      .start();\n  }\n\n  private displayImages(): void {\n    // Định nghĩa ánh xạ của các bộ bài tới các tài nguyên tương ứng\n    const suitToResourceMap: { [key: string]: SpriteFrame[] } = {\n      \"1\": this.listCardRes,\n      \"4\": this.listCardResHeart,\n      \"2\": this.listCardResclubs,\n      \"3\": this.listCardResdiamonds,\n    };\n\n    // this.NetworkConnect.room.onMessage(\n    //   \"result\",\n    //   (message: { dragonCard: { suit: string; value: number } }) => {\n    const cardList: SpriteFrame[] | undefined =\n      suitToResourceMap[this.cardSuit];\n    if (cardList) {\n      this.spriteFrame = cardList[this.cardValue - 1];\n    } else {\n      console.error(\"Unknown suit:\", this.cardSuit);\n      return;\n    }\n\n    // Lấy component Sprite từ CardNodeL\n    const spriteComponent = this.CardNodeL.getComponent(Sprite);\n    if (spriteComponent) {\n      // Gán trực tiếp spriteFrame cho component Sprite\n      spriteComponent.spriteFrame = this.spriteFrame;\n    } else {\n      console.error(\"Component Sprite bị thiếu trên CardNodeL!\");\n    }\n    //   }\n    // );\n  }\n\n  private displayImagesCardR() {\n    const suitToResourceMap: { [key: string]: SpriteFrame[] } = {\n      \"1\": this.listCardRes,\n      \"4\": this.listCardResHeart,\n      \"2\": this.listCardResclubs,\n      \"3\": this.listCardResdiamonds,\n    };\n    const cardList: SpriteFrame[] | undefined =\n      suitToResourceMap[this.cardTigerSuit];\n    if (cardList) {\n      this.spriteFrameR = cardList[this.cardTigerValue - 1];\n    } else {\n      console.error(\"Unknown suit:\", this.cardTigerSuit);\n      return;\n    }\n    const sprite = this.CardNodeR.getComponent(Sprite);\n    if (sprite && this.spriteFrameR) {\n      sprite.spriteFrame = this.spriteFrameR;\n    } else {\n      console.error(\"Sprite or SpriteFrame is missing!\");\n    }\n    //   }\n    // );\n  }\n\n  // private displayImagesCardR() {\n  //   const suitToResourceMap: { [key: string]: SpriteFrame[] } = {\n  //     \"1\": this.listCardRes,\n  //     \"4\": this.listCardResHeart,\n  //     \"2\": this.listCardResclubs,\n  //     \"3\": this.listCardResdiamonds,\n  //   };\n  //   console.log(\"aaaaaaaaaaaaaaaaaaa\");\n\n  //   this.NetworkConnect.room.onMessage(\n  //     \"result\",\n  //     (message: { tigerCard: { suit: string; value: number } }) => {\n  //       console.log(\"Received message:\", message);\n\n  //       const cardList: SpriteFrame[] | undefined =\n  //         suitToResourceMap[message.tigerCard.suit];\n  //       if (cardList) {\n  //         this.spriteFrameR = cardList[message.tigerCard.value - 1];\n  //         console.log(\"SpriteFrame selected:\", this.spriteFrameR);\n  //       } else {\n  //         console.error(\"Unknown suit:\", message.tigerCard.suit);\n  //         return;\n  //       }\n\n  //       const sprite = this.CardNodeR.getComponent(Sprite);\n  //       if (sprite && this.spriteFrameR) {\n  //         sprite.spriteFrame = this.spriteFrameR;\n  //         console.log(\"Sprite frame set successfully.\");\n  //       } else {\n  //         console.error(\"Sprite or SpriteFrame is missing!\");\n  //       }\n  //     }\n  //   );\n  // }\n\n  drawRectangle() {\n    const width: number = 250;\n    const height: number = 120;\n    const graphics = this.AvatarNode.addComponent(Graphics);\n    const lightGray = new Color(116, 116, 116, 100);\n    graphics.fillColor = lightGray;\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 5;\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\n    graphics.fill();\n    graphics.stroke();\n  }\n\n  drawRectangle1() {\n    const width: number = 220;\n    const height: number = 110;\n    const graphics = this.AvatarNode1.addComponent(Graphics);\n    const lightGray = new Color(116, 116, 116, 100);\n    graphics.fillColor = lightGray;\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 5;\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\n    graphics.fill();\n    graphics.stroke();\n  }\n\n  drawRectangle2() {\n    const width: number = 220;\n    const height: number = 110;\n    const graphics = this.AvatarNode2.addComponent(Graphics);\n    const lightGray = new Color(116, 116, 116, 100);\n    graphics.fillColor = lightGray;\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 5;\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\n    graphics.fill();\n    graphics.stroke();\n  }\n\n  drawRectangle3() {\n    const width: number = 220;\n    const height: number = 110;\n    const graphics = this.AvatarNode3.addComponent(Graphics);\n    const lightGray = new Color(116, 116, 116, 100);\n    graphics.fillColor = lightGray;\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 5;\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\n    graphics.fill();\n    graphics.stroke();\n  }\n\n  drawRectangleTotalUser(number: number) {\n    const width: number = 60;\n    const height: number = 20;\n    const graphics = this.ToatalUser[number].addComponent(Graphics);\n    const lightGray = new Color(0, 0, 0, 255);\n    graphics.fillColor = lightGray;\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 5;\n    graphics.roundRect(-width / 2, -height / 2, width, height, 2);\n    graphics.fill();\n    graphics.stroke();\n\n    const circleRadius: number = 10;\n    graphics.fillColor = Color.WHITE; // Màu trắng\n    graphics.strokeColor = Color.BLACK; // Viền màu đen\n    graphics.circle(-20, 0, circleRadius); // Vẽ hình tròn tại tọa độ (0,0) với bán kính circleRadius\n    graphics.fill(); // Tô màu\n    graphics.stroke(); // Vẽ viền\n  }\n  private drawRectangleTotal(list: number) {\n    const width: number = 100;\n    const height: number = 70;\n    const graphics = this.ToatalAv[list].addComponent(Graphics);\n    const lightGray = new Color(0, 0, 0, 255);\n    graphics.fillColor = lightGray;\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 1;\n\n    // Tính toán các điểm để vẽ viên thuốc\n    const centerX = 0;\n    const centerY = 0;\n    const pillHeight = height * 0.6; // Chiều cao của viên thuốc\n    const pillWidth = width * 0.8; // Chiều rộng của viên thuốc\n    const pillRadius = pillHeight / 2; // Bán kính của đầu viên thuốc\n    const bodyWidth = width * 0.5; // Chiều rộng của phần thân viên thuốc\n\n    // Vẽ phần thân của viên thuốc\n    graphics.rect(\n      centerX - bodyWidth / 2,\n      centerY - pillRadius,\n      bodyWidth,\n      pillHeight\n    );\n\n    // Vẽ đầu viên thuốc bên trái\n    graphics.arc(\n      centerX - pillWidth / 2 + pillRadius,\n      centerY,\n      pillRadius,\n      -Math.PI / 2,\n      Math.PI / 2,\n      false\n    );\n\n    // Vẽ đầu viên thuốc bên phải\n    graphics.arc(\n      centerX + pillWidth / 2 - pillRadius,\n      centerY,\n      pillRadius,\n      Math.PI / 2,\n      -Math.PI / 2,\n      false\n    );\n\n    graphics.fill(); // Đổ màu\n    graphics.stroke(); // Vẽ viền\n  }\n  drawRectanglel(Avatar: Node) {\n    const width: number = 220;\n    const height: number = 100;\n    const graphics = Avatar.addComponent(Graphics);\n\n    const lightGray = new Color(116, 116, 116, 100);\n    graphics.fillColor = lightGray;\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 5;\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\n    graphics.fill();\n    graphics.stroke();\n  }\n\n  createSpriteNode(posX, posY, posNode) {\n    // Kiểm tra xem chipNode và buttonPub đã được xác định chưa\n    if (this.chipNode && this.chipNode.buttonPub) {\n      const buttonNode = this.chipNode.buttonPub.node;\n\n      // Kiểm tra xem buttonNode và spriteFrame có tồn tại không\n      if (buttonNode && buttonNode.getComponent(Sprite)) {\n        const buttonSpriteFrame = buttonNode.getComponent(Sprite).spriteFrame;\n        const spriteNode = new Node(\"SpriteNode\");\n        spriteNode.scale = new Vec3(0.5, 0.5);\n        const spriteComponent = spriteNode.addComponent(Sprite);\n        spriteComponent.spriteFrame = buttonSpriteFrame;\n        posNode.addChild(spriteNode);\n        // Bắt đầu tween animation sau khi spriteNode đã được thêm vào posNode\n        tween(spriteNode)\n          .to(0.3, { position: new Vec3(posX, posY) })\n          .start();\n      } else {\n        console.error(\"Button node or sprite frame is undefined\");\n      }\n    } else {\n      return;\n    }\n  }\n  drawGrid(Grid: Node) {\n    const numRows: number = this.numRows;\n    const numCols: number = this.numCols;\n    const gridSize: number = Math.min(575 / numCols, 200 / numRows); // Kích thước ô vuông\n    const cellWidth: number = this.cellWidth; // Chiều rộng của mỗi ô\n    const cellHeight: number = this.cellHeight; // Chiều cao của mỗi ô\n\n    const graphics = Grid.addComponent(Graphics);\n    const lightGray = new Color(116, 116, 116, 50);\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 4;\n\n    // Vẽ các đường ngang\n    for (let i = 0; i <= numRows; i++) {\n      const y = i * cellHeight - (numRows * cellHeight) / 2; // Đặt lưới vào giữa theo chiều cao\n      graphics.moveTo((-numCols * cellWidth) / 2, y);\n      graphics.lineTo((numCols * cellWidth) / 2, y);\n      graphics.stroke();\n    }\n\n    for (let j = 0; j <= numCols; j++) {\n      const x = j * cellWidth - (numCols * cellWidth) / 2; // Đặt lưới vào giữa theo chiều rộng\n      graphics.moveTo(x, (-numRows * cellHeight) / 2);\n      graphics.lineTo(x, (numRows * cellHeight) / 2);\n      graphics.stroke();\n    }\n\n    // Tô màu cho lưới\n    graphics.fillColor = lightGray;\n    graphics.rect(\n      (-numCols * cellWidth) / 2,\n      (-numRows * cellHeight) / 2,\n      numCols * cellWidth,\n      numRows * cellHeight\n    );\n    graphics.fill();\n  }\n\n  // private createGrid(documents: Document[]) {\n  //   let prefabType;\n  //   // if (this.NetworkConnect.result === \"Tie\") {\n  //   //   prefabType = this.Tie;\n  //   // } else if (this.NetworkConnect.result === \"tigerWin\") {\n  //   //   prefabType = this.Under;\n  //   // } else if (this.NetworkConnect.result === \"dragonWin\") {\n  //   //   prefabType = this.Over;\n  //   // }\n  //   // if (this.result === \"Tie\") {\n  //   //   prefabType = this.Tie;\n  //   // } else if (this.result === \"tigerWin\") {\n  //   //   prefabType = this.Under;\n  //   // } else if (this.result === \"dragonWin\") {\n  //   //   prefabType = this.Over;\n  //   // }\n  //   const prefabMap: { [key: string]: any } = {\n  //     TigerWin: this.Under,\n  //     DragonWin: this.Over,\n  //     Tie: this.Tie,\n  //   };\n\n  //   this.clearGridNt();\n  //   this.currentRowL = 0;\n  //   this.currentColL = 0;\n  //   for (const doc of documents[0].result) {\n  //     const prefabType = prefabMap[doc];\n  //     if (prefabType) {\n  //       if (\n  //         this.previousPrefabType !== null &&\n  //         prefabType.name !== this.previousPrefabType.name\n  //       ) {\n  //         this.currentCol++;\n  //         this.currentRow = 0;\n  //         this.currentRowClone = 0;\n  //         if (this.currentCol >= this.numCols) {\n  //           this.clearGrid();\n  //           this.currentCol = 0;\n  //         }\n  //       }\n  //       const cell = instantiate(prefabType);\n  //       const posX = this.currentCol * this.cellWidth;\n  //       const posY = -this.currentRow * this.cellHeight;\n  //       cell.position = new Vec3(posX, posY);\n  //       this.pref.addChild(cell);\n  //       this.previousPrefabType = prefabType;\n  //       this.currentRowClone++;\n  //       if (this.currentRow < 5) {\n  //         this.currentRow++;\n  //       }\n  //       // console.log(\"col\", this.currentCol);\n  //     } else {\n  //       console.error(`Prefab type not found for result: ${doc}`);\n  //     }\n  //   }\n\n  //   // if (\n  //   //   this.previousPrefabType !== null &&\n  //   //   prefabType.name !== this.previousPrefabType.name\n  //   // ) {\n  //   //   this.currentCol++;\n  //   //   this.currentRow = 0;\n  //   //   this.currentRowClone = 0;\n  //   //   if (this.currentCol >= this.numCols) {\n  //   //     this.clearGrid();\n  //   //     this.currentCol = 0;\n  //   //   }\n  //   // }\n\n  //   // const cell = instantiate(prefabType);\n  //   // const posX = this.currentCol * this.cellWidth;\n  //   // const posY = -this.currentRow * this.cellHeight;\n  //   // cell.position = new Vec3(posX, posY);\n  //   // this.pref.addChild(cell);\n\n  //   // this.previousPrefabType = prefabType;\n  //   // this.currentRowClone++;\n  //   // if (this.currentRow < 5) {\n  //   //   this.currentRow++;\n  //   // }\n  // }\n\n  // private clearGrid() {\n  //   this.pref.removeAllChildren();\n  // }\n\n  private createGrid(documents: Document[]) {\n    // Ánh xạ các giá trị với prefab tương ứng\n    const prefabMap: { [key: string]: any } = {\n      TigerWin: this.Under,\n      DragonWin: this.Over,\n      Tie: this.Tie,\n    };\n\n    this.clearGrid();\n    this.currentRow = 0;\n    this.currentCol = 0;\n    let previousResult = null;\n\n    for (const doc of documents[0].result) {\n      const prefabType = prefabMap[doc];\n      if (prefabType) {\n        if (previousResult !== null && doc !== previousResult) {\n          this.currentCol++;\n          this.currentRow = 0;\n        } else if (this.currentRow >= this.numRows) {\n          // If the current column is full and the result is the same as previous\n          this.currentCol++;\n          this.currentRow = this.numRows - 1;\n        }\n\n        if (this.currentCol >= this.numCols) {\n          this.clearGrid();\n          this.currentCol = 0;\n        }\n\n        const cell = instantiate(prefabType);\n        const posX = this.currentCol * this.cellWidth;\n        const posY = -this.currentRow * this.cellHeight;\n        cell.position = new Vec3(posX, posY);\n        this.pref.addChild(cell);\n        this.currentRow++;\n        previousResult = doc;\n      } else {\n        console.error(`Prefab type not found for result: ${doc}`);\n      }\n    }\n  }\n\n  private clearGrid() {\n    this.pref.removeAllChildren();\n  }\n\n  private createGridNot(documents: Document[]) {\n    // Ánh xạ các giá trị với prefab tương ứng\n    const prefabMap: { [key: string]: any } = {\n      TigerWin: this.Under,\n      DragonWin: this.Over,\n      Tie: this.Tie,\n    };\n    this.clearGridNt();\n    this.currentRowL = 0;\n    this.currentColL = 0;\n    for (const doc of documents[0].result) {\n      const prefabType = prefabMap[doc];\n      if (prefabType) {\n        if (this.currentRowL >= this.numRows) {\n          this.currentColL++;\n          this.currentRowL = 0;\n          if (this.currentCol >= this.numCols) {\n            this.clearGridNt();\n            this.currentCol = 0;\n          }\n        }\n        // console.log(\"col\", this.currentCol);\n\n        const cell = instantiate(prefabType);\n        const posX = this.currentColL * this.cellWidth;\n        const posY = -this.currentRowL * this.cellHeight;\n        cell.position = new Vec3(posX, posY);\n        this.prefL.addChild(cell);\n        this.currentRowL++;\n      } else {\n        console.error(`Prefab type not found for result: ${doc}`);\n      }\n    }\n  }\n\n  private clearGridNt() {\n    this.prefL.removeAllChildren();\n  }\n\n  private startCountdown(timeCountDown: number, timereset: number) {\n    this.countdownTimerBet = 30;\n    const countdownInterval = setInterval(() => {\n      this.countdownTimerBet--;\n      if (this.countdownTimerBet <= 0) {\n        clearInterval(countdownInterval);\n      }\n    }, 1000);\n  }\n\n  private Cancel() {\n    if (this.GameEnd === false) {\n      this.ToatalUser[0].active = false;\n      this.ToatalUser[1].active = false;\n      this.ToatalUser[2].active = false;\n      this.listCancelBet[0].node.active = false;\n      this.listCancelBet[1].node.active = false;\n      this.listCancelBet[2].node.active = false;\n      this.listCancelBet[3].node.active = false;\n      this.UserBetDragonIcon = 0;\n      this.UserBetTieIcon = 0;\n      this.UserBetTigerIcon = 0;\n      this.balanceUser = this.balanceUser + this.cloneBalance;\n      this.cloneBalance = 0;\n      this.BalancerLb.string = this.balanceUser.toString();\n      this.betDragonLb.string = this.UserBetDragonIcon.toString();\n      this.betTigerLb.string = this.UserBetTigerIcon.toString();\n      this.betTieLb.string = this.UserBetTieIcon.toString();\n      this.ValueAnim.removeAllChildren();\n      this.ValueAnim1.removeAllChildren();\n      this.ValueAnim2.removeAllChildren();\n    }\n    this.AudioController.onAudio(7);\n  }\n\n  private RestartBalnce() {\n    this.checkBettedDragon = false;\n    this.checkBettedTiger = false;\n    this.checkBettedTie = false;\n    this.ToatalUser[0].active = false;\n    this.ToatalUser[1].active = false;\n    this.ToatalUser[2].active = false;\n    this.listCancelBet[0].node.active = false;\n    this.listCancelBet[1].node.active = false;\n    this.listCancelBet[2].node.active = false;\n    this.listCancelBet[3].node.active = false;\n    this.UserBetDragonIcon = 0;\n    this.UserBetTieIcon = 0;\n    this.UserBetTigerIcon = 0;\n    this.cloneBalance = 0;\n    this.betDragonLb.string = this.UserBetDragonIcon.toString();\n    this.betTigerLb.string = this.UserBetTigerIcon.toString();\n    this.betTieLb.string = this.UserBetTieIcon.toString();\n    this.ValueAnim.removeAllChildren();\n    this.ValueAnim1.removeAllChildren();\n    this.ValueAnim2.removeAllChildren();\n  }\n\n  private CancelBetTiger() {\n    if (this.GameEnd === false) {\n      this.NetworkConnect.room.send(\"cancel\");\n\n      this.checkBettedTiger = false;\n      this.ToatalUser[2].active = false;\n      this.listCancelBet[1].node.active = false;\n\n      this.cloneBalance = this.cloneBalance - this.UserBetTigerIcon;\n      this.balanceUser = this.balanceUser + this.UserBetTigerIcon;\n      this.BalancerLb.string = this.balanceUser.toString();\n      this.UserBetTigerIcon = 0;\n      this.betTigerLb.string = this.UserBetTigerIcon.toString();\n      this.ValueAnim.removeAllChildren();\n    }\n    this.AudioController.onAudio(7);\n  }\n\n  private CancelBetDragon() {\n    if (this.GameEnd === false) {\n      this.NetworkConnect.room.send(\"cancel\");\n      this.checkBettedDragon = false;\n      this.ToatalUser[0].active = false;\n      this.listCancelBet[3].node.active = false;\n      this.cloneBalance = this.cloneBalance - this.UserBetDragonIcon;\n      this.balanceUser = this.balanceUser + this.UserBetDragonIcon;\n      this.BalancerLb.string = this.balanceUser.toString();\n      this.UserBetDragonIcon = 0;\n      this.betDragonLb.string = this.UserBetDragonIcon.toString();\n      this.ValueAnim1.removeAllChildren();\n    }\n    this.AudioController.onAudio(7);\n  }\n\n  private CancelBetTie() {\n    if (this.GameEnd === false) {\n      this.NetworkConnect.room.send(\"cancel\");\n      this.NetworkConnect.room.onMessage(\"cancel\", (message) => {});\n      this.checkBettedTie = false;\n      this.ToatalUser[1].active = false;\n      this.listCancelBet[2].node.active = false;\n\n      this.cloneBalance = this.cloneBalance - this.UserBetTieIcon;\n      this.balanceUser = this.balanceUser + this.UserBetTieIcon;\n      this.BalancerLb.string = this.balanceUser.toString();\n      this.UserBetTieIcon = 0;\n      this.betTieLb.string = this.UserBetTieIcon.toString();\n      this.ValueAnim2.removeAllChildren();\n    }\n    this.AudioController.onAudio(7);\n  }\n\n  tweenChildrenToPosition(node: Node, targetPosition: Vec3, duration: number) {\n    node.children.forEach((child: Node) => {\n      tween(child)\n        .to(duration, { position: targetPosition })\n        .call(() => {\n          this.AudioController.onAudio(5);\n          child.removeFromParent();\n        })\n\n        .start();\n    });\n  }\n\n  private Idle() {\n    this.shuffelCard();\n    this.DragonNode.play(\"DragonIde\");\n    this.TigerNode.play(\"TigerIde\");\n    this.GameStatePayOut = false;\n    // this.GameStateStart = false;\n  }\n\n  private StartBetting() {\n    this.GameStateIdle = false;\n    this.CardNodeAnim.node.active = false;\n    this.CardNodeL.active = true;\n    this.CardNodeR.active = true;\n    this.CardNodeR.getComponent(Sprite).spriteFrame = this.bankCard;\n    this.CardNodeL.getComponent(Sprite).spriteFrame = this.bankCard;\n    this.StartBet.play(\"Startbet\");\n    tween(this.CardNodeL)\n      .to(0.4, { position: this.clonePosCardL })\n      .call(() => {\n        // this.GameEnd = false;\n        this.AudioController.onAudio(1);\n      })\n      .start();\n    tween(this.CardNodeR)\n      .to(0.4, { position: this.clonePosCardR })\n      .call(() => {})\n      .start();\n    // this.GameStateStart = true;\n  }\n\n  private stopBetting() {\n    this.StartBet.play(\"EndBet\");\n    this.AudioController.onAudio(2);\n    this.GameEnd = true;\n  }\n\n  private fight() {\n    this.WinNotice.play(\"FightAnim\");\n    this.winIntroType = \"FightAnim\";\n    this.WinNotice.on(Animation.EventType.FINISHED, () => {\n      if (this.result === \"tigerWin\" && this.winIntroType === \"FightAnim\") {\n        this.balanceUser = this.balanceUser + this.UserBetTigerIcon * 2;\n        this.BalancerLb.string = this.balanceUser.toString();\n        this.WinNotice.play(\"TigerWin\");\n        this.DragonWinintro.play(\"TigerIntro\");\n        this.winIntroType = \"TigerIntro\";\n        this.DragonWinintro.on(Animation.EventType.FINISHED, () => {\n          if (this.winIntroType === \"TigerIntro\") {\n            this.TigerNode.play(\"TigerAttack\");\n            this.TigerNode.on(Animation.EventType.FINISHED, () => {\n              this.DragonNode.play(\"DragonHurt\");\n              this.DragonNode.on(Animation.EventType.FINISHED, () => {\n                this.DragonNode.play(\"DragonIde\");\n                this.tweenChildrenToPosition(\n                  this.ValueAnim,\n                  new Vec3(30, 560),\n                  0.5\n                );\n                this.tweenChildrenToPosition(\n                  this.ValueAnim1,\n                  new Vec3(30, 560),\n                  0.5\n                );\n                this.tweenChildrenToPosition(\n                  this.ValueAnim2,\n                  new Vec3(30, 560),\n                  0.5\n                );\n              });\n\n              this.TigerNode.play(\"TigerIde\");\n              this.TigerNode.off(Animation.EventType.FINISHED);\n            });\n          }\n        });\n      }\n      if (this.result === \"dragonWin\" && this.winIntroType === \"FightAnim\") {\n        this.balanceUser = this.balanceUser + this.UserBetDragonIcon * 2;\n        this.BalancerLb.string = this.balanceUser.toString();\n        this.WinNotice.play(\"DragonWinIcon\");\n        this.DragonWinintro.play(\"DragonIntro\");\n        // Sử dụng biến để xác định loại WinIntro\n        this.winIntroType = \"DragonIntro\";\n        this.DragonWinintro.on(Animation.EventType.FINISHED, () => {\n          // Kiểm tra loại WinIntro\n          if (this.winIntroType === \"DragonIntro\") {\n            this.DragonNode.play(\"DragonAttack\");\n            this.AudioController.onAudio(12);\n            this.DragonNode.on(Animation.EventType.FINISHED, () => {\n              this.ExplosionDra.play();\n              this.AudioController.onAudio(10);\n              this.TigerNode.play(\"TigerHurt\");\n              this.TigerNode.on(Animation.EventType.FINISHED, () => {\n                this.TigerNode.play(\"TigerIde\");\n                this.tweenChildrenToPosition(\n                  this.ValueAnim,\n                  new Vec3(30, 560),\n                  0.5\n                );\n                this.tweenChildrenToPosition(\n                  this.ValueAnim1,\n                  new Vec3(30, 560),\n                  0.5\n                );\n                this.tweenChildrenToPosition(\n                  this.ValueAnim2,\n                  new Vec3(30, 560),\n                  0.5\n                );\n              });\n              this.DragonNode.play(\"DragonIde\");\n              this.DragonNode.off(Animation.EventType.FINISHED);\n            });\n          }\n        });\n      }\n      if (\n        this.result === \"Tie\" &&\n        this.winIntroType === \"FightAnim\" &&\n        this.Tiewarn === false\n      ) {\n        this.WinNotice.play(\"TieWin\");\n        this.tweenChildrenToPosition(this.ValueAnim, new Vec3(30, 560), 0.5);\n        this.tweenChildrenToPosition(this.ValueAnim1, new Vec3(30, 560), 0.5);\n        this.tweenChildrenToPosition(this.ValueAnim2, new Vec3(30, 560), 0.5);\n        this.Tiewarn = true;\n      }\n    });\n  }\n  private shownResult() {\n    if ((this.cardImg = true)) {\n      tween(this.CardNodeL)\n        .to(0.4, {\n          position: new Vec3(\n            this.CardNodeL.position.x + 100,\n            this.CardNodeL.position.y - 300\n          ),\n        })\n        .call(() => {\n          // this.displayImages();\n        })\n        .start();\n\n      tween(this.CardNodeR)\n        .to(0.4, {\n          position: new Vec3(\n            this.CardNodeR.position.x - 100,\n            this.CardNodeR.position.y - 300\n          ),\n        })\n        .call(() => {\n          // this.displayImagesCardR();\n          // this.createGrid();\n          // this.createGridNot();\n        })\n        .start();\n    }\n  }\n}\n"]}