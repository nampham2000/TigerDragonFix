{"version":3,"sources":["file:///C:/Users/Admin/OneDrive/Desktop/dragonfix/assets/Scripts/GameController.ts"],"names":["_decorator","Component","Label","Node","tween","Vec3","Animation","SpriteFrame","Sprite","Graphics","Color","instantiate","Prefab","Button","AudioSource","Chip","NetworkConnect","AudioController","ccclass","property","GameController","type","UserBetTigerIcon","UserBetDragonIcon","UserBetTieIcon","clonePosCardL","clonePosCardR","randomValueCardR","randomValueCardL","balanceUser","currentCol","currentRow","currentRowClone","currentColL","currentRowL","previousPrefabType","previousPrefabTypeL","winIntroType","numRows","numCols","cellWidth","cellHeight","countdownTimerBet","cloneBalance","GameEnd","GameStateStart","GameStateIdle","GameStateReuslt","GameStateFight","GameStatePayOut","GameStateStopBet","checkSateCurrent","checkBettedTiger","checkBettedDragon","checkBettedTie","loggedInUsername","sessionId","currentHostName","assignUserName","assignHostName","spriteFrame","spriteFrameR","cardSuit","cardValue","cardTigerSuit","cardTigerValue","cardImg","Tiewarn","result","host","log3","onLoad","CardNodeL","position","clone","CardNodeR","shuffelCard","drawRectangle","drawRectangle1","drawRectangle2","drawRectangle3","drawRectangleTotalUser","drawRectanglel","AvatarL1","AvatarL2","AvatarL3","AvatarL4","AvatarL5","AvatarL6","drawGrid","GridL","GridR","drawRectangleTotal","settingAudio","update","deltaTime","room","onMessage","message","console","log","dragonCard","suit","tigerCard","value","displayImages","displayImagesCardR","state","players","get","BalancerLb","string","balance","toFixed","TotalBetLB","betTiger","toString","betDragon","betTie","totalUserBet","totaluserBetTiger","totaluserBetDragon","totaluserBetTie","undefined","player","displayName","UserName","warn","currentHost","error","chipNode","node","active","avaliablebet","scroll","getComponent","color","NameHost","gameState","bgHost","hostAnim","play","setTimeout","on","EventType","FINISHED","send","createGridNot","documents","createGrid","RestartBalnce","Idle","CardNodeAnim","StartBet","StartBetting","loadingPage","loadingAudio","volume","stopBetting","fight","shownResult","i","ListLabel","length","removeAllChildren","ListLabelR","listCancelBet","addScore","Score","betLB","betValueIcon","betTigerBtn","UserBet","JSON","stringify","betAmount","betType","ToatalUser","betTigerLb","createSpriteNode","ValueAnim","onAudio","betDragonBtn","betDragonLb","ValueAnim1","betTieBtn","ValueAnim2","betTieLb","to","call","start","suitToResourceMap","listCardRes","listCardResHeart","listCardResclubs","listCardResdiamonds","cardList","spriteComponent","sprite","width","height","graphics","AvatarNode","addComponent","lightGray","fillColor","glowColor","BLACK","strokeColor","lineWidth","roundRect","fill","stroke","AvatarNode1","AvatarNode2","AvatarNode3","number","circleRadius","WHITE","circle","list","ToatalAv","centerX","centerY","pillHeight","pillWidth","pillRadius","bodyWidth","rect","arc","Math","PI","Avatar","posX","posY","posNode","buttonPub","buttonNode","buttonSpriteFrame","spriteNode","scale","addChild","Grid","gridSize","min","y","moveTo","lineTo","j","x","prefabMap","TigerWin","Under","DragonWin","Over","Tie","clearGrid","previousResult","doc","prefabType","cell","pref","clearGridNt","prefL","startCountdown","timeCountDown","timereset","countdownInterval","setInterval","clearInterval","Cancel","CancelBetTiger","CancelBetDragon","CancelBetTie","tweenChildrenToPosition","targetPosition","duration","children","forEach","child","removeFromParent","DragonNode","TigerNode","bankCard","WinNotice","DragonWinintro","off","ExplosionDra"],"mappings":"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","sourcesContent":["import { NewComponent } from \"./PlayerList\";\r\nimport {\r\n  _decorator,\r\n  Component,\r\n  Label,\r\n  Node,\r\n  tween,\r\n  Vec3,\r\n  Animation,\r\n  SpriteFrame,\r\n  Sprite,\r\n  math,\r\n  log,\r\n  Graphics,\r\n  Color,\r\n  instantiate,\r\n  Prefab,\r\n  Button,\r\n  CCInteger,\r\n  AudioSource,\r\n  director,\r\n} from \"cc\";\r\nimport { Chip } from \"./Chip\";\r\nimport { NetworkConnect } from \"./NetworkConnect\";\r\nimport { AudioController } from \"./AudioController\";\r\nimport { Create } from \"phaser\";\r\nconst { ccclass, property } = _decorator;\r\ninterface Document {\r\n  result: string;\r\n  // Định nghĩa các thuộc tính khác của mỗi document ở đây nếu cần\r\n}\r\n\r\n@ccclass(\"GameController\")\r\nexport class GameController extends Component {\r\n  @property({\r\n    type: Label,\r\n  })\r\n  private betTigerLb: Label;\r\n\r\n  @property({\r\n    type: Label,\r\n  })\r\n  private betDragonLb: Label;\r\n\r\n  @property({\r\n    type: Label,\r\n  })\r\n  private betTieLb: Label;\r\n\r\n  @property({\r\n    type: Label,\r\n  })\r\n  private UserName: Label;\r\n\r\n  @property({\r\n    type: Label,\r\n  })\r\n  private BalancerLb: Label;\r\n\r\n  @property({\r\n    type: Label,\r\n  })\r\n  private totalUserBet: Label[] = [];\r\n\r\n  @property({\r\n    type: Label,\r\n  })\r\n  private NameHost: Label;\r\n\r\n  @property({\r\n    type: Chip,\r\n  })\r\n  private chipNode: Chip;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private CardNodeL: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private CardNodeR: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private AvatarNode: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private AvatarNode1: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private AvatarNode2: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private AvatarNode3: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private AvatarL1: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private AvatarL2: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private AvatarL3: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private AvatarL4: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private AvatarL5: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private AvatarL6: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private GridL: Node;\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private GridR: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private ValueAnim: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private avaliablebet: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private scroll: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private ValueAnim1: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private ValueAnim2: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private loadingPage: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private bgHost: Node;\r\n\r\n  @property({\r\n    type: AudioSource,\r\n  })\r\n  private loadingAudio: AudioSource;\r\n\r\n  @property({\r\n    type: Animation,\r\n  })\r\n  private CardNodeAnim: Animation;\r\n\r\n  @property({\r\n    type: Animation,\r\n  })\r\n  private WinNotice: Animation;\r\n\r\n  @property({\r\n    type: Animation,\r\n  })\r\n  private DragonWinintro: Animation;\r\n\r\n  @property({\r\n    type: Animation,\r\n  })\r\n  private DragonNode: Animation;\r\n\r\n  @property({\r\n    type: Animation,\r\n  })\r\n  private TigerNode: Animation;\r\n\r\n  @property({\r\n    type: Animation,\r\n  })\r\n  private StartBet: Animation;\r\n\r\n  @property({\r\n    type: Animation,\r\n  })\r\n  private ExplosionDra: Animation;\r\n\r\n  @property({\r\n    type: Animation,\r\n  })\r\n  private hostAnim: Animation;\r\n\r\n  @property({\r\n    type: SpriteFrame,\r\n  })\r\n  private listCardRes: SpriteFrame[] = [];\r\n\r\n  @property({\r\n    type: SpriteFrame,\r\n  })\r\n  private listCardResHeart: SpriteFrame[] = [];\r\n\r\n  @property({\r\n    type: SpriteFrame,\r\n  })\r\n  private listCardResclubs: SpriteFrame[] = [];\r\n\r\n  @property({\r\n    type: SpriteFrame,\r\n  })\r\n  private listCardResdiamonds: SpriteFrame[] = [];\r\n\r\n  @property({\r\n    type: SpriteFrame,\r\n  })\r\n  private bankCard: SpriteFrame;\r\n\r\n  @property(Node)\r\n  pref: Node;\r\n\r\n  @property(Node)\r\n  prefL: Node;\r\n\r\n  @property(Prefab)\r\n  private Over: Prefab = null;\r\n\r\n  @property(Prefab)\r\n  private Under: Prefab = null;\r\n\r\n  @property(Prefab)\r\n  private Tie: Prefab = null;\r\n\r\n  // private countDownLb: Label;\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private ToatalAv: Node[] = [];\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private ToatalUser: Node[] = [];\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private PayUser: Node[] = [];\r\n\r\n  @property({\r\n    type: Label,\r\n  })\r\n  private BalanceList: Label[] = [];\r\n\r\n  @property({\r\n    type: Label,\r\n  })\r\n  private TotalBetLB: Label[] = [];\r\n\r\n  @property({\r\n    type: SpriteFrame,\r\n  })\r\n  private PayUserSprite: SpriteFrame[] = [];\r\n\r\n  @property({ type: [Button] })\r\n  listCancelBet: Button[] = [];\r\n\r\n  @property(NetworkConnect)\r\n  private NetworkConnect: NetworkConnect;\r\n\r\n  @property({\r\n    type: AudioController,\r\n  })\r\n  private AudioController: AudioController;\r\n\r\n  private UserBetTigerIcon: number = 0;\r\n  private UserBetDragonIcon: number = 0;\r\n  private UserBetTieIcon: number = 0;\r\n  private clonePosCardL: Vec3 = new Vec3();\r\n  private clonePosCardR: Vec3 = new Vec3();\r\n  private randomValueCardR: number = 0;\r\n  private randomValueCardL: number = 0;\r\n  private balanceUser: number = 300;\r\n  private currentCol = 0;\r\n  private currentRow = 0;\r\n  private currentRowClone = 0;\r\n  private currentColL = 0;\r\n  private currentRowL = 0;\r\n  previousPrefabType = null;\r\n  previousPrefabTypeL = null;\r\n  winIntroType;\r\n  private numRows: number = 6;\r\n  private numCols: number = 20;\r\n  private cellWidth: number = 27;\r\n  private cellHeight: number = 30;\r\n  private countdownTimerBet: number = 30;\r\n  private cloneBalance: number = 0;\r\n  private GameEnd: boolean = false;\r\n  private GameStateStart: boolean = false;\r\n  private GameStateIdle: boolean = false;\r\n  private GameStateReuslt: boolean = false;\r\n  private GameStateFight: boolean = false;\r\n  private GameStatePayOut: boolean = false;\r\n  private GameStateStopBet: boolean = false;\r\n  private checkSateCurrent: boolean = false;\r\n  private checkBettedTiger: boolean = false;\r\n  private checkBettedDragon: boolean = false;\r\n  private checkBettedTie: boolean = false;\r\n  private loggedInUsername;\r\n  private sessionId;\r\n  private currentHostName;\r\n  private assignUserName: boolean = false;\r\n  private assignHostName: boolean = false;\r\n  private spriteFrame;\r\n  private spriteFrameR;\r\n  private cardSuit;\r\n  private cardValue;\r\n  private cardTigerSuit;\r\n  private cardTigerValue;\r\n  private cardImg = false;\r\n  private Tiewarn = false;\r\n  private result;\r\n  private host = false;\r\n\r\n  log3;\r\n  onLoad() {\r\n    this.clonePosCardL = this.CardNodeL.position.clone();\r\n    this.clonePosCardR = this.CardNodeR.position.clone();\r\n    this.shuffelCard();\r\n    this.drawRectangle();\r\n    this.drawRectangle1();\r\n    this.drawRectangle2();\r\n    this.drawRectangle3();\r\n    this.drawRectangleTotalUser(0);\r\n    this.drawRectangleTotalUser(1);\r\n    this.drawRectangleTotalUser(2);\r\n\r\n    this.drawRectanglel(this.AvatarL1);\r\n    this.drawRectanglel(this.AvatarL2);\r\n    this.drawRectanglel(this.AvatarL3);\r\n    this.drawRectanglel(this.AvatarL4);\r\n    this.drawRectanglel(this.AvatarL5);\r\n    this.drawRectanglel(this.AvatarL6);\r\n    this.drawGrid(this.GridL);\r\n    this.drawGrid(this.GridR);\r\n    this.drawRectangleTotal(0);\r\n    this.drawRectangleTotal(1);\r\n    this.drawRectangleTotal(2);\r\n    this.AudioController.settingAudio(0);\r\n    this.cardSuit = \"1\";\r\n    this.cardTigerSuit = \"1\";\r\n  }\r\n\r\n  update(deltaTime: number) {\r\n    if (this.cardImg === false) {\r\n      this.NetworkConnect.room.onMessage(\"result\", (message) => {\r\n        console.log(message.result);\r\n        this.cardTigerSuit = message.dragonCard.suit;\r\n        this.cardTigerSuit = message.tigerCard.suit;\r\n        this.cardValue = message.dragonCard.value;\r\n        this.cardTigerValue = message.tigerCard.value;\r\n        this.result = message.result;\r\n        // this.cardImg = true;\r\n        this.displayImages();\r\n        this.displayImagesCardR();\r\n      });\r\n\r\n      // Đặt cờ để biết rằng sự kiện đã được thiết lập\r\n    }\r\n    if (this.NetworkConnect.balanceUser) {\r\n      if (this.assignUserName === false) {\r\n        this.sessionId = this.NetworkConnect.room.state.players.get(\r\n          this.NetworkConnect.room.sessionId\r\n        );\r\n        this.assignUserName = true;\r\n      }\r\n\r\n      this.BalancerLb.string = this.sessionId.balance.toFixed(2);\r\n      this.TotalBetLB[0].string = this.NetworkConnect.betTiger.toString();\r\n      this.TotalBetLB[1].string = this.NetworkConnect.betDragon.toString();\r\n      this.TotalBetLB[2].string = this.NetworkConnect.betTie.toString();\r\n      this.totalUserBet[0].string =\r\n        this.NetworkConnect.totaluserBetTiger.toString();\r\n      this.totalUserBet[1].string =\r\n        this.NetworkConnect.totaluserBetDragon.toString();\r\n      this.totalUserBet[2].string =\r\n        this.NetworkConnect.totaluserBetTie.toString();\r\n    }\r\n\r\n    if (\r\n      this.NetworkConnect.room &&\r\n      this.NetworkConnect.room.sessionId !== undefined\r\n    ) {\r\n      const player = this.NetworkConnect.room.state.players.get(\r\n        this.NetworkConnect.room.sessionId\r\n      );\r\n      if (player && player.displayName) {\r\n        this.UserName.string = player.displayName;\r\n      } else {\r\n        console.warn(\r\n          `Display name not found for sessionId ${this.NetworkConnect.room.sessionId}`\r\n        );\r\n      }\r\n    }\r\n    if (\r\n      this.NetworkConnect &&\r\n      this.NetworkConnect.room &&\r\n      this.NetworkConnect.room.state &&\r\n      this.NetworkConnect.room.state.players\r\n    ) {\r\n      const player = this.NetworkConnect.room.state.players.get(\r\n        this.NetworkConnect.currentHost\r\n      );\r\n      if (player && player.displayName) {\r\n        this.currentHostName = player.displayName;\r\n      } else {\r\n        console.warn(\r\n          `Display name not found for currentHost ${this.NetworkConnect.currentHost}`\r\n        );\r\n      }\r\n    } else {\r\n      console.error(\r\n        \"NetworkConnect or its properties are not properly initialized.\"\r\n      );\r\n    }\r\n    if (\r\n      this.NetworkConnect.room &&\r\n      this.NetworkConnect.room.sessionId === this.NetworkConnect.currentHost\r\n    ) {\r\n      this.chipNode.node.active = false;\r\n      this.avaliablebet.active = true;\r\n      this.scroll.getComponent(Sprite).color = new Color(104, 104, 104, 230);\r\n      this.NameHost.string = this.currentHostName;\r\n    } else {\r\n      this.chipNode.node.active = true;\r\n      this.avaliablebet.active = false;\r\n      this.scroll.getComponent(Sprite).color = new Color(255, 255, 255, 255);\r\n      this.NameHost.string = this.currentHostName;\r\n    }\r\n    if (\r\n      this.NetworkConnect.gameState === \"idle\" &&\r\n      this.GameStateIdle === false\r\n    ) {\r\n      if (\r\n        this.NetworkConnect.room &&\r\n        this.NetworkConnect.room.sessionId !== this.NetworkConnect.currentHost\r\n      ) {\r\n        this.host = false;\r\n      }\r\n      console.log(\"HostStatus:;;;;;;;;;\", this.host);\r\n\r\n      if (\r\n        this.NetworkConnect.room &&\r\n        this.NetworkConnect.room.sessionId === this.NetworkConnect.currentHost\r\n      ) {\r\n        if (this.host === false) {\r\n          this.bgHost.active = true;\r\n          this.hostAnim.play();\r\n          setTimeout(() => {\r\n            this.bgHost.active = false;\r\n          }, 1730);\r\n          // this.hostAnim.node.active = true;\r\n          this.hostAnim.on(Animation.EventType.FINISHED, () => {\r\n            // this.hostAnim.node.active = false;\r\n          });\r\n          this.host = true;\r\n        }\r\n      }\r\n      this.NetworkConnect.room.send(\"getHistories\");\r\n      this.NetworkConnect.room.onMessage(\"histories\", (message) => {\r\n        // console.log(\"History\", message.documents[0].result);\r\n        // console.log(\"History\", message.documents[0].result2);\r\n        this.createGridNot(message.documents);\r\n        this.createGrid(message.documents);\r\n      });\r\n      this.RestartBalnce();\r\n      this.checkSateCurrent = true;\r\n      this.UserName.string = this.NetworkConnect.room.sessionId;\r\n      this.Idle();\r\n      this.GameEnd = false;\r\n      this.GameStateIdle = true;\r\n      this.GameStateReuslt = false;\r\n      this.GameStateFight = false;\r\n      this.GameStateStopBet = false;\r\n      this.Tiewarn = false;\r\n      // this.cardImg = false;\r\n    }\r\n    if (this.NetworkConnect.gameState === \"startBetting\") {\r\n      this.CardNodeAnim.node.active = false;\r\n      this.CardNodeL.active = true;\r\n      this.CardNodeR.active = true;\r\n      this.checkSateCurrent = true;\r\n    }\r\n\r\n    if (\r\n      this.NetworkConnect.gameState === \"startBetting\" &&\r\n      this.GameStateStart === false\r\n    ) {\r\n      this.StartBet.node.active = true;\r\n      this.StartBetting();\r\n      this.NetworkConnect.room.send(\"getHistories\");\r\n      this.NetworkConnect.room.onMessage(\"histories\", (message) => {\r\n        console.log(\"History\", message.documents[0].result);\r\n        this.createGridNot(message.documents);\r\n        this.createGrid(message.documents);\r\n      });\r\n      // if (this.host === false) {\r\n      //   this.bgHost.active = true;\r\n      //   this.hostAnim.play();\r\n      //   setTimeout(() => {\r\n      //     this.bgHost.active = false;\r\n      //   }, 1730);\r\n      //   this.hostAnim.node.active = true;\r\n      //   this.hostAnim.on(Animation.EventType.FINISHED, () => {\r\n      //     // this.hostAnim.node.active = false;\r\n      //   });\r\n      //   this.host = true;\r\n      // }\r\n      this.GameStateStart = true;\r\n    }\r\n\r\n    if (this.checkSateCurrent === true) {\r\n      this.loadingPage.active = false;\r\n      this.loadingAudio.volume = 0;\r\n      this.AudioController.settingAudio(1);\r\n    }\r\n\r\n    if (\r\n      this.NetworkConnect.gameState === \"stopBetting\" &&\r\n      this.GameStateStopBet === false\r\n    ) {\r\n      this.GameStateStart = false;\r\n      this.stopBetting();\r\n      this.GameStateStopBet = true;\r\n    }\r\n\r\n    if (\r\n      this.NetworkConnect.gameState === \"fight\" &&\r\n      this.GameStateFight === false\r\n    ) {\r\n      this.fight();\r\n      this.GameStateFight = true;\r\n    }\r\n    if (\r\n      this.NetworkConnect.gameState === \"showResult\" &&\r\n      this.GameStateReuslt === false\r\n    ) {\r\n      this.StartBet.node.active = false;\r\n      this.shownResult();\r\n      this.GameStateReuslt = true;\r\n    }\r\n    if (\r\n      this.NetworkConnect.gameState === \"payout\" &&\r\n      this.GameStatePayOut === false\r\n    ) {\r\n      for (let i = 0; i < this.NetworkConnect.ListLabel.length; i++) {\r\n        this.NetworkConnect.ListLabel[i].node.removeAllChildren();\r\n      }\r\n      for (let i = 0; i < this.NetworkConnect.ListLabelR.length; i++) {\r\n        this.NetworkConnect.ListLabelR[i].node.removeAllChildren();\r\n      }\r\n      // this.createGridNot();\r\n      // this.createGrid();\r\n      this.GameStatePayOut = true;\r\n    }\r\n    if (this.cloneBalance > 0) {\r\n      this.listCancelBet[0].node.active = true;\r\n    } else {\r\n      this.listCancelBet[0].node.active = false;\r\n    }\r\n  }\r\n\r\n  private addScore(Score: number, betLB: Label, betValueIcon: number) {\r\n    if (this.balanceUser >= Score) {\r\n      betValueIcon = betValueIcon + Score;\r\n      betLB.string = betValueIcon.toString();\r\n    }\r\n  }\r\n\r\n  private betTigerBtn() {\r\n    if (\r\n      this.balanceUser >= this.chipNode.UserBet &&\r\n      this.GameEnd === false &&\r\n      this.checkBettedDragon === false &&\r\n      this.checkBettedTie === false\r\n    ) {\r\n      if (this.chipNode.UserBet !== 0) {\r\n        this.checkBettedTiger = true;\r\n        this.NetworkConnect.room.send(\r\n          \"Bet\",\r\n          JSON.stringify({ betAmount: this.chipNode.UserBet, betType: \"Tiger\" })\r\n        );\r\n        this.ToatalUser[2].active = true;\r\n        this.addScore(\r\n          this.chipNode.UserBet,\r\n          this.betTigerLb,\r\n          this.UserBetTigerIcon\r\n        );\r\n        this.UserBetTigerIcon += this.chipNode.UserBet;\r\n        this.createSpriteNode(-406, 200, this.ValueAnim);\r\n\r\n        this.listCancelBet[1].node.active = true;\r\n      }\r\n\r\n      this.AudioController.onAudio(8);\r\n    }\r\n  }\r\n\r\n  private betDragonBtn() {\r\n    if (\r\n      this.balanceUser >= this.chipNode.UserBet &&\r\n      this.GameEnd === false &&\r\n      this.checkBettedTiger === false &&\r\n      this.checkBettedTie === false\r\n    ) {\r\n      if (this.chipNode.UserBet !== 0) {\r\n        this.checkBettedDragon = true;\r\n        this.NetworkConnect.room.send(\r\n          \"Bet\",\r\n          JSON.stringify({\r\n            betAmount: this.chipNode.UserBet,\r\n            betType: \"Dragon\",\r\n          })\r\n        );\r\n        this.addScore(\r\n          this.chipNode.UserBet,\r\n          this.betDragonLb,\r\n          this.UserBetDragonIcon\r\n        );\r\n        this.UserBetDragonIcon += this.chipNode.UserBet;\r\n\r\n        this.ToatalUser[0].active = true;\r\n        this.listCancelBet[3].node.active = true;\r\n        this.createSpriteNode(-951, 193, this.ValueAnim1);\r\n      }\r\n      this.AudioController.onAudio(8);\r\n    }\r\n  }\r\n\r\n  private betTieBtn() {\r\n    if (\r\n      this.balanceUser >= this.chipNode.UserBet &&\r\n      this.GameEnd === false &&\r\n      this.checkBettedDragon === false &&\r\n      this.checkBettedTiger === false\r\n    ) {\r\n      if (this.chipNode.UserBet !== 0) {\r\n        this.checkBettedTie = true;\r\n        this.NetworkConnect.room.send(\r\n          \"Bet\",\r\n          JSON.stringify({ betAmount: this.chipNode.UserBet, betType: \"Tie\" })\r\n        );\r\n\r\n        this.listCancelBet[2].node.active = true;\r\n        this.createSpriteNode(-670, 221, this.ValueAnim2);\r\n        this.ToatalUser[1].active = true;\r\n        this.addScore(\r\n          this.chipNode.UserBet,\r\n          this.betTieLb,\r\n          this.UserBetTieIcon\r\n        );\r\n        this.UserBetTieIcon += this.chipNode.UserBet;\r\n      }\r\n\r\n      this.AudioController.onAudio(8);\r\n    }\r\n  }\r\n\r\n  private shuffelCard() {\r\n    tween(this.CardNodeL)\r\n      .to(0.4, { position: new Vec3(1, 70) })\r\n      .call(() => {\r\n        this.CardNodeL.active = false;\r\n        this.CardNodeR.active = false;\r\n        this.CardNodeAnim.node.active = true;\r\n        this.AudioController.onAudio(0);\r\n        this.RestartBalnce();\r\n      })\r\n      .start();\r\n\r\n    tween(this.CardNodeR)\r\n      .to(0.4, { position: new Vec3(1, 70) })\r\n      .start();\r\n  }\r\n\r\n  private displayImages(): void {\r\n    // Định nghĩa ánh xạ của các bộ bài tới các tài nguyên tương ứng\r\n    const suitToResourceMap: { [key: string]: SpriteFrame[] } = {\r\n      \"1\": this.listCardRes,\r\n      \"4\": this.listCardResHeart,\r\n      \"2\": this.listCardResclubs,\r\n      \"3\": this.listCardResdiamonds,\r\n    };\r\n\r\n    // this.NetworkConnect.room.onMessage(\r\n    //   \"result\",\r\n    //   (message: { dragonCard: { suit: string; value: number } }) => {\r\n    const cardList: SpriteFrame[] | undefined =\r\n      suitToResourceMap[this.cardSuit];\r\n    if (cardList) {\r\n      this.spriteFrame = cardList[this.cardValue - 1];\r\n    } else {\r\n      console.error(\"Unknown suit:\", this.cardSuit);\r\n      return;\r\n    }\r\n\r\n    // Lấy component Sprite từ CardNodeL\r\n    const spriteComponent = this.CardNodeL.getComponent(Sprite);\r\n    if (spriteComponent) {\r\n      // Gán trực tiếp spriteFrame cho component Sprite\r\n      spriteComponent.spriteFrame = this.spriteFrame;\r\n    } else {\r\n      console.error(\"Component Sprite bị thiếu trên CardNodeL!\");\r\n    }\r\n    //   }\r\n    // );\r\n  }\r\n\r\n  private displayImagesCardR() {\r\n    const suitToResourceMap: { [key: string]: SpriteFrame[] } = {\r\n      \"1\": this.listCardRes,\r\n      \"4\": this.listCardResHeart,\r\n      \"2\": this.listCardResclubs,\r\n      \"3\": this.listCardResdiamonds,\r\n    };\r\n    const cardList: SpriteFrame[] | undefined =\r\n      suitToResourceMap[this.cardTigerSuit];\r\n    if (cardList) {\r\n      this.spriteFrameR = cardList[this.cardTigerValue - 1];\r\n    } else {\r\n      console.error(\"Unknown suit:\", this.cardTigerSuit);\r\n      return;\r\n    }\r\n    const sprite = this.CardNodeR.getComponent(Sprite);\r\n    if (sprite && this.spriteFrameR) {\r\n      sprite.spriteFrame = this.spriteFrameR;\r\n    } else {\r\n      console.error(\"Sprite or SpriteFrame is missing!\");\r\n    }\r\n    //   }\r\n    // );\r\n  }\r\n\r\n  // private displayImagesCardR() {\r\n  //   const suitToResourceMap: { [key: string]: SpriteFrame[] } = {\r\n  //     \"1\": this.listCardRes,\r\n  //     \"4\": this.listCardResHeart,\r\n  //     \"2\": this.listCardResclubs,\r\n  //     \"3\": this.listCardResdiamonds,\r\n  //   };\r\n  //   console.log(\"aaaaaaaaaaaaaaaaaaa\");\r\n\r\n  //   this.NetworkConnect.room.onMessage(\r\n  //     \"result\",\r\n  //     (message: { tigerCard: { suit: string; value: number } }) => {\r\n  //       console.log(\"Received message:\", message);\r\n\r\n  //       const cardList: SpriteFrame[] | undefined =\r\n  //         suitToResourceMap[message.tigerCard.suit];\r\n  //       if (cardList) {\r\n  //         this.spriteFrameR = cardList[message.tigerCard.value - 1];\r\n  //         console.log(\"SpriteFrame selected:\", this.spriteFrameR);\r\n  //       } else {\r\n  //         console.error(\"Unknown suit:\", message.tigerCard.suit);\r\n  //         return;\r\n  //       }\r\n\r\n  //       const sprite = this.CardNodeR.getComponent(Sprite);\r\n  //       if (sprite && this.spriteFrameR) {\r\n  //         sprite.spriteFrame = this.spriteFrameR;\r\n  //         console.log(\"Sprite frame set successfully.\");\r\n  //       } else {\r\n  //         console.error(\"Sprite or SpriteFrame is missing!\");\r\n  //       }\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  drawRectangle() {\r\n    const width: number = 250;\r\n    const height: number = 120;\r\n    const graphics = this.AvatarNode.addComponent(Graphics);\r\n    const lightGray = new Color(116, 116, 116, 100);\r\n    graphics.fillColor = lightGray;\r\n    const glowColor = Color.BLACK;\r\n    graphics.strokeColor = glowColor;\r\n    graphics.lineWidth = 5;\r\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\r\n    graphics.fill();\r\n    graphics.stroke();\r\n  }\r\n\r\n  drawRectangle1() {\r\n    const width: number = 220;\r\n    const height: number = 110;\r\n    const graphics = this.AvatarNode1.addComponent(Graphics);\r\n    const lightGray = new Color(116, 116, 116, 100);\r\n    graphics.fillColor = lightGray;\r\n    const glowColor = Color.BLACK;\r\n    graphics.strokeColor = glowColor;\r\n    graphics.lineWidth = 5;\r\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\r\n    graphics.fill();\r\n    graphics.stroke();\r\n  }\r\n\r\n  drawRectangle2() {\r\n    const width: number = 220;\r\n    const height: number = 110;\r\n    const graphics = this.AvatarNode2.addComponent(Graphics);\r\n    const lightGray = new Color(116, 116, 116, 100);\r\n    graphics.fillColor = lightGray;\r\n    const glowColor = Color.BLACK;\r\n    graphics.strokeColor = glowColor;\r\n    graphics.lineWidth = 5;\r\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\r\n    graphics.fill();\r\n    graphics.stroke();\r\n  }\r\n\r\n  drawRectangle3() {\r\n    const width: number = 220;\r\n    const height: number = 110;\r\n    const graphics = this.AvatarNode3.addComponent(Graphics);\r\n    const lightGray = new Color(116, 116, 116, 100);\r\n    graphics.fillColor = lightGray;\r\n    const glowColor = Color.BLACK;\r\n    graphics.strokeColor = glowColor;\r\n    graphics.lineWidth = 5;\r\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\r\n    graphics.fill();\r\n    graphics.stroke();\r\n  }\r\n\r\n  drawRectangleTotalUser(number: number) {\r\n    const width: number = 60;\r\n    const height: number = 20;\r\n    const graphics = this.ToatalUser[number].addComponent(Graphics);\r\n    const lightGray = new Color(0, 0, 0, 255);\r\n    graphics.fillColor = lightGray;\r\n    const glowColor = Color.BLACK;\r\n    graphics.strokeColor = glowColor;\r\n    graphics.lineWidth = 5;\r\n    graphics.roundRect(-width / 2, -height / 2, width, height, 2);\r\n    graphics.fill();\r\n    graphics.stroke();\r\n\r\n    const circleRadius: number = 10;\r\n    graphics.fillColor = Color.WHITE; // Màu trắng\r\n    graphics.strokeColor = Color.BLACK; // Viền màu đen\r\n    graphics.circle(-20, 0, circleRadius); // Vẽ hình tròn tại tọa độ (0,0) với bán kính circleRadius\r\n    graphics.fill(); // Tô màu\r\n    graphics.stroke(); // Vẽ viền\r\n  }\r\n  private drawRectangleTotal(list: number) {\r\n    const width: number = 100;\r\n    const height: number = 70;\r\n    const graphics = this.ToatalAv[list].addComponent(Graphics);\r\n    const lightGray = new Color(0, 0, 0, 255);\r\n    graphics.fillColor = lightGray;\r\n    const glowColor = Color.BLACK;\r\n    graphics.strokeColor = glowColor;\r\n    graphics.lineWidth = 1;\r\n\r\n    // Tính toán các điểm để vẽ viên thuốc\r\n    const centerX = 0;\r\n    const centerY = 0;\r\n    const pillHeight = height * 0.6; // Chiều cao của viên thuốc\r\n    const pillWidth = width * 0.8; // Chiều rộng của viên thuốc\r\n    const pillRadius = pillHeight / 2; // Bán kính của đầu viên thuốc\r\n    const bodyWidth = width * 0.5; // Chiều rộng của phần thân viên thuốc\r\n\r\n    // Vẽ phần thân của viên thuốc\r\n    graphics.rect(\r\n      centerX - bodyWidth / 2,\r\n      centerY - pillRadius,\r\n      bodyWidth,\r\n      pillHeight\r\n    );\r\n\r\n    // Vẽ đầu viên thuốc bên trái\r\n    graphics.arc(\r\n      centerX - pillWidth / 2 + pillRadius,\r\n      centerY,\r\n      pillRadius,\r\n      -Math.PI / 2,\r\n      Math.PI / 2,\r\n      false\r\n    );\r\n\r\n    // Vẽ đầu viên thuốc bên phải\r\n    graphics.arc(\r\n      centerX + pillWidth / 2 - pillRadius,\r\n      centerY,\r\n      pillRadius,\r\n      Math.PI / 2,\r\n      -Math.PI / 2,\r\n      false\r\n    );\r\n\r\n    graphics.fill(); // Đổ màu\r\n    graphics.stroke(); // Vẽ viền\r\n  }\r\n  drawRectanglel(Avatar: Node) {\r\n    const width: number = 220;\r\n    const height: number = 100;\r\n    const graphics = Avatar.addComponent(Graphics);\r\n\r\n    const lightGray = new Color(116, 116, 116, 100);\r\n    graphics.fillColor = lightGray;\r\n    const glowColor = Color.BLACK;\r\n    graphics.strokeColor = glowColor;\r\n    graphics.lineWidth = 5;\r\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\r\n    graphics.fill();\r\n    graphics.stroke();\r\n  }\r\n\r\n  createSpriteNode(posX, posY, posNode) {\r\n    // Kiểm tra xem chipNode và buttonPub đã được xác định chưa\r\n    if (this.chipNode && this.chipNode.buttonPub) {\r\n      const buttonNode = this.chipNode.buttonPub.node;\r\n\r\n      // Kiểm tra xem buttonNode và spriteFrame có tồn tại không\r\n      if (buttonNode && buttonNode.getComponent(Sprite)) {\r\n        const buttonSpriteFrame = buttonNode.getComponent(Sprite).spriteFrame;\r\n        const spriteNode = new Node(\"SpriteNode\");\r\n        spriteNode.scale = new Vec3(0.5, 0.5);\r\n        const spriteComponent = spriteNode.addComponent(Sprite);\r\n        spriteComponent.spriteFrame = buttonSpriteFrame;\r\n        posNode.addChild(spriteNode);\r\n        // Bắt đầu tween animation sau khi spriteNode đã được thêm vào posNode\r\n        tween(spriteNode)\r\n          .to(0.3, { position: new Vec3(posX, posY) })\r\n          .start();\r\n      } else {\r\n        console.error(\"Button node or sprite frame is undefined\");\r\n      }\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  drawGrid(Grid: Node) {\r\n    const numRows: number = this.numRows;\r\n    const numCols: number = this.numCols;\r\n    const gridSize: number = Math.min(575 / numCols, 200 / numRows); // Kích thước ô vuông\r\n    const cellWidth: number = this.cellWidth; // Chiều rộng của mỗi ô\r\n    const cellHeight: number = this.cellHeight; // Chiều cao của mỗi ô\r\n\r\n    const graphics = Grid.addComponent(Graphics);\r\n    const lightGray = new Color(116, 116, 116, 50);\r\n    const glowColor = Color.BLACK;\r\n    graphics.strokeColor = glowColor;\r\n    graphics.lineWidth = 4;\r\n\r\n    // Vẽ các đường ngang\r\n    for (let i = 0; i <= numRows; i++) {\r\n      const y = i * cellHeight - (numRows * cellHeight) / 2; // Đặt lưới vào giữa theo chiều cao\r\n      graphics.moveTo((-numCols * cellWidth) / 2, y);\r\n      graphics.lineTo((numCols * cellWidth) / 2, y);\r\n      graphics.stroke();\r\n    }\r\n\r\n    for (let j = 0; j <= numCols; j++) {\r\n      const x = j * cellWidth - (numCols * cellWidth) / 2; // Đặt lưới vào giữa theo chiều rộng\r\n      graphics.moveTo(x, (-numRows * cellHeight) / 2);\r\n      graphics.lineTo(x, (numRows * cellHeight) / 2);\r\n      graphics.stroke();\r\n    }\r\n\r\n    // Tô màu cho lưới\r\n    graphics.fillColor = lightGray;\r\n    graphics.rect(\r\n      (-numCols * cellWidth) / 2,\r\n      (-numRows * cellHeight) / 2,\r\n      numCols * cellWidth,\r\n      numRows * cellHeight\r\n    );\r\n    graphics.fill();\r\n  }\r\n\r\n  // private createGrid(documents: Document[]) {\r\n  //   let prefabType;\r\n  //   // if (this.NetworkConnect.result === \"Tie\") {\r\n  //   //   prefabType = this.Tie;\r\n  //   // } else if (this.NetworkConnect.result === \"tigerWin\") {\r\n  //   //   prefabType = this.Under;\r\n  //   // } else if (this.NetworkConnect.result === \"dragonWin\") {\r\n  //   //   prefabType = this.Over;\r\n  //   // }\r\n  //   // if (this.result === \"Tie\") {\r\n  //   //   prefabType = this.Tie;\r\n  //   // } else if (this.result === \"tigerWin\") {\r\n  //   //   prefabType = this.Under;\r\n  //   // } else if (this.result === \"dragonWin\") {\r\n  //   //   prefabType = this.Over;\r\n  //   // }\r\n  //   const prefabMap: { [key: string]: any } = {\r\n  //     TigerWin: this.Under,\r\n  //     DragonWin: this.Over,\r\n  //     Tie: this.Tie,\r\n  //   };\r\n\r\n  //   this.clearGridNt();\r\n  //   this.currentRowL = 0;\r\n  //   this.currentColL = 0;\r\n  //   for (const doc of documents[0].result) {\r\n  //     const prefabType = prefabMap[doc];\r\n  //     if (prefabType) {\r\n  //       if (\r\n  //         this.previousPrefabType !== null &&\r\n  //         prefabType.name !== this.previousPrefabType.name\r\n  //       ) {\r\n  //         this.currentCol++;\r\n  //         this.currentRow = 0;\r\n  //         this.currentRowClone = 0;\r\n  //         if (this.currentCol >= this.numCols) {\r\n  //           this.clearGrid();\r\n  //           this.currentCol = 0;\r\n  //         }\r\n  //       }\r\n  //       const cell = instantiate(prefabType);\r\n  //       const posX = this.currentCol * this.cellWidth;\r\n  //       const posY = -this.currentRow * this.cellHeight;\r\n  //       cell.position = new Vec3(posX, posY);\r\n  //       this.pref.addChild(cell);\r\n  //       this.previousPrefabType = prefabType;\r\n  //       this.currentRowClone++;\r\n  //       if (this.currentRow < 5) {\r\n  //         this.currentRow++;\r\n  //       }\r\n  //       // console.log(\"col\", this.currentCol);\r\n  //     } else {\r\n  //       console.error(`Prefab type not found for result: ${doc}`);\r\n  //     }\r\n  //   }\r\n\r\n  //   // if (\r\n  //   //   this.previousPrefabType !== null &&\r\n  //   //   prefabType.name !== this.previousPrefabType.name\r\n  //   // ) {\r\n  //   //   this.currentCol++;\r\n  //   //   this.currentRow = 0;\r\n  //   //   this.currentRowClone = 0;\r\n  //   //   if (this.currentCol >= this.numCols) {\r\n  //   //     this.clearGrid();\r\n  //   //     this.currentCol = 0;\r\n  //   //   }\r\n  //   // }\r\n\r\n  //   // const cell = instantiate(prefabType);\r\n  //   // const posX = this.currentCol * this.cellWidth;\r\n  //   // const posY = -this.currentRow * this.cellHeight;\r\n  //   // cell.position = new Vec3(posX, posY);\r\n  //   // this.pref.addChild(cell);\r\n\r\n  //   // this.previousPrefabType = prefabType;\r\n  //   // this.currentRowClone++;\r\n  //   // if (this.currentRow < 5) {\r\n  //   //   this.currentRow++;\r\n  //   // }\r\n  // }\r\n\r\n  // private clearGrid() {\r\n  //   this.pref.removeAllChildren();\r\n  // }\r\n\r\n  private createGrid(documents: Document[]) {\r\n    // Ánh xạ các giá trị với prefab tương ứng\r\n    const prefabMap: { [key: string]: any } = {\r\n      TigerWin: this.Under,\r\n      DragonWin: this.Over,\r\n      Tie: this.Tie,\r\n    };\r\n\r\n    this.clearGrid();\r\n    this.currentRow = 0;\r\n    this.currentCol = 0;\r\n    let previousResult = null;\r\n\r\n    for (const doc of documents[0].result) {\r\n      const prefabType = prefabMap[doc];\r\n      if (prefabType) {\r\n        if (previousResult !== null && doc !== previousResult) {\r\n          this.currentCol++;\r\n          this.currentRow = 0;\r\n        } else if (this.currentRow >= this.numRows) {\r\n          // If the current column is full and the result is the same as previous\r\n          this.currentCol++;\r\n          this.currentRow = this.numRows - 1;\r\n        }\r\n\r\n        if (this.currentCol >= this.numCols) {\r\n          this.clearGrid();\r\n          this.currentCol = 0;\r\n        }\r\n\r\n        const cell = instantiate(prefabType);\r\n        const posX = this.currentCol * this.cellWidth;\r\n        const posY = -this.currentRow * this.cellHeight;\r\n        cell.position = new Vec3(posX, posY);\r\n        this.pref.addChild(cell);\r\n        this.currentRow++;\r\n        previousResult = doc;\r\n      } else {\r\n        console.error(`Prefab type not found for result: ${doc}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  private clearGrid() {\r\n    this.pref.removeAllChildren();\r\n  }\r\n\r\n  private createGridNot(documents: Document[]) {\r\n    // Ánh xạ các giá trị với prefab tương ứng\r\n    const prefabMap: { [key: string]: any } = {\r\n      TigerWin: this.Under,\r\n      DragonWin: this.Over,\r\n      Tie: this.Tie,\r\n    };\r\n    this.clearGridNt();\r\n    this.currentRowL = 0;\r\n    this.currentColL = 0;\r\n    for (const doc of documents[0].result) {\r\n      const prefabType = prefabMap[doc];\r\n      if (prefabType) {\r\n        if (this.currentRowL >= this.numRows) {\r\n          this.currentColL++;\r\n          this.currentRowL = 0;\r\n          if (this.currentCol >= this.numCols) {\r\n            this.clearGridNt();\r\n            this.currentCol = 0;\r\n          }\r\n        }\r\n        // console.log(\"col\", this.currentCol);\r\n\r\n        const cell = instantiate(prefabType);\r\n        const posX = this.currentColL * this.cellWidth;\r\n        const posY = -this.currentRowL * this.cellHeight;\r\n        cell.position = new Vec3(posX, posY);\r\n        this.prefL.addChild(cell);\r\n        this.currentRowL++;\r\n      } else {\r\n        console.error(`Prefab type not found for result: ${doc}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  private clearGridNt() {\r\n    this.prefL.removeAllChildren();\r\n  }\r\n\r\n  private startCountdown(timeCountDown: number, timereset: number) {\r\n    this.countdownTimerBet = 30;\r\n    const countdownInterval = setInterval(() => {\r\n      this.countdownTimerBet--;\r\n      if (this.countdownTimerBet <= 0) {\r\n        clearInterval(countdownInterval);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  private Cancel() {\r\n    if (this.GameEnd === false) {\r\n      this.ToatalUser[0].active = false;\r\n      this.ToatalUser[1].active = false;\r\n      this.ToatalUser[2].active = false;\r\n      this.listCancelBet[0].node.active = false;\r\n      this.listCancelBet[1].node.active = false;\r\n      this.listCancelBet[2].node.active = false;\r\n      this.listCancelBet[3].node.active = false;\r\n      this.UserBetDragonIcon = 0;\r\n      this.UserBetTieIcon = 0;\r\n      this.UserBetTigerIcon = 0;\r\n      this.balanceUser = this.balanceUser + this.cloneBalance;\r\n      this.cloneBalance = 0;\r\n      this.BalancerLb.string = this.balanceUser.toString();\r\n      this.betDragonLb.string = this.UserBetDragonIcon.toString();\r\n      this.betTigerLb.string = this.UserBetTigerIcon.toString();\r\n      this.betTieLb.string = this.UserBetTieIcon.toString();\r\n      this.ValueAnim.removeAllChildren();\r\n      this.ValueAnim1.removeAllChildren();\r\n      this.ValueAnim2.removeAllChildren();\r\n    }\r\n    this.AudioController.onAudio(7);\r\n  }\r\n\r\n  private RestartBalnce() {\r\n    this.checkBettedDragon = false;\r\n    this.checkBettedTiger = false;\r\n    this.checkBettedTie = false;\r\n    this.ToatalUser[0].active = false;\r\n    this.ToatalUser[1].active = false;\r\n    this.ToatalUser[2].active = false;\r\n    this.listCancelBet[0].node.active = false;\r\n    this.listCancelBet[1].node.active = false;\r\n    this.listCancelBet[2].node.active = false;\r\n    this.listCancelBet[3].node.active = false;\r\n    this.UserBetDragonIcon = 0;\r\n    this.UserBetTieIcon = 0;\r\n    this.UserBetTigerIcon = 0;\r\n    this.cloneBalance = 0;\r\n    this.betDragonLb.string = this.UserBetDragonIcon.toString();\r\n    this.betTigerLb.string = this.UserBetTigerIcon.toString();\r\n    this.betTieLb.string = this.UserBetTieIcon.toString();\r\n    this.ValueAnim.removeAllChildren();\r\n    this.ValueAnim1.removeAllChildren();\r\n    this.ValueAnim2.removeAllChildren();\r\n  }\r\n\r\n  private CancelBetTiger() {\r\n    if (this.GameEnd === false) {\r\n      this.NetworkConnect.room.send(\"cancel\");\r\n\r\n      this.checkBettedTiger = false;\r\n      this.ToatalUser[2].active = false;\r\n      this.listCancelBet[1].node.active = false;\r\n\r\n      this.cloneBalance = this.cloneBalance - this.UserBetTigerIcon;\r\n      this.balanceUser = this.balanceUser + this.UserBetTigerIcon;\r\n      this.BalancerLb.string = this.balanceUser.toString();\r\n      this.UserBetTigerIcon = 0;\r\n      this.betTigerLb.string = this.UserBetTigerIcon.toString();\r\n      this.ValueAnim.removeAllChildren();\r\n    }\r\n    this.AudioController.onAudio(7);\r\n  }\r\n\r\n  private CancelBetDragon() {\r\n    if (this.GameEnd === false) {\r\n      this.NetworkConnect.room.send(\"cancel\");\r\n      this.checkBettedDragon = false;\r\n      this.ToatalUser[0].active = false;\r\n      this.listCancelBet[3].node.active = false;\r\n      this.cloneBalance = this.cloneBalance - this.UserBetDragonIcon;\r\n      this.balanceUser = this.balanceUser + this.UserBetDragonIcon;\r\n      this.BalancerLb.string = this.balanceUser.toString();\r\n      this.UserBetDragonIcon = 0;\r\n      this.betDragonLb.string = this.UserBetDragonIcon.toString();\r\n      this.ValueAnim1.removeAllChildren();\r\n    }\r\n    this.AudioController.onAudio(7);\r\n  }\r\n\r\n  private CancelBetTie() {\r\n    if (this.GameEnd === false) {\r\n      this.NetworkConnect.room.send(\"cancel\");\r\n      this.NetworkConnect.room.onMessage(\"cancel\", (message) => {});\r\n      this.checkBettedTie = false;\r\n      this.ToatalUser[1].active = false;\r\n      this.listCancelBet[2].node.active = false;\r\n\r\n      this.cloneBalance = this.cloneBalance - this.UserBetTieIcon;\r\n      this.balanceUser = this.balanceUser + this.UserBetTieIcon;\r\n      this.BalancerLb.string = this.balanceUser.toString();\r\n      this.UserBetTieIcon = 0;\r\n      this.betTieLb.string = this.UserBetTieIcon.toString();\r\n      this.ValueAnim2.removeAllChildren();\r\n    }\r\n    this.AudioController.onAudio(7);\r\n  }\r\n\r\n  tweenChildrenToPosition(node: Node, targetPosition: Vec3, duration: number) {\r\n    node.children.forEach((child: Node) => {\r\n      tween(child)\r\n        .to(duration, { position: targetPosition })\r\n        .call(() => {\r\n          this.AudioController.onAudio(5);\r\n          child.removeFromParent();\r\n        })\r\n\r\n        .start();\r\n    });\r\n  }\r\n\r\n  private Idle() {\r\n    this.shuffelCard();\r\n    this.DragonNode.play(\"DragonIde\");\r\n    this.TigerNode.play(\"TigerIde\");\r\n    this.GameStatePayOut = false;\r\n    // this.GameStateStart = false;\r\n  }\r\n\r\n  private StartBetting() {\r\n    this.GameStateIdle = false;\r\n    this.CardNodeAnim.node.active = false;\r\n    this.CardNodeL.active = true;\r\n    this.CardNodeR.active = true;\r\n    this.CardNodeR.getComponent(Sprite).spriteFrame = this.bankCard;\r\n    this.CardNodeL.getComponent(Sprite).spriteFrame = this.bankCard;\r\n    this.StartBet.play(\"Startbet\");\r\n    tween(this.CardNodeL)\r\n      .to(0.4, { position: this.clonePosCardL })\r\n      .call(() => {\r\n        // this.GameEnd = false;\r\n        this.AudioController.onAudio(1);\r\n      })\r\n      .start();\r\n    tween(this.CardNodeR)\r\n      .to(0.4, { position: this.clonePosCardR })\r\n      .call(() => {})\r\n      .start();\r\n    // this.GameStateStart = true;\r\n  }\r\n\r\n  private stopBetting() {\r\n    this.StartBet.play(\"EndBet\");\r\n    this.AudioController.onAudio(2);\r\n    this.GameEnd = true;\r\n  }\r\n\r\n  private fight() {\r\n    this.WinNotice.play(\"FightAnim\");\r\n    this.winIntroType = \"FightAnim\";\r\n    this.WinNotice.on(Animation.EventType.FINISHED, () => {\r\n      if (this.result === \"tigerWin\" && this.winIntroType === \"FightAnim\") {\r\n        this.balanceUser = this.balanceUser + this.UserBetTigerIcon * 2;\r\n        this.BalancerLb.string = this.balanceUser.toString();\r\n        this.WinNotice.play(\"TigerWin\");\r\n        this.DragonWinintro.play(\"TigerIntro\");\r\n        this.winIntroType = \"TigerIntro\";\r\n        this.DragonWinintro.on(Animation.EventType.FINISHED, () => {\r\n          if (this.winIntroType === \"TigerIntro\") {\r\n            this.TigerNode.play(\"TigerAttack\");\r\n            this.TigerNode.on(Animation.EventType.FINISHED, () => {\r\n              this.DragonNode.play(\"DragonHurt\");\r\n              this.DragonNode.on(Animation.EventType.FINISHED, () => {\r\n                this.DragonNode.play(\"DragonIde\");\r\n                this.tweenChildrenToPosition(\r\n                  this.ValueAnim,\r\n                  new Vec3(30, 560),\r\n                  0.5\r\n                );\r\n                this.tweenChildrenToPosition(\r\n                  this.ValueAnim1,\r\n                  new Vec3(30, 560),\r\n                  0.5\r\n                );\r\n                this.tweenChildrenToPosition(\r\n                  this.ValueAnim2,\r\n                  new Vec3(30, 560),\r\n                  0.5\r\n                );\r\n              });\r\n\r\n              this.TigerNode.play(\"TigerIde\");\r\n              this.TigerNode.off(Animation.EventType.FINISHED);\r\n            });\r\n          }\r\n        });\r\n      }\r\n      if (this.result === \"dragonWin\" && this.winIntroType === \"FightAnim\") {\r\n        this.balanceUser = this.balanceUser + this.UserBetDragonIcon * 2;\r\n        this.BalancerLb.string = this.balanceUser.toString();\r\n        this.WinNotice.play(\"DragonWinIcon\");\r\n        this.DragonWinintro.play(\"DragonIntro\");\r\n        // Sử dụng biến để xác định loại WinIntro\r\n        this.winIntroType = \"DragonIntro\";\r\n        this.DragonWinintro.on(Animation.EventType.FINISHED, () => {\r\n          // Kiểm tra loại WinIntro\r\n          if (this.winIntroType === \"DragonIntro\") {\r\n            this.DragonNode.play(\"DragonAttack\");\r\n            this.AudioController.onAudio(12);\r\n            this.DragonNode.on(Animation.EventType.FINISHED, () => {\r\n              this.ExplosionDra.play();\r\n              this.AudioController.onAudio(10);\r\n              this.TigerNode.play(\"TigerHurt\");\r\n              this.TigerNode.on(Animation.EventType.FINISHED, () => {\r\n                this.TigerNode.play(\"TigerIde\");\r\n                this.tweenChildrenToPosition(\r\n                  this.ValueAnim,\r\n                  new Vec3(30, 560),\r\n                  0.5\r\n                );\r\n                this.tweenChildrenToPosition(\r\n                  this.ValueAnim1,\r\n                  new Vec3(30, 560),\r\n                  0.5\r\n                );\r\n                this.tweenChildrenToPosition(\r\n                  this.ValueAnim2,\r\n                  new Vec3(30, 560),\r\n                  0.5\r\n                );\r\n              });\r\n              this.DragonNode.play(\"DragonIde\");\r\n              this.DragonNode.off(Animation.EventType.FINISHED);\r\n            });\r\n          }\r\n        });\r\n      }\r\n      if (\r\n        this.result === \"Tie\" &&\r\n        this.winIntroType === \"FightAnim\" &&\r\n        this.Tiewarn === false\r\n      ) {\r\n        this.WinNotice.play(\"TieWin\");\r\n        this.tweenChildrenToPosition(this.ValueAnim, new Vec3(30, 560), 0.5);\r\n        this.tweenChildrenToPosition(this.ValueAnim1, new Vec3(30, 560), 0.5);\r\n        this.tweenChildrenToPosition(this.ValueAnim2, new Vec3(30, 560), 0.5);\r\n        this.Tiewarn = true;\r\n      }\r\n    });\r\n  }\r\n  private shownResult() {\r\n    if ((this.cardImg = true)) {\r\n      tween(this.CardNodeL)\r\n        .to(0.4, {\r\n          position: new Vec3(\r\n            this.CardNodeL.position.x + 100,\r\n            this.CardNodeL.position.y - 300\r\n          ),\r\n        })\r\n        .call(() => {\r\n          // this.displayImages();\r\n        })\r\n        .start();\r\n\r\n      tween(this.CardNodeR)\r\n        .to(0.4, {\r\n          position: new Vec3(\r\n            this.CardNodeR.position.x - 100,\r\n            this.CardNodeR.position.y - 300\r\n          ),\r\n        })\r\n        .call(() => {\r\n          // this.displayImagesCardR();\r\n          // this.createGrid();\r\n          // this.createGridNot();\r\n        })\r\n        .start();\r\n    }\r\n  }\r\n}\r\n"]}