{"version":3,"sources":["file:///D:/C%C3%B3co/C%C3%B3co/Fix2/assets/Scripts/NetworkConnect.ts"],"names":["_decorator","Component","instantiate","Label","Node","Prefab","Sprite","SpriteFrame","tween","Vec3","Colyseus","AudioController","Chip","ccclass","property","NetworkConnect","type","String","Number","Boolean","client","room","gameState","resultDragon","resultTiger","TotalUser","UserBet","NotmeBet","result","winner","start","Client","useSSL","hostname","port","connect","rooms","getAvailableRooms","length","create","console","log","sessionId","joinById","roomId","onMessage","message","TimerDown","string","onAudio","PayoutAnim","dragonCard","value","tigerCard","playerID","betType","createSpriteNode","onStateChange","state","roundState","players","values","updatePlayerList","isHost","onLeave","code","e","error","playerList","displayIndex","numElements","ListL","forEach","node","active","i","ListLabel","spriteNode","prfab","v3","PosTarget","DragonNode","TigerNode","TieNode","addChild","inverseTransformPoint","worldPosition","to","position","call","winnerList","winnerNode","findWinnerNode","PayUser","createSpriteNodePay","x","y","PayUserSprite","winnerName","posX","posY","spriteFrames","scale","spriteComponent","addComponent","spriteFrame","delay"],"mappings":"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","sourcesContent":["import { _decorator, Component, instantiate, Label, Node, Prefab, Sprite, SpriteFrame, tween, Vec3 } from \"cc\";\nconst { ccclass, property } = _decorator;\nimport Colyseus from \"db://colyseus-sdk/colyseus.js\";\nimport { AudioController } from \"./AudioController\";\nimport { Chip } from \"./Chip\";\n\n@ccclass(\"NetworkConnect\")\nexport class NetworkConnect extends Component {\n  @property({ type: String })\n  hostname = \"localhost\";\n\n  @property({ type: Number })\n  port = 80;\n\n  @property({ type: Boolean })\n  useSSL = true;\n\n  @property({ type: Node })\n  private ListL: Node[] = [];\n\n  @property({ type: Label })\n  private ListLabel: Label[] = [];\n\n  @property(Label)\n  private TimerDown: Label;\n\n  @property({\n    type: Chip,\n  })\n  private chipNode: Chip;\n\n  @property({\n    type: Prefab,\n  })\n  private prfab: Prefab;\n\n  @property({\n    type: Node,\n  })\n  private DragonNode: Node;\n\n  @property({\n    type: Node,\n  })\n  private TigerNode: Node;\n\n  @property({\n    type: Node,\n  })\n  private TieNode: Node;\n\n  @property({\n    type: Node,\n  })\n  private PayUser: Node;\n\n\n  client!: Colyseus.Client;\n  room!: Colyseus.Room;\n  gameState;\n  resultDragon: number = 0;\n  resultTiger: number = 0;\n  TotalUser;\n  UserBet;\n  NotmeBet;\n  result;\n  winner\n\n  @property({\n    type: AudioController,\n  })\n  private AudioController: AudioController;\n\n  @property({\n    type: SpriteFrame,\n  })\n  private PayUserSprite: SpriteFrame[] = [];\n\n  start() {\n    this.client = new Colyseus.Client(\n      `${this.useSSL ? \"wss\" : \"ws\"}://${this.hostname}:${this.port}`\n    );\n\n    this.connect();\n  }\n\n  async connect() {\n    try {\n      const rooms = await this.client.getAvailableRooms(\"room1\");\n\n      if (rooms.length === 0) {\n        this.room = await this.client.create(\"room1\");\n        console.log(\"Created new room with sessionId:\", this.room.sessionId);\n      } else {\n        // Nếu có phòng có sẵn, tham gia vào phòng đầu tiên trong danh sách\n        this.room = await this.client.joinById(rooms[0].roomId);\n        console.log(\n          \"Joined existing room with sessionId:\",\n          this.room.sessionId\n        );\n      }\n\n      console.log(\"Joined successfully!\");\n      console.log(\"User's sessionId:\", this.room.sessionId);\n\n      // this.room.onMessage(\"playerList\", (message) => {\n      //   console.log(message);\n      //   this.updatePlayerList(message);\n      // });\n\n      this.room.onMessage(\"timer\", (message) => {\n        this.TimerDown.string = message;\n        if (message < 30 && message > 0) {\n          this.AudioController.onAudio(3);\n        }\n        if (message === 0) {\n          this.AudioController.onAudio(4);\n        }\n      });\n\n\n      this.room.onMessage(\"winnerList\",(message)=>{\n        console.log(\"WinList\",message);\n        // this.winner=message;\n        this.PayoutAnim(message);\n        \n      })\n      this.room.onMessage(\"result\", (message) => {\n        console.log(message.result);\n        console.log(\"rong\", message.dragonCard.value);\n        console.log(\"ho\", message.tigerCard.value);\n        this.result=message.result;\n      });\n\n      this.room.onMessage(\"userBet\", (message) => {\n        if (message.playerID !== this.room.sessionId) {\n          console.log(\"message\",message);\n          this.UserBet=message.betType;\n          this.createSpriteNode(message.playerID)\n        } else {\n          console.log(\"false\");\n        }\n      });\n\n\n\n      this.room.onStateChange((state) => {\n        console.log(\"Room state changed:\", state);\n        console.log(\"onStateChange: \", state);\n        console.log(state.roundState);\n        console.log(this.room.state);\n        const players = [...state.players.values()];\n        this.updatePlayerList(players);\n        console.log(\"PlayerStatus\", players[0].isHost);\n        this.TotalUser = players.length;\n        this.gameState = state.roundState;\n      });\n\n      this.room.onLeave((code) => {\n        console.log(\"Left room with code:\", code);\n      });\n    } catch (e) {\n      console.error(\"Error:\", e);\n    }\n  }\n\n  updatePlayerList(playerList: any[]) {\n    let displayIndex = 0;\n    const numElements = playerList.length;\n    this.ListL.forEach((node) => {\n      node.active = false;\n    });\n    for (let i = 0; i < numElements && displayIndex < this.ListL.length; i++) {\n      if (playerList[i].sessionId !== this.room.sessionId) {\n        \n        this.ListLabel[displayIndex].string = playerList[i].sessionId;\n        this.ListL[displayIndex].active = true;\n        displayIndex++;\n        this.AudioController.onAudio(9);\n      }\n    }\n    for (let i = displayIndex; i < this.ListL.length; i++) {\n      this.ListL[i].active = false;\n    }\n  }\n\n  \n\n  private createSpriteNode(sessionId: string) {\n    const spriteNode = instantiate(this.prfab);\n    let v3=new Vec3()\n    let PosTarget\n    // Kiểm tra nếu sessionId trùng khớp với label nào đó\n    for (let i = 0; i < this.ListLabel.length; i++) {\n      if (sessionId === this.ListLabel[i].string) {\n        // Thêm node mới làm con của node có label tương ứng\n        if(this.UserBet===\"Dragon\")\n          {\n            PosTarget=this.DragonNode\n          }else if(this.UserBet===\"Tiger\")\n            {\n              PosTarget=this.TigerNode;\n            }else{\n              PosTarget=this.TieNode;\n            }\n        this.ListLabel[i].node.addChild(spriteNode);\n        this.ListLabel[i].node.inverseTransformPoint(v3,PosTarget.worldPosition);\n            tween(spriteNode)\n                .to(0.3, { position: v3 })\n                .call(() => {   })\n                .start();\n\n            break; // Dừng vòng lặp sau khi thêm node\n        }\n    }\n}\n\nprivate PayoutAnim(winnerList) {\n  if (winnerList.length > 0) {\n    this.AudioController.onAudio(6);\n    console.log(\"tra cho minh\");\n  }\n\n  // Lặp qua danh sách người chiến thắng và tạo nút trả tiền cho mỗi người chiến thắng\n  for (let i = 0; i < winnerList.length; i++) {\n    const winner = winnerList[i];\n    \n    // Tìm node tương ứng với người chiến thắng\n    const winnerNode = this.findWinnerNode(winner);\n \n    if (winnerNode) {\n      let v3=new Vec3();\n      this.PayUser.inverseTransformPoint(v3,winnerNode.worldPosition);\n      // Tạo nút trả tiền cho người chiến thắng\n      this.createSpriteNodePay(v3.x,v3.y,this.PayUserSprite);\n    }\n  }\n}\n\n// Hàm để tìm node tương ứng với người chiến thắng\nprivate findWinnerNode(winnerName) {\n  // Lặp qua danh sách nhãn để tìm node có tên trùng khớp với người chiến thắng\n  for (let i = 0; i < this.ListLabel.length; i++) {\n    if (winnerName === this.ListLabel[i].string) {\n      return this.ListLabel[i].node;\n    }\n  }\n  return null; // Trả về null nếu không tìm thấy node\n}\n\n\ncreateSpriteNodePay(posX, posY, spriteFrames: SpriteFrame[]) {\n  // Lặp qua từng sprite frame để tạo node tương ứng\n  for (let i = 0; i < spriteFrames.length; i++) {\n    // Tạo một Node mới\n    const spriteNode = new Node(\"SpriteNode\");\n    spriteNode.scale = new Vec3(0.5, 0.5);\n\n    // Thêm một component Sprite vào Node\n    const spriteComponent = spriteNode.addComponent(Sprite);\n\n    // Gán SpriteFrame cho component Sprite dựa trên index\n    spriteComponent.spriteFrame = spriteFrames[i];\n\n    // Thêm Node vào Scene hiện tại (ví dụ: Node cha của tất cả Sprite)\n    this.PayUser.addChild(spriteNode); // Giả sử winner.node là node của người chiến thắng\n\n    // Tween Node đến vị trí mong muốn\n    tween(spriteNode)\n      .delay(i * 0.1) // thiết lập thời gian trễ dựa trên index của node\n      .to(1, { position: new Vec3(posX, posY) })\n      .call(() => {\n        spriteNode.active = false;\n      })\n      .start();\n  }\n}\n}\n"]}