{"version":3,"sources":["file:///Users/waostudio/Desktop/dragonfix/assets/Scripts/LoginScript/Connect.ts"],"names":["_decorator","Component","Label","Node","Animation","director","EditBox","Button","Colyseus","ccclass","property","loggedInUserSession","NetworkConnect","type","String","Number","Boolean","client","room","login","email","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","cookies","get","cookiesObject","parse","sessionValue","console","log","localStorage","setItem","LoadingPageProcess","active","loadingAnimProject","play","moveToGameScene","error","Signup","name","WarnEmail","userId","generateUUID","ResTable","ResBtnTb","WarnRes","warnLb","string","d","Date","getTime","uuid","replace","c","r","Math","random","floor","toString","loadScene","showErrorMessage","message","loginBtn","username","boxNameLogin","boxPassLogin","catch","LoginBtnactive","node","setTimeout","signUp","boxNameRes","boxPassRes","boxRePassRes","isValidEmail","length","ResBtn","emailPattern","test","start","Client","useSSL","hostname","port","checkToken","getItem","connect"],"mappings":"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","sourcesContent":["import {\n  _decorator,\n  Component,\n  instantiate,\n  Label,\n  Node,\n  Prefab,\n  Sprite,\n  SpriteFrame,\n  tween,\n  Vec3,\n  Animation,\n  director,\n  EditBox,\n  Button,\n} from \"cc\";\nconst { ccclass, property } = _decorator;\nimport Colyseus from \"db://colyseus-sdk/colyseus.js\";\nimport { getToken } from \"../Constant\";\n// import { AudioController } from \"./AudioController\";\n// import { Chip } from \"./Chip\";\nlet loggedInUserSession: any = null;\n\n@ccclass(\"NetworkConnect\")\nexport class NetworkConnect extends Component {\n  @property({ type: String })\n  hostname = \"localhost\";\n\n  @property({ type: Number })\n  port = 80;\n\n  @property({ type: Boolean })\n  useSSL = true;\n\n  @property(EditBox)\n  private boxNameRes: EditBox = null;\n\n  @property(EditBox)\n  private boxNameLogin: EditBox = null;\n\n  @property(EditBox)\n  private boxPassLogin: EditBox = null;\n\n  @property(EditBox)\n  private boxPassRes: EditBox = null;\n\n  @property(EditBox)\n  private boxRePassRes: EditBox = null;\n\n  @property(Node)\n  private LoadingPageProcess: Node = null;\n\n  @property(Animation)\n  private loadingAnimProject: Animation = null;\n\n  @property(Node)\n  private ResTable: Node;\n\n  @property(Node)\n  private ResBtnTb: Node;\n\n  @property(Animation)\n  private WarnRes: Animation;\n\n  @property(Animation)\n  private WarnEmail: Animation;\n\n  @property(Button)\n  private LoginBtn: Button;\n\n  @property(Button)\n  private ResBtn: Button;\n\n  @property(Button)\n  private LoginBtnactive: Button;\n\n  @property(Label)\n  private warnLb: Label;\n\n  // @property({\n  //   type: Chip,\n  // })\n  // private chipNode: Chip;\n\n  client!: Colyseus.Client;\n  room!: Colyseus.Room;\n  // private async login(email: string, password: string) {\n  //   try {\n  //     //   // Gửi thông tin đăng nhập đến phòng Colyseus\n  //     let response = await fetch(\n  //       \"https://adroit-appwrite.our-projects.org/v1/account/sessions/email\",\n  //       {\n  //         method: \"POST\",\n  //         headers: {\n  //           \"Access-Control-Allow-Origin\": \"*\",\n  //           \"Content-Type\": \"application/json\",\n  //           \"X-Appwrite-Response-Format\": \"1.5.0\",\n  //           \"X-Appwrite-Project\": \"game-provider\",\n  //         },\n  //         body: JSON.stringify({\n  //           email,\n  //           password,\n  //         }),\n  //       }\n  //     );\n  //     let headers = response.headers;\n  //     const cookies = headers.get(\"x-fallback-cookies\");\n  //     const cookiesObject = JSON.parse(cookies);\n  //     const sessionValue = cookiesObject[\"a_session_game-provider\"];\n  //     console.log(cookiesObject);\n\n  //     localStorage.setItem(\"Token\", sessionValue);\n  //     this.LoadingPageProcess.active = true;\n  //     this.loadingAnimProject.play();\n  //     this.moveToGameScene();\n  //   } catch (error) {\n  //     console.error(\"Error:\", error);\n  //     this.showErrorMessage(\"Incorrect email or password\");\n  //   }\n  // }\n  private async login(email: string, password: string) {\n    try {\n      // Gửi thông tin đăng nhập đến phòng Colyseus\n      let response = await fetch(\n        \"https://adroit-appwrite.our-projects.org/v1/account/sessions/email\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Content-Type\": \"application/json\",\n            \"X-Appwrite-Response-Format\": \"1.5.0\",\n            \"X-Appwrite-Project\": \"game-provider\",\n          },\n          body: JSON.stringify({\n            email,\n            password,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Incorrect username or password\");\n      }\n\n      let headers = response.headers;\n      const cookies = headers.get(\"x-fallback-cookies\");\n      const cookiesObject = JSON.parse(cookies);\n      const sessionValue = cookiesObject[\"a_session_game-provider\"];\n      console.log(cookiesObject);\n\n      localStorage.setItem(\"Token\", sessionValue);\n      this.LoadingPageProcess.active = true;\n      this.loadingAnimProject.play();\n      this.moveToGameScene();\n    } catch (error) {\n      console.error(\"Error:\", error);\n      throw new Error(\"Incorrect username or password\");\n    }\n  }\n\n  private async Signup(email: string, password: string, name: string) {\n    if (!email || !password || !name) {\n      this.WarnEmail.play(\"WarningEmail\");\n      return;\n    }\n    try {\n      // Gửi thông tin đăng nhập đến phòng Colyseus\n      let response = await fetch(\n        \"https://adroit-appwrite.our-projects.org/v1/account\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Content-Type\": \"application/json\",\n            \"X-Appwrite-Response-Format\": \"1.5.0\",\n            \"X-Appwrite-Project\": \"game-provider\",\n          },\n          body: JSON.stringify({\n            userId: this.generateUUID(),\n            email: email,\n            password: password,\n            name: name,\n          }),\n        }\n      );\n\n      if (response.ok) {\n        if (this.ResTable && this.ResBtnTb) {\n          this.ResTable.active = false;\n          this.ResBtnTb.active = false;\n          this.WarnRes.play();\n        }\n      } else {\n        this.warnLb.string = \"Account already exists\";\n        this.WarnEmail.play();\n      }\n    } catch (error) {\n      this.warnLb.string = \"Account already exists\";\n      this.WarnEmail.play();\n    }\n  }\n  generateUUID() {\n    let d = new Date().getTime();\n    const uuid = \"xxxxxxxxxxxxxxxyxxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n      const r = (d + Math.random() * 16) % 16 | 0;\n      d = Math.floor(d / 16);\n      return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n    });\n    return uuid;\n  }\n\n  private moveToGameScene() {\n    // Chuyển đến scene chơi game\n    director.loadScene(\"Game\");\n  }\n\n  private showErrorMessage(message: string) {\n    // Hiển thị thông báo lỗi trên màn hình nếu cần\n  }\n\n  private loginBtn() {\n    const username = this.boxNameLogin.string;\n    const password = this.boxPassLogin.string;\n\n    // Kiểm tra username và password không được để trống\n    if (!username) {\n      this.warnLb.string = \" Email, password must not be empty\";\n      this.WarnEmail.play();\n      return;\n    }\n\n    if (!password) {\n      this.warnLb.string = \" Email, password must not be empty\";\n      this.WarnEmail.play();\n      return;\n    }\n\n    // Thực hiện đăng nhập\n    this.login(username, password).catch((error: any) => {\n      this.warnLb.string = \"Incorrect username or password\";\n      this.WarnEmail.play();\n    });\n\n    this.LoginBtnactive.node.active = true;\n    setTimeout(() => {\n      this.LoginBtnactive.node.active = false;\n    }, 3000);\n  }\n\n  private signUp(email: string, password: string, name: string) {\n    email = this.boxNameRes.string;\n    password = this.boxPassRes.string;\n    name = this.boxRePassRes.string;\n\n    if (!email) {\n      this.warnLb.string = \" Email, password, and name must not be empty\";\n      this.WarnEmail.play();\n      return;\n    }\n    if (!password) {\n      this.warnLb.string = \" Email, password, and name must not be empty\";\n      this.WarnEmail.play();\n      return;\n    }\n    if (!name) {\n      this.warnLb.string = \" Email, password, and name must not be empty\";\n      this.WarnEmail.play();\n      return;\n    }\n\n    // Kiểm tra email hợp lệ\n    if (!this.isValidEmail(email)) {\n      this.warnLb.string = \"Invalid email address\";\n      this.WarnEmail.play();\n      return;\n    }\n\n    // Kiểm tra độ dài mật khẩu\n    if (password.length < 8) {\n      this.warnLb.string = \"Password must be at least 8 characters long\";\n      this.WarnEmail.play();\n      return;\n    }\n\n    // Thực hiện đăng ký\n    this.Signup(email, password, name);\n    this.ResBtn.node.active = true;\n    setTimeout(() => {\n      this.ResBtn.node.active = false;\n    }, 3000);\n  }\n\n  private isValidEmail(email: string): boolean {\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailPattern.test(email);\n  }\n\n  // Phương thức để xử lý kết quả đăng nhập từ server\n  // private handleLoginResponse(response: any) {\n  //   if (response.success) {\n  //     // Nếu đăng nhập thành công, chuyển đến scene game\n  //     this.moveToGameScene();\n  //   } else {\n  //     // Nếu đăng nhập thất bại, hiển thị thông báo lỗi\n  //     this.showErrorMessage(\"Incorrect email or password\");\n  //   }\n  // }\n\n  start() {\n    // Khởi tạo kết nối đến Colyseus và gọi phương thức connect\n    this.client = new Colyseus.Client(\n      `${this.useSSL ? \"wss\" : \"ws\"}://${this.hostname}:${this.port}`\n    );\n    const uuid = this.generateUUID();\n    const checkToken = localStorage.getItem(\"key\");\n    if (checkToken) {\n      this.LoadingPageProcess.active = true;\n      this.loadingAnimProject.play();\n      this.moveToGameScene();\n    } else {\n    }\n    // this.connect();\n  }\n\n  async connect() {\n    // try {\n    // this.client.auth.token =\n    //   \"eyJpZCI6IjY2MWUyNmFmMDAzOWVjOGFhNDc1Iiwic2VjcmV0IjoiNjQ2MTQ5N2U0YjNiY2I3ODUwM2VjZmZhZmJiMWI2ZmJjNTViNmYwNWM5MTJkYmYxMDIxYzY5YWY3Mjc1MTU5NDkyNzk0Y2ZjMTE5OTU4OTRhYTJjZWViYWZmZDZlZjQxZmQ4ODNiMDQ1NmVkMmQzNzU4YmY3OGI3MjRmYWNjN2MxNzVjNzFkNDU1ZDlhZmM1OTNiMjQwMDBiMDVkNDYyMzZjMzBhYTM4MWVmZTM4ZWVlMDU5OTVmMDYwMTkwMTk3ODMxOGI0OWIxYjIwYjg0ZDMyODVkMGQyMzA2ZmY0NWMyNzk0MjdmZjkzZmNmYzdmYTNiMjAyNzE1MTQ4ZDE3YiJ9\";\n    // // this.client.joinOrCreate(\"room1\").then((room) => {\n    // //   console.log(room);\n    // // });\n    // // Kết nối đến Colyseus và tham gia vào phòng\n    // const rooms = await this.client.getAvailableRooms(\"room1\");\n    // if (rooms.length === 0) {\n    //   this.room = await this.client.create(\"room1\");\n    //   // console.log(\"Created new room with sessionId:\", this.room.sessionId);\n    // } else {\n    //   // // Nếu có phòng có sẵn, tham gia vào phòng đầu tiên trong danh sách\n    //   this.room = await this.client.joinById(rooms[0].roomId);\n    //   console.log(\n    //     \"Joined existing room with sessionId:\",\n    //     this.room.sessionId\n    //   );\n    //   }\n    //   console.log(\"Joined successfully!\");\n    //   console.log(\"User's sessionId:\", this.room.sessionId);\n    //   this.room.onMessage(\"loginResult\", (message) => {\n    //     if (message) {\n    //       console.log(message);\n    //       // this.LoadingNode.active = true;\n    //       localStorage.setItem(\"key\", message.secret);\n    //       console.log(message);\n    //       this.moveToGameScene();\n    //     } else {\n    //       console.log(\"Not define\");\n    //     }\n    //   });\n    // } catch (e) {\n    //   console.error(\"Error:\", e);\n    // }\n  }\n}\n"]}