{"version":3,"sources":["file:///Users/waostudio/Downloads/Telegram%20Desktop/TigerDragon4/assets/Scripts/GameController.ts"],"names":["_decorator","Component","Label","Node","tween","Vec3","Animation","SpriteFrame","Sprite","Graphics","Color","instantiate","Prefab","Button","Chip","NetworkConnect","ccclass","property","GameController","type","UserBetTigerIcon","UserBetDragonIcon","UserBetTieIcon","clonePosCardL","clonePosCardR","randomValueCardR","randomValueCardL","balanceUser","currentCol","currentRow","currentRowClone","currentColL","currentRowL","previousPrefabType","previousPrefabTypeL","winIntroType","numRows","numCols","cellWidth","cellHeight","countdownTimerBet","cloneBalance","GameEnd","GameStateStart","GameStateIdle","GameStateReuslt","GameStateFight","start","CardNodeL","position","clone","CardNodeR","shuffelCard","drawRectangle","drawRectangle1","drawRectangle2","drawRectangle3","drawRectangleTotalUser","drawRectanglel","AvatarL1","AvatarL2","AvatarL3","AvatarL4","AvatarL5","AvatarL6","drawGrid","GridL","GridR","drawRectangleTotal","update","deltaTime","gameState","UserName","string","room","sessionId","Idle","StartBetting","PosBet","stopBetting","fight","shownResult","listCancelBet","node","active","addScore","Score","betLB","betValueIcon","BalancerLb","toString","betTigerBtn","chipNode","UserBet","betTigerLb","ToatalUser","createSpriteNode","ValueAnim","betDragonBtn","betDragonLb","send","JSON","stringify","betAmount","betType","ValueAnim1","betTieBtn","betTieLb","ValueAnim2","to","call","CardNodeAnim","RestartBalnce","displayImages","resultDragon","spriteFrame","listCardRes","sprite","getComponent","console","error","displayImagesCardR","resultTiger","campareCard","WinNotice","play","DragonWinintro","on","EventType","FINISHED","TigerNode","DragonNode","tweenChildrenToPosition","setTimeout","off","ExplosionDra","width","height","graphics","AvatarNode","addComponent","lightGray","fillColor","glowColor","BLACK","strokeColor","lineWidth","roundRect","fill","stroke","AvatarNode1","AvatarNode2","AvatarNode3","number","circleRadius","WHITE","circle","list","ToatalAv","centerX","centerY","pillHeight","pillWidth","pillRadius","bodyWidth","rect","arc","Math","PI","Avatar","posX","PosY","PosNode","spriteNode","scale","spriteComponent","buttonPub","addChild","createSpriteNodePay","posY","posNode","spriteFrames","i","length","delay","Grid","gridSize","min","y","moveTo","lineTo","j","x","createGrid","prefabType","Tie","Under","Over","name","clearGrid","cell","pref","removeAllChildren","createGridNot","clearGridNt","prefL","startCountdown","timeCountDown","timereset","countdownInterval","setInterval","clearInterval","Cancel","CancelBetTiger","CancelBetDragon","CancelBetTie","targetPosition","duration","children","forEach","child","removeFromParent","TotalUser","log","PayUser","PayUserSprite","bankCard","StartBet"],"mappings":"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","sourcesContent":["import {\n  _decorator,\n  Component,\n  Label,\n  Node,\n  tween,\n  Vec3,\n  Animation,\n  SpriteFrame,\n  Sprite,\n  math,\n  log,\n  Graphics,\n  Color,\n  instantiate,\n  Prefab,\n  Button,\n  CCInteger,\n} from \"cc\";\nimport { Chip } from \"./Chip\";\nimport { NetworkConnect } from \"./NetworkConnect\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"GameController\")\nexport class GameController extends Component {\n  @property({\n    type: Label,\n  })\n  private betTigerLb: Label;\n\n  @property({\n    type: Label,\n  })\n  private betDragonLb: Label;\n\n  @property({\n    type: Label,\n  })\n  private betTieLb: Label;\n\n  @property({\n    type: Label,\n  })\n  private UserName: Label;\n\n  @property({\n    type: Label,\n  })\n  private BalancerLb: Label;\n\n  @property({\n    type: Chip,\n  })\n  private chipNode: Chip;\n\n  @property({\n    type: Node,\n  })\n  private CardNodeL: Node;\n\n  @property({\n    type: Node,\n  })\n  private CardNodeR: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarNode: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarNode1: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarNode2: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarNode3: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarL1: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarL2: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarL3: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarL4: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarL5: Node;\n\n  @property({\n    type: Node,\n  })\n  private AvatarL6: Node;\n\n  @property({\n    type: Node,\n  })\n  private GridL: Node;\n  @property({\n    type: Node,\n  })\n  private GridR: Node;\n\n  @property({\n    type: Node,\n  })\n  private ValueAnim: Node;\n\n  @property({\n    type: Node,\n  })\n  private ValueAnim1: Node;\n\n  @property({\n    type: Node,\n  })\n  private ValueAnim2: Node;\n\n  @property({\n    type: Animation,\n  })\n  private CardNodeAnim: Animation;\n\n  @property({\n    type: Animation,\n  })\n  private WinNotice: Animation;\n\n  @property({\n    type: Animation,\n  })\n  private DragonWinintro: Animation;\n\n  @property({\n    type: Animation,\n  })\n  private DragonNode: Animation;\n\n  @property({\n    type: Animation,\n  })\n  private TigerNode: Animation;\n\n  @property({\n    type: Animation,\n  })\n  private StartBet: Animation;\n\n  @property({\n    type: Animation,\n  })\n  private ExplosionDra: Animation;\n\n  @property({\n    type: SpriteFrame,\n  })\n  private listCardRes: SpriteFrame[] = [];\n\n  @property({\n    type: SpriteFrame,\n  })\n  private bankCard: SpriteFrame;\n\n  @property(Node)\n  pref: Node;\n\n  @property(Node)\n  prefL: Node;\n\n  @property(Prefab)\n  private Over: Prefab = null;\n\n  @property(Prefab)\n  private Under: Prefab = null;\n\n  @property(Prefab)\n  private Tie: Prefab = null;\n\n  // @property(Label)\n  // private countDownLb: Label;\n\n  @property({\n    type: Node,\n  })\n  private ToatalAv: Node[] = [];\n\n  @property({\n    type: Node,\n  })\n  private ToatalUser: Node[] = [];\n\n  @property({\n    type: Node,\n  })\n  private PayUser: Node[] = [];\n\n  @property({\n    type: Label,\n  })\n  private BalanceList: Label[] = [];\n\n  @property({\n    type: SpriteFrame,\n  })\n  private PayUserSprite: SpriteFrame[] = [];\n\n  @property({ type: [Button] })\n  listCancelBet: Button[] = [];\n\n  @property(NetworkConnect)\n  private NetworkConnect: NetworkConnect;\n\n  private UserBetTigerIcon: number = 0;\n  private UserBetDragonIcon: number = 0;\n  private UserBetTieIcon: number = 0;\n  private clonePosCardL: Vec3 = new Vec3();\n  private clonePosCardR: Vec3 = new Vec3();\n  private randomValueCardR: number = 0;\n  private randomValueCardL: number = 0;\n  private balanceUser: number = 300;\n  private currentCol = 0;\n  private currentRow = 0;\n  private currentRowClone = 0;\n  private currentColL = 0;\n  private currentRowL = 0;\n  previousPrefabType = null;\n  previousPrefabTypeL = null;\n  winIntroType;\n  private numRows: number = 6;\n  private numCols: number = 20;\n  private cellWidth: number = 27;\n  private cellHeight: number = 30;\n  private countdownTimerBet: number = 30;\n  private cloneBalance: number = 0;\n  private GameEnd: boolean = false;\n  private GameStateStart: boolean = false;\n  private GameStateIdle: boolean = false;\n  private GameStateReuslt: boolean = false;\n  private GameStateFight: boolean = false;\n\n  start() {\n    this.clonePosCardL = this.CardNodeL.position.clone();\n    this.clonePosCardR = this.CardNodeR.position.clone();\n    this.shuffelCard();\n    this.drawRectangle();\n    this.drawRectangle1();\n    this.drawRectangle2();\n    this.drawRectangle3();\n    this.drawRectangleTotalUser(0);\n    this.drawRectangleTotalUser(1);\n    this.drawRectangleTotalUser(2);\n\n    this.drawRectanglel(this.AvatarL1);\n    this.drawRectanglel(this.AvatarL2);\n    this.drawRectanglel(this.AvatarL3);\n    this.drawRectanglel(this.AvatarL4);\n    this.drawRectanglel(this.AvatarL5);\n    this.drawRectanglel(this.AvatarL6);\n    this.drawGrid(this.GridL);\n    this.drawGrid(this.GridR);\n    this.drawRectangleTotal(0);\n    this.drawRectangleTotal(1);\n    this.drawRectangleTotal(2);\n  }\n\n  update(deltaTime: number) {\n    if (\n      this.NetworkConnect.gameState === \"idle\" &&\n      this.GameStateIdle === false\n    ) {\n      this.UserName.string = this.NetworkConnect.room.sessionId;\n      this.Idle();\n      this.GameEnd = false;\n      this.GameStateIdle = true;\n      this.GameStateReuslt = false;\n      this.GameStateFight = false;\n    }\n    if (\n      this.NetworkConnect.gameState === \"startBetting\" &&\n      this.GameStateStart === false\n    ) {\n      this.StartBetting();\n      this.GameStateStart = true;\n    }\n\n    if (this.NetworkConnect.gameState === \"startBetting\") {\n      this.PosBet();\n    }\n\n    if (this.NetworkConnect.gameState === \"stopBetting\") {\n      this.GameStateStart = false;\n      this.stopBetting();\n    }\n\n    if (\n      this.NetworkConnect.gameState === \"fight\" &&\n      this.GameStateFight === false\n    ) {\n      this.fight();\n      this.GameStateFight = true;\n    }\n    if (\n      this.NetworkConnect.gameState === \"showResult\" &&\n      this.GameStateReuslt === false\n    ) {\n      this.shownResult();\n      this.GameStateReuslt = true;\n    }\n    if (this.NetworkConnect.gameState === \"payout\") {\n    }\n    if (this.cloneBalance > 0) {\n      this.listCancelBet[0].node.active = true;\n    } else {\n      this.listCancelBet[0].node.active = false;\n    }\n  }\n\n  private addScore(Score: number, betLB: Label, betValueIcon: number) {\n    if (this.balanceUser >= Score) {\n      betValueIcon = betValueIcon + Score;\n      this.balanceUser = this.balanceUser - Score;\n      this.cloneBalance = this.cloneBalance + Score;\n      this.BalancerLb.string = this.balanceUser.toString();\n      betLB.string = betValueIcon.toString();\n    }\n  }\n\n  private betTigerBtn() {\n    if (this.balanceUser >= this.chipNode.UserBet && this.GameEnd === false) {\n      this.addScore(\n        this.chipNode.UserBet,\n        this.betTigerLb,\n        this.UserBetTigerIcon\n      );\n      this.UserBetTigerIcon += this.chipNode.UserBet;\n      this.ToatalUser[2].active = true;\n      this.listCancelBet[1].node.active = true;\n\n      this.createSpriteNode(-406, 200, this.ValueAnim);\n    }\n  }\n\n  private betDragonBtn() {\n    if (this.balanceUser >= this.chipNode.UserBet && this.GameEnd === false) {\n      this.addScore(\n        this.chipNode.UserBet,\n        this.betDragonLb,\n        this.UserBetDragonIcon\n      );\n      this.UserBetDragonIcon += this.chipNode.UserBet;\n      this.ToatalUser[0].active = true;\n      this.listCancelBet[3].node.active = true;\n      this.NetworkConnect.room.send(\n        \"Bet\",\n        JSON.stringify({ betAmount: this.chipNode.UserBet, betType: \"Dragon\" })\n      );\n      this.PosBet();\n      this.createSpriteNode(-951, 193, this.ValueAnim1);\n    }\n  }\n\n  private betTieBtn() {\n    if (this.balanceUser >= this.chipNode.UserBet && this.GameEnd === false) {\n      this.addScore(this.chipNode.UserBet, this.betTieLb, this.UserBetTieIcon);\n      this.listCancelBet[2].node.active = true;\n      this.UserBetTieIcon += this.chipNode.UserBet;\n      this.ToatalUser[1].active = true;\n      this.createSpriteNode(-670, 221, this.ValueAnim2);\n    }\n  }\n\n  private shuffelCard() {\n    tween(this.CardNodeL)\n      .to(0.4, { position: new Vec3(1, 70) })\n      .call(() => {\n        this.CardNodeL.active = false;\n        this.CardNodeR.active = false;\n        this.CardNodeAnim.node.active = true;\n        this.RestartBalnce();\n        // setTimeout(() => {\n        //   this.CardNodeAnim.node.active = false;\n        //   this.CardNodeL.active = true;\n        //   this.CardNodeR.active = true;\n        //   this.CardNodeR.getComponent(Sprite).spriteFrame = this.bankCard;\n        //   this.CardNodeL.getComponent(Sprite).spriteFrame = this.bankCard;\n        //   tween(this.CardNodeL)\n        //     .to(0.4, { position: this.clonePosCardL })\n        //     .call(() => {\n        //       this.GameEnd = false;\n        //       setTimeout(() => {\n        //         tween(this.CardNodeL)\n        //           .to(0.4, {\n        //             position: new Vec3(\n        //               this.CardNodeL.position.x + 100,\n        //               this.CardNodeL.position.y - 300\n        //             ),\n        //           })\n        //           .call(() => {\n        //             this.displayImages();\n        //           })\n        //           .start();\n        //       }, 30000); //Waitime\n        //     })\n        //     .start();\n        //   tween(this.CardNodeR)\n        //     .to(0.4, { position: this.clonePosCardR })\n        //     .call(() => {\n        //       console.log(\"bat dau dem\");\n        //       this.startCountdown(this.countdownTimerBet, 30);\n        //       this.StartBet.play(\"Startbet\");\n        //       setTimeout(() => {\n        //         tween(this.CardNodeR)\n        //           .to(0.4, {\n        //             position: new Vec3(\n        //               this.CardNodeR.position.x - 100,\n        //               this.CardNodeR.position.y - 300\n        //             ),\n        //           })\n        //           .call(() => {\n        //             this.displayImagesCardR();\n        //             this.campareCard();\n        //             this.createGrid();\n        //             this.createGridNot();\n        //           })\n        //           .start();\n        //         this.GameEnd = true;\n        //         this.StartBet.play(\"EndBet\");\n        //       }, 30000); //WaitTime\n        //     })\n        //     .start();\n        // }, 3000); //ShuffleTime\n      })\n      .start();\n\n    tween(this.CardNodeR)\n      .to(0.4, { position: new Vec3(1, 70) })\n      .start();\n  }\n\n  private displayImages() {\n    this.randomValueCardL = this.NetworkConnect.resultDragon;\n    // console.log(this.randomValueCardL);\n\n    const spriteFrame = this.listCardRes[this.randomValueCardL - 1];\n    const sprite = this.CardNodeL.getComponent(Sprite);\n    if (sprite && spriteFrame) {\n      sprite.spriteFrame = spriteFrame;\n    } else {\n      console.error(\"Sprite or SpriteFrame is missing!\");\n    }\n  }\n\n  private displayImagesCardR() {\n    this.randomValueCardR = this.NetworkConnect.resultTiger;\n    // console.log(this.randomValueCardR);\n    const spriteFrame = this.listCardRes[this.randomValueCardR - 1];\n    const sprite = this.CardNodeR.getComponent(Sprite);\n    if (sprite && spriteFrame) {\n      sprite.spriteFrame = spriteFrame;\n    } else {\n      console.error(\"Sprite or SpriteFrame is missing!\");\n    }\n  }\n\n  private campareCard() {\n    if (this.randomValueCardR > this.randomValueCardL) {\n      this.balanceUser = this.balanceUser + this.UserBetTigerIcon * 2;\n      this.BalancerLb.string = this.balanceUser.toString();\n      this.WinNotice.play(\"TigerWin\");\n      this.DragonWinintro.play(\"TigerIntro\");\n      this.winIntroType = \"TigerIntro\";\n      this.DragonWinintro.on(Animation.EventType.FINISHED, () => {\n        if (this.winIntroType === \"TigerIntro\") {\n          this.TigerNode.play(\"TigerAttack\");\n          // this.winIntroType = \"TigerAttack\";\n          this.TigerNode.on(Animation.EventType.FINISHED, () => {\n            this.DragonNode.play(\"DragonHurt\");\n            this.DragonNode.on(Animation.EventType.FINISHED, () => {\n              this.DragonNode.play(\"DragonIde\");\n              this.tweenChildrenToPosition(\n                this.ValueAnim,\n                new Vec3(30, 560),\n                0.5\n              );\n              this.tweenChildrenToPosition(\n                this.ValueAnim1,\n                new Vec3(30, 560),\n                0.5\n              );\n              this.tweenChildrenToPosition(\n                this.ValueAnim2,\n                new Vec3(30, 560),\n                0.5\n              );\n            });\n\n            this.TigerNode.play(\"TigerIde\");\n\n            // this.DragonNode.play(\"DragonIde\");\n            setTimeout(() => {\n              this.shuffelCard();\n            }, 4000);\n            this.TigerNode.off(Animation.EventType.FINISHED);\n          });\n        }\n      });\n    }\n    if (this.randomValueCardR < this.randomValueCardL) {\n      this.balanceUser = this.balanceUser + this.UserBetDragonIcon * 2;\n      this.BalancerLb.string = this.balanceUser.toString();\n      this.WinNotice.play(\"DragonWinIcon\");\n      this.DragonWinintro.play(\"DragonIntro\");\n      // Sử dụng biến để xác định loại WinIntro\n      this.winIntroType = \"DragonIntro\";\n      this.DragonWinintro.on(Animation.EventType.FINISHED, () => {\n        // Kiểm tra loại WinIntro\n        if (this.winIntroType === \"DragonIntro\") {\n          this.DragonNode.play(\"DragonAttack\");\n          this.DragonNode.on(Animation.EventType.FINISHED, () => {\n            this.ExplosionDra.play();\n            this.TigerNode.play(\"TigerHurt\");\n            this.TigerNode.on(Animation.EventType.FINISHED, () => {\n              this.TigerNode.play(\"TigerIde\");\n              this.tweenChildrenToPosition(\n                this.ValueAnim,\n                new Vec3(30, 560),\n                0.5\n              );\n              this.tweenChildrenToPosition(\n                this.ValueAnim1,\n                new Vec3(30, 560),\n                0.5\n              );\n              this.tweenChildrenToPosition(\n                this.ValueAnim2,\n                new Vec3(30, 560),\n                0.5\n              );\n            });\n            this.DragonNode.play(\"DragonIde\");\n\n            setTimeout(() => {\n              this.shuffelCard();\n            }, 4000);\n            this.DragonNode.off(Animation.EventType.FINISHED);\n          });\n        }\n      });\n    }\n    if (this.randomValueCardR === this.randomValueCardL) {\n      this.balanceUser = this.balanceUser + this.UserBetTieIcon * 18;\n      this.BalancerLb.string = this.balanceUser.toString();\n      this.tweenChildrenToPosition(this.ValueAnim, new Vec3(30, 560), 0.5);\n      this.tweenChildrenToPosition(this.ValueAnim1, new Vec3(30, 560), 0.5);\n      this.tweenChildrenToPosition(this.ValueAnim2, new Vec3(30, 560), 0.5);\n      setTimeout(() => {\n        this.shuffelCard();\n      }, 4000);\n    }\n  }\n\n  drawRectangle() {\n    const width: number = 250;\n    const height: number = 120;\n    const graphics = this.AvatarNode.addComponent(Graphics);\n    const lightGray = new Color(116, 116, 116, 100);\n    graphics.fillColor = lightGray;\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 5;\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\n    graphics.fill();\n    graphics.stroke();\n  }\n\n  drawRectangle1() {\n    const width: number = 220;\n    const height: number = 110;\n    const graphics = this.AvatarNode1.addComponent(Graphics);\n    const lightGray = new Color(116, 116, 116, 100);\n    graphics.fillColor = lightGray;\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 5;\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\n    graphics.fill();\n    graphics.stroke();\n  }\n\n  drawRectangle2() {\n    const width: number = 220;\n    const height: number = 110;\n    const graphics = this.AvatarNode2.addComponent(Graphics);\n    const lightGray = new Color(116, 116, 116, 100);\n    graphics.fillColor = lightGray;\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 5;\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\n    graphics.fill();\n    graphics.stroke();\n  }\n\n  drawRectangle3() {\n    const width: number = 220;\n    const height: number = 110;\n    const graphics = this.AvatarNode3.addComponent(Graphics);\n    const lightGray = new Color(116, 116, 116, 100);\n    graphics.fillColor = lightGray;\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 5;\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\n    graphics.fill();\n    graphics.stroke();\n  }\n\n  drawRectangleTotalUser(number: number) {\n    const width: number = 60;\n    const height: number = 20;\n    const graphics = this.ToatalUser[number].addComponent(Graphics);\n    const lightGray = new Color(0, 0, 0, 255);\n    graphics.fillColor = lightGray;\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 5;\n    graphics.roundRect(-width / 2, -height / 2, width, height, 2);\n    graphics.fill();\n    graphics.stroke();\n\n    const circleRadius: number = 10;\n    graphics.fillColor = Color.WHITE; // Màu trắng\n    graphics.strokeColor = Color.BLACK; // Viền màu đen\n    graphics.circle(-20, 0, circleRadius); // Vẽ hình tròn tại tọa độ (0,0) với bán kính circleRadius\n    graphics.fill(); // Tô màu\n    graphics.stroke(); // Vẽ viền\n  }\n  private drawRectangleTotal(list: number) {\n    const width: number = 100;\n    const height: number = 70;\n    const graphics = this.ToatalAv[list].addComponent(Graphics);\n    const lightGray = new Color(0, 0, 0, 255);\n    graphics.fillColor = lightGray;\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 1;\n\n    // Tính toán các điểm để vẽ viên thuốc\n    const centerX = 0;\n    const centerY = 0;\n    const pillHeight = height * 0.6; // Chiều cao của viên thuốc\n    const pillWidth = width * 0.8; // Chiều rộng của viên thuốc\n    const pillRadius = pillHeight / 2; // Bán kính của đầu viên thuốc\n    const bodyWidth = width * 0.5; // Chiều rộng của phần thân viên thuốc\n\n    // Vẽ phần thân của viên thuốc\n    graphics.rect(\n      centerX - bodyWidth / 2,\n      centerY - pillRadius,\n      bodyWidth,\n      pillHeight\n    );\n\n    // Vẽ đầu viên thuốc bên trái\n    graphics.arc(\n      centerX - pillWidth / 2 + pillRadius,\n      centerY,\n      pillRadius,\n      -Math.PI / 2,\n      Math.PI / 2,\n      false\n    );\n\n    // Vẽ đầu viên thuốc bên phải\n    graphics.arc(\n      centerX + pillWidth / 2 - pillRadius,\n      centerY,\n      pillRadius,\n      Math.PI / 2,\n      -Math.PI / 2,\n      false\n    );\n\n    graphics.fill(); // Đổ màu\n    graphics.stroke(); // Vẽ viền\n  }\n  drawRectanglel(Avatar: Node) {\n    const width: number = 220;\n    const height: number = 100;\n    const graphics = Avatar.addComponent(Graphics);\n\n    const lightGray = new Color(116, 116, 116, 100);\n    graphics.fillColor = lightGray;\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 5;\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\n    graphics.fill();\n    graphics.stroke();\n  }\n\n  createSpriteNode(posX, PosY, PosNode: Node) {\n    // Tạo một Node mới\n    const spriteNode = new Node(\"SpriteNode\");\n    spriteNode.scale = new Vec3(0.5, 0.5);\n\n    // Thêm một component Sprite vào Node\n    const spriteComponent = spriteNode.addComponent(Sprite);\n\n    // Gán SpriteFrame cho component Sprite\n    spriteComponent.spriteFrame =\n      this.chipNode.buttonPub.node.getComponent(Sprite).spriteFrame;\n    // spriteNode.position=new Vec3(this.chipNode.buttonPub.node.position)\n    // Thêm Node vào Scene hiện tại (ví dụ: Node cha của tất cả Sprite)\n    PosNode.addChild(spriteNode);\n    tween(spriteNode)\n      .to(0.3, { position: new Vec3(posX, PosY) })\n      .start();\n  }\n\n  createSpriteNodePay(posX, posY, posNode: Node, spriteFrames: SpriteFrame[]) {\n    // Lặp qua từng sprite frame để tạo node tương ứng\n    for (let i = 0; i < spriteFrames.length; i++) {\n      // Tạo một Node mới\n      const spriteNode = new Node(\"SpriteNode\");\n      spriteNode.scale = new Vec3(0.5, 0.5);\n\n      // Thêm một component Sprite vào Node\n      const spriteComponent = spriteNode.addComponent(Sprite);\n\n      // Gán SpriteFrame cho component Sprite dựa trên index\n      spriteComponent.spriteFrame = spriteFrames[i];\n\n      // Thêm Node vào Scene hiện tại (ví dụ: Node cha của tất cả Sprite)\n      posNode.addChild(spriteNode);\n\n      // Tween Node đến vị trí mong muốn\n      tween(spriteNode)\n        .delay(i * 0.1) // thiết lập thời gian trễ dựa trên index của node\n        .to(0.3, { position: new Vec3(posX, posY) })\n        .call(() => {\n          spriteNode.active = false;\n        })\n        .start();\n    }\n  }\n\n  drawGrid(Grid: Node) {\n    const numRows: number = this.numRows;\n    const numCols: number = this.numCols;\n    const gridSize: number = Math.min(575 / numCols, 200 / numRows); // Kích thước ô vuông\n    const cellWidth: number = this.cellWidth; // Chiều rộng của mỗi ô\n    const cellHeight: number = this.cellHeight; // Chiều cao của mỗi ô\n\n    const graphics = Grid.addComponent(Graphics);\n    const lightGray = new Color(116, 116, 116, 50);\n    const glowColor = Color.BLACK;\n    graphics.strokeColor = glowColor;\n    graphics.lineWidth = 4;\n\n    // Vẽ các đường ngang\n    for (let i = 0; i <= numRows; i++) {\n      const y = i * cellHeight - (numRows * cellHeight) / 2; // Đặt lưới vào giữa theo chiều cao\n      graphics.moveTo((-numCols * cellWidth) / 2, y);\n      graphics.lineTo((numCols * cellWidth) / 2, y);\n      graphics.stroke();\n    }\n\n    for (let j = 0; j <= numCols; j++) {\n      const x = j * cellWidth - (numCols * cellWidth) / 2; // Đặt lưới vào giữa theo chiều rộng\n      graphics.moveTo(x, (-numRows * cellHeight) / 2);\n      graphics.lineTo(x, (numRows * cellHeight) / 2);\n      graphics.stroke();\n    }\n\n    // Tô màu cho lưới\n    graphics.fillColor = lightGray;\n    graphics.rect(\n      (-numCols * cellWidth) / 2,\n      (-numRows * cellHeight) / 2,\n      numCols * cellWidth,\n      numRows * cellHeight\n    );\n    graphics.fill();\n  }\n\n  private createGrid() {\n    let prefabType;\n    if (this.randomValueCardL === this.randomValueCardR) {\n      prefabType = this.Tie;\n    } else if (this.randomValueCardL < this.randomValueCardR) {\n      prefabType = this.Under;\n    } else if (this.randomValueCardL > this.randomValueCardR) {\n      prefabType = this.Over;\n    }\n\n    if (\n      this.currentRowClone > 5 &&\n      prefabType.name !== this.previousPrefabType.name\n    ) {\n      this.currentCol++;\n      // this.currentRow = 0;\n      if (this.currentCol >= this.numCols) {\n        this.clearGrid();\n        this.currentCol = 0;\n      }\n    }\n    if (\n      this.previousPrefabType !== null &&\n      prefabType.name !== this.previousPrefabType.name\n    ) {\n      this.currentCol++;\n      this.currentRow = 0;\n      this.currentRowClone = 0;\n      if (this.currentCol >= this.numCols) {\n        this.clearGrid();\n        this.currentCol = 0;\n      }\n    }\n\n    const cell = instantiate(prefabType);\n    const posX = this.currentCol * this.cellWidth;\n    const posY = -this.currentRow * this.cellHeight;\n    cell.position = new Vec3(posX, posY);\n    this.pref.addChild(cell);\n\n    this.previousPrefabType = prefabType;\n    this.currentRowClone++;\n    if (this.currentRow < 5) {\n      this.currentRow++;\n    }\n  }\n\n  private clearGrid() {\n    this.pref.removeAllChildren();\n  }\n\n  private createGridNot() {\n    let prefabType;\n    if (this.randomValueCardL === this.randomValueCardR) {\n      prefabType = this.Tie;\n    } else if (this.randomValueCardL < this.randomValueCardR) {\n      prefabType = this.Under;\n    } else if (this.randomValueCardL > this.randomValueCardR) {\n      prefabType = this.Over;\n    }\n    if (this.currentRowL >= this.numRows) {\n      this.currentColL++;\n      this.currentRowL = 0;\n      if (this.currentColL >= this.numCols) {\n        this.clearGridNt();\n        this.currentCol = 0;\n      }\n    }\n    const cell = instantiate(prefabType);\n    const posX = this.currentColL * this.cellWidth; // Tính vị trí x dựa trên chỉ mục cột hiện tại\n    const posY = -this.currentRowL * this.cellHeight; // Tính vị trí y dựa trên chỉ mục hàng hiện tại\n    cell.position = new Vec3(posX, posY);\n    this.prefL.addChild(cell);\n    this.currentRowL++;\n  }\n\n  private clearGridNt() {\n    this.prefL.removeAllChildren();\n  }\n\n  private startCountdown(timeCountDown: number, timereset: number) {\n    this.countdownTimerBet = 30;\n    const countdownInterval = setInterval(() => {\n      this.countdownTimerBet--;\n      if (this.countdownTimerBet <= 0) {\n        clearInterval(countdownInterval);\n      }\n    }, 1000);\n  }\n\n  private Cancel() {\n    if (this.GameEnd === false) {\n      this.ToatalUser[0].active = false;\n      this.ToatalUser[1].active = false;\n      this.ToatalUser[2].active = false;\n      this.listCancelBet[0].node.active = false;\n      this.listCancelBet[1].node.active = false;\n      this.listCancelBet[2].node.active = false;\n      this.listCancelBet[3].node.active = false;\n      this.UserBetDragonIcon = 0;\n      this.UserBetTieIcon = 0;\n      this.UserBetTigerIcon = 0;\n      this.balanceUser = this.balanceUser + this.cloneBalance;\n      this.cloneBalance = 0;\n      this.BalancerLb.string = this.balanceUser.toString();\n      this.betDragonLb.string = this.UserBetDragonIcon.toString();\n      this.betTigerLb.string = this.UserBetTigerIcon.toString();\n      this.betTieLb.string = this.UserBetTieIcon.toString();\n      this.ValueAnim.removeAllChildren();\n      this.ValueAnim1.removeAllChildren();\n      this.ValueAnim2.removeAllChildren();\n    }\n  }\n\n  private RestartBalnce() {\n    this.ToatalUser[0].active = false;\n    this.ToatalUser[1].active = false;\n    this.ToatalUser[2].active = false;\n    this.listCancelBet[0].node.active = false;\n    this.listCancelBet[1].node.active = false;\n    this.listCancelBet[2].node.active = false;\n    this.listCancelBet[3].node.active = false;\n    this.UserBetDragonIcon = 0;\n    this.UserBetTieIcon = 0;\n    this.UserBetTigerIcon = 0;\n    this.cloneBalance = 0;\n    this.betDragonLb.string = this.UserBetDragonIcon.toString();\n    this.betTigerLb.string = this.UserBetTigerIcon.toString();\n    this.betTieLb.string = this.UserBetTieIcon.toString();\n    this.ValueAnim.removeAllChildren();\n    this.ValueAnim1.removeAllChildren();\n    this.ValueAnim2.removeAllChildren();\n  }\n\n  private CancelBetTiger() {\n    if (this.GameEnd === false) {\n      this.ToatalUser[2].active = false;\n      this.listCancelBet[1].node.active = false;\n\n      this.cloneBalance = this.cloneBalance - this.UserBetTigerIcon;\n      this.balanceUser = this.balanceUser + this.UserBetTigerIcon;\n      this.BalancerLb.string = this.balanceUser.toString();\n      this.UserBetTigerIcon = 0;\n      this.betTigerLb.string = this.UserBetTigerIcon.toString();\n      this.ValueAnim.removeAllChildren();\n    }\n  }\n\n  private CancelBetDragon() {\n    if (this.GameEnd === false) {\n      this.ToatalUser[0].active = false;\n      this.listCancelBet[3].node.active = false;\n      this.cloneBalance = this.cloneBalance - this.UserBetDragonIcon;\n      this.balanceUser = this.balanceUser + this.UserBetDragonIcon;\n      this.BalancerLb.string = this.balanceUser.toString();\n      this.UserBetDragonIcon = 0;\n      this.betDragonLb.string = this.UserBetDragonIcon.toString();\n      this.ValueAnim1.removeAllChildren();\n    }\n  }\n\n  private CancelBetTie() {\n    if (this.GameEnd === false) {\n      this.ToatalUser[1].active = false;\n      this.listCancelBet[2].node.active = false;\n\n      this.cloneBalance = this.cloneBalance - this.UserBetTieIcon;\n      this.balanceUser = this.balanceUser + this.UserBetTieIcon;\n      this.BalancerLb.string = this.balanceUser.toString();\n      this.UserBetTieIcon = 0;\n      this.betTieLb.string = this.UserBetTieIcon.toString();\n      this.ValueAnim2.removeAllChildren();\n    }\n  }\n\n  tweenChildrenToPosition(node: Node, targetPosition: Vec3, duration: number) {\n    node.children.forEach((child: Node) => {\n      tween(child)\n        .to(duration, { position: targetPosition })\n        .call(() => {\n          child.removeFromParent();\n          if (this.NetworkConnect.TotalUser > 0) {\n            console.log(\"aaa\");\n\n            this.createSpriteNodePay(\n              -1450,\n              1,\n              this.PayUser[0],\n              this.PayUserSprite\n            );\n          }\n          if (this.NetworkConnect.TotalUser > 1) {\n            console.log(\"aabbba\");\n\n            this.createSpriteNodePay(\n              -1450,\n              -100,\n              this.PayUser[1],\n              this.PayUserSprite\n            );\n          }\n          if (this.NetworkConnect.TotalUser > 2) {\n            console.log(\"cc\");\n\n            this.createSpriteNodePay(\n              -1450,\n              -200,\n              this.PayUser[2],\n              this.PayUserSprite\n            );\n          }\n          // this.createSpriteNodePay(\n          //   -1450,\n          //   -300,\n          //   this.PayUser[3],\n          //   this.PayUserSprite\n          // );\n          // this.createSpriteNodePay(\n          //   -1450,\n          //   -400,\n          //   this.PayUser[4],\n          //   this.PayUserSprite\n          // );\n          // this.createSpriteNodePay(\n          //   -1450,\n          //   -500,\n          //   this.PayUser[5],\n          //   this.PayUserSprite\n          // );\n\n          // this.createSpriteNodePay(\n          //   0,\n          //   -500,\n          //   this.PayUser[6],\n          //   this.PayUserSprite\n          // );\n        })\n\n        .start();\n    });\n  }\n\n  private Idle() {\n    this.shuffelCard();\n    this.DragonNode.play(\"DragonIde\");\n    this.TigerNode.play(\"TigerIde\");\n    // this.GameStateStart = false;\n  }\n\n  private StartBetting() {\n    console.log(\"played\");\n    this.GameStateIdle = false;\n    this.CardNodeAnim.node.active = false;\n    this.CardNodeL.active = true;\n    this.CardNodeR.active = true;\n    this.CardNodeR.getComponent(Sprite).spriteFrame = this.bankCard;\n    this.CardNodeL.getComponent(Sprite).spriteFrame = this.bankCard;\n    this.StartBet.play(\"Startbet\");\n    tween(this.CardNodeL)\n      .to(0.4, { position: this.clonePosCardL })\n      .call(() => {\n        // this.GameEnd = false;\n      })\n      .start();\n    tween(this.CardNodeR)\n      .to(0.4, { position: this.clonePosCardR })\n      .call(() => {})\n      .start();\n    // this.GameStateStart = true;\n  }\n\n  private stopBetting() {\n    this.StartBet.play(\"EndBet\");\n    this.GameEnd = true;\n  }\n  private PosBet() {\n  \n  }\n\n  private fight() {\n    console.log(\"TigerRRES\", this.NetworkConnect.resultTiger);\n    console.log(\"DragonRRES\", this.NetworkConnect.resultDragon);\n    if (this.NetworkConnect.resultTiger > this.NetworkConnect.resultDragon) {\n      console.log(\"TigerRRES1\", this.NetworkConnect.resultTiger);\n      console.log(\"DragonRRES1\", this.NetworkConnect.resultDragon);\n      this.balanceUser = this.balanceUser + this.UserBetTigerIcon * 2;\n      this.BalancerLb.string = this.balanceUser.toString();\n      this.WinNotice.play(\"TigerWin\");\n      this.DragonWinintro.play(\"TigerIntro\");\n      this.winIntroType = \"TigerIntro\";\n      this.DragonWinintro.on(Animation.EventType.FINISHED, () => {\n        if (this.winIntroType === \"TigerIntro\") {\n          this.TigerNode.play(\"TigerAttack\");\n          // this.winIntroType = \"TigerAttack\";\n          this.TigerNode.on(Animation.EventType.FINISHED, () => {\n            this.DragonNode.play(\"DragonHurt\");\n            this.DragonNode.on(Animation.EventType.FINISHED, () => {\n              this.DragonNode.play(\"DragonIde\");\n              this.tweenChildrenToPosition(\n                this.ValueAnim,\n                new Vec3(30, 560),\n                0.5\n              );\n              this.tweenChildrenToPosition(\n                this.ValueAnim1,\n                new Vec3(30, 560),\n                0.5\n              );\n              this.tweenChildrenToPosition(\n                this.ValueAnim2,\n                new Vec3(30, 560),\n                0.5\n              );\n            });\n\n            this.TigerNode.play(\"TigerIde\");\n            this.TigerNode.off(Animation.EventType.FINISHED);\n          });\n        }\n      });\n    }\n    if (this.NetworkConnect.resultDragon > this.NetworkConnect.resultTiger) {\n      console.log(\"TigerRRES2\", this.NetworkConnect.resultTiger);\n      console.log(\"DragonRRES2\", this.NetworkConnect.resultDragon);\n      this.balanceUser = this.balanceUser + this.UserBetDragonIcon * 2;\n      this.BalancerLb.string = this.balanceUser.toString();\n      this.WinNotice.play(\"DragonWinIcon\");\n      this.DragonWinintro.play(\"DragonIntro\");\n      // Sử dụng biến để xác định loại WinIntro\n      this.winIntroType = \"DragonIntro\";\n      this.DragonWinintro.on(Animation.EventType.FINISHED, () => {\n        // Kiểm tra loại WinIntro\n        if (this.winIntroType === \"DragonIntro\") {\n          this.DragonNode.play(\"DragonAttack\");\n          this.DragonNode.on(Animation.EventType.FINISHED, () => {\n            this.ExplosionDra.play();\n            this.TigerNode.play(\"TigerHurt\");\n            this.TigerNode.on(Animation.EventType.FINISHED, () => {\n              this.TigerNode.play(\"TigerIde\");\n              this.tweenChildrenToPosition(\n                this.ValueAnim,\n                new Vec3(30, 560),\n                0.5\n              );\n              this.tweenChildrenToPosition(\n                this.ValueAnim1,\n                new Vec3(30, 560),\n                0.5\n              );\n              this.tweenChildrenToPosition(\n                this.ValueAnim2,\n                new Vec3(30, 560),\n                0.5\n              );\n            });\n            this.DragonNode.play(\"DragonIde\");\n            this.DragonNode.off(Animation.EventType.FINISHED);\n          });\n        }\n      });\n    }\n  }\n  private shownResult() {\n    tween(this.CardNodeL)\n      .to(0.4, {\n        position: new Vec3(\n          this.CardNodeL.position.x + 100,\n          this.CardNodeL.position.y - 300\n        ),\n      })\n      .call(() => {\n        this.displayImages();\n        this.tweenChildrenToPosition(this.ValueAnim, new Vec3(30, 560), 0.5);\n        this.tweenChildrenToPosition(this.ValueAnim1, new Vec3(30, 560), 0.5);\n        this.tweenChildrenToPosition(this.ValueAnim2, new Vec3(30, 560), 0.5);\n      })\n      .start();\n\n    tween(this.CardNodeR)\n      .to(0.4, {\n        position: new Vec3(\n          this.CardNodeR.position.x - 100,\n          this.CardNodeR.position.y - 300\n        ),\n      })\n      .call(() => {\n        this.displayImagesCardR();\n        // this.campareCard();\n        // this.createGrid();\n        // this.createGridNot();\n      })\n      .start();\n  }\n}\n"]}