{"version":3,"sources":["file:///C:/Users/Admin/OneDrive/Desktop/GameNew/assets/Scripts/GameController.ts"],"names":["_decorator","Component","Label","Node","tween","Vec3","Animation","SpriteFrame","Sprite","Graphics","Color","instantiate","Prefab","Button","Chip","NetworkConnect","ccclass","property","GameController","type","UserBetTigerIcon","UserBetDragonIcon","UserBetTieIcon","clonePosCardL","clonePosCardR","randomValueCardR","randomValueCardL","balanceUser","currentCol","currentRow","currentRowClone","currentColL","currentRowL","previousPrefabType","previousPrefabTypeL","winIntroType","numRows","numCols","cellWidth","cellHeight","countdownTimerBet","cloneBalance","GameEnd","GameStateStart","GameStateIdle","GameStateReuslt","GameStateFight","GameStatePayOut","start","CardNodeL","position","clone","CardNodeR","shuffelCard","drawRectangle","drawRectangle1","drawRectangle2","drawRectangle3","drawRectangleTotalUser","drawRectanglel","AvatarL1","AvatarL2","AvatarL3","AvatarL4","AvatarL5","AvatarL6","drawGrid","GridL","GridR","drawRectangleTotal","update","deltaTime","gameState","UserName","string","room","sessionId","Idle","StartBetting","PosBet","stopBetting","fight","shownResult","PayoutAnim","listCancelBet","node","active","addScore","Score","betLB","betValueIcon","BalancerLb","toString","betTigerBtn","chipNode","UserBet","betTigerLb","ToatalUser","createSpriteNode","ValueAnim","betDragonBtn","betDragonLb","send","JSON","stringify","betAmount","betType","ValueAnim1","betTieBtn","betTieLb","ValueAnim2","to","call","CardNodeAnim","RestartBalnce","displayImages","resultDragon","spriteFrame","listCardRes","sprite","getComponent","console","error","displayImagesCardR","resultTiger","campareCard","WinNotice","play","DragonWinintro","on","EventType","FINISHED","TigerNode","DragonNode","tweenChildrenToPosition","setTimeout","off","ExplosionDra","width","height","graphics","AvatarNode","addComponent","lightGray","fillColor","glowColor","BLACK","strokeColor","lineWidth","roundRect","fill","stroke","AvatarNode1","AvatarNode2","AvatarNode3","number","circleRadius","WHITE","circle","list","ToatalAv","centerX","centerY","pillHeight","pillWidth","pillRadius","bodyWidth","rect","arc","Math","PI","Avatar","posX","PosY","PosNode","spriteNode","scale","spriteComponent","buttonPub","addChild","createSpriteNodePay","posY","posNode","spriteFrames","i","delay","length","Grid","gridSize","min","y","moveTo","lineTo","j","x","createGrid","prefabType","Tie","Under","Over","name","clearGrid","cell","pref","removeAllChildren","createGridNot","clearGridNt","prefL","startCountdown","timeCountDown","timereset","countdownInterval","setInterval","clearInterval","Cancel","CancelBetTiger","CancelBetDragon","CancelBetTie","targetPosition","duration","children","forEach","child","removeFromParent","TotalUser","log","PayUser","PayUserSprite","bankCard","StartBet"],"mappings":"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","sourcesContent":["import {\r\n  _decorator,\r\n  Component,\r\n  Label,\r\n  Node,\r\n  tween,\r\n  Vec3,\r\n  Animation,\r\n  SpriteFrame,\r\n  Sprite,\r\n  math,\r\n  log,\r\n  Graphics,\r\n  Color,\r\n  instantiate,\r\n  Prefab,\r\n  Button,\r\n  CCInteger,\r\n} from \"cc\";\r\nimport { Chip } from \"./Chip\";\r\nimport { NetworkConnect } from \"./NetworkConnect\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"GameController\")\r\nexport class GameController extends Component {\r\n  @property({\r\n    type: Label,\r\n  })\r\n  private betTigerLb: Label;\r\n\r\n  @property({\r\n    type: Label,\r\n  })\r\n  private betDragonLb: Label;\r\n\r\n  @property({\r\n    type: Label,\r\n  })\r\n  private betTieLb: Label;\r\n\r\n  @property({\r\n    type: Label,\r\n  })\r\n  private UserName: Label;\r\n\r\n  @property({\r\n    type: Label,\r\n  })\r\n  private BalancerLb: Label;\r\n\r\n  @property({\r\n    type: Chip,\r\n  })\r\n  private chipNode: Chip;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private CardNodeL: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private CardNodeR: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private AvatarNode: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private AvatarNode1: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private AvatarNode2: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private AvatarNode3: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private AvatarL1: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private AvatarL2: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private AvatarL3: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private AvatarL4: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private AvatarL5: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private AvatarL6: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private GridL: Node;\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private GridR: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private ValueAnim: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private ValueAnim1: Node;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private ValueAnim2: Node;\r\n\r\n  @property({\r\n    type: Animation,\r\n  })\r\n  private CardNodeAnim: Animation;\r\n\r\n  @property({\r\n    type: Animation,\r\n  })\r\n  private WinNotice: Animation;\r\n\r\n  @property({\r\n    type: Animation,\r\n  })\r\n  private DragonWinintro: Animation;\r\n\r\n  @property({\r\n    type: Animation,\r\n  })\r\n  private DragonNode: Animation;\r\n\r\n  @property({\r\n    type: Animation,\r\n  })\r\n  private TigerNode: Animation;\r\n\r\n  @property({\r\n    type: Animation,\r\n  })\r\n  private StartBet: Animation;\r\n\r\n  @property({\r\n    type: Animation,\r\n  })\r\n  private ExplosionDra: Animation;\r\n\r\n  @property({\r\n    type: SpriteFrame,\r\n  })\r\n  private listCardRes: SpriteFrame[] = [];\r\n\r\n  @property({\r\n    type: SpriteFrame,\r\n  })\r\n  private bankCard: SpriteFrame;\r\n\r\n  @property(Node)\r\n  pref: Node;\r\n\r\n  @property(Node)\r\n  prefL: Node;\r\n\r\n  @property(Prefab)\r\n  private Over: Prefab = null;\r\n\r\n  @property(Prefab)\r\n  private Under: Prefab = null;\r\n\r\n  @property(Prefab)\r\n  private Tie: Prefab = null;\r\n\r\n  // @property(Label)\r\n  // private countDownLb: Label;\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private ToatalAv: Node[] = [];\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private ToatalUser: Node[] = [];\r\n\r\n  @property({\r\n    type: Node,\r\n  })\r\n  private PayUser: Node[] = [];\r\n\r\n  @property({\r\n    type: Label,\r\n  })\r\n  private BalanceList: Label[] = [];\r\n\r\n  @property({\r\n    type: SpriteFrame,\r\n  })\r\n  private PayUserSprite: SpriteFrame[] = [];\r\n\r\n  @property({ type: [Button] })\r\n  listCancelBet: Button[] = [];\r\n\r\n  @property(NetworkConnect)\r\n  private NetworkConnect: NetworkConnect;\r\n\r\n  private UserBetTigerIcon: number = 0;\r\n  private UserBetDragonIcon: number = 0;\r\n  private UserBetTieIcon: number = 0;\r\n  private clonePosCardL: Vec3 = new Vec3();\r\n  private clonePosCardR: Vec3 = new Vec3();\r\n  private randomValueCardR: number = 0;\r\n  private randomValueCardL: number = 0;\r\n  private balanceUser: number = 300;\r\n  private currentCol = 0;\r\n  private currentRow = 0;\r\n  private currentRowClone = 0;\r\n  private currentColL = 0;\r\n  private currentRowL = 0;\r\n  previousPrefabType = null;\r\n  previousPrefabTypeL = null;\r\n  winIntroType;\r\n  private numRows: number = 6;\r\n  private numCols: number = 20;\r\n  private cellWidth: number = 27;\r\n  private cellHeight: number = 30;\r\n  private countdownTimerBet: number = 30;\r\n  private cloneBalance: number = 0;\r\n  private GameEnd: boolean = false;\r\n  private GameStateStart: boolean = false;\r\n  private GameStateIdle: boolean = false;\r\n  private GameStateReuslt: boolean = false;\r\n  private GameStateFight: boolean = false;\r\n  private GameStatePayOut:boolean=false;\r\n\r\n  start() {\r\n    this.clonePosCardL = this.CardNodeL.position.clone();\r\n    this.clonePosCardR = this.CardNodeR.position.clone();\r\n    this.shuffelCard();\r\n    this.drawRectangle();\r\n    this.drawRectangle1();\r\n    this.drawRectangle2();\r\n    this.drawRectangle3();\r\n    this.drawRectangleTotalUser(0);\r\n    this.drawRectangleTotalUser(1);\r\n    this.drawRectangleTotalUser(2);\r\n\r\n    this.drawRectanglel(this.AvatarL1);\r\n    this.drawRectanglel(this.AvatarL2);\r\n    this.drawRectanglel(this.AvatarL3);\r\n    this.drawRectanglel(this.AvatarL4);\r\n    this.drawRectanglel(this.AvatarL5);\r\n    this.drawRectanglel(this.AvatarL6);\r\n    this.drawGrid(this.GridL);\r\n    this.drawGrid(this.GridR);\r\n    this.drawRectangleTotal(0);\r\n    this.drawRectangleTotal(1);\r\n    this.drawRectangleTotal(2);\r\n  }\r\n\r\n  update(deltaTime: number) {\r\n    if (\r\n      this.NetworkConnect.gameState === \"idle\" &&\r\n      this.GameStateIdle === false\r\n    ) {\r\n      this.UserName.string = this.NetworkConnect.room.sessionId;\r\n      this.Idle();\r\n      this.GameEnd = false;\r\n      this.GameStateIdle = true;\r\n      this.GameStateReuslt = false;\r\n      this.GameStateFight = false;\r\n    }\r\n    if (\r\n      this.NetworkConnect.gameState === \"startBetting\" &&\r\n      this.GameStateStart === false\r\n    ) {\r\n      this.StartBetting();\r\n      this.GameStateStart = true;\r\n    }\r\n\r\n    if (this.NetworkConnect.gameState === \"startBetting\") {\r\n      this.PosBet();\r\n    }\r\n\r\n    if (this.NetworkConnect.gameState === \"stopBetting\") {\r\n      this.GameStateStart = false;\r\n      this.stopBetting();\r\n    }\r\n\r\n    if (\r\n      this.NetworkConnect.gameState === \"fight\" &&\r\n      this.GameStateFight === false\r\n    ) {\r\n      this.fight();\r\n      this.GameStateFight = true;\r\n    }\r\n    if (\r\n      this.NetworkConnect.gameState === \"showResult\" &&\r\n      this.GameStateReuslt === false\r\n    ) {\r\n      this.shownResult();\r\n      this.GameStateReuslt = true;\r\n    }\r\n    if (this.NetworkConnect.gameState === \"payout\"&&this.GameStatePayOut===false) {\r\n      this.PayoutAnim();\r\n      this.GameStatePayOut=true;\r\n    }\r\n    if (this.cloneBalance > 0) {\r\n      this.listCancelBet[0].node.active = true;\r\n    } else {\r\n      this.listCancelBet[0].node.active = false;\r\n    }\r\n  }\r\n\r\n  private addScore(Score: number, betLB: Label, betValueIcon: number) {\r\n    if (this.balanceUser >= Score) {\r\n      betValueIcon = betValueIcon + Score;\r\n      this.balanceUser = this.balanceUser - Score;\r\n      this.cloneBalance = this.cloneBalance + Score;\r\n      this.BalancerLb.string = this.balanceUser.toString();\r\n      betLB.string = betValueIcon.toString();\r\n    }\r\n  }\r\n\r\n  private betTigerBtn() {\r\n    if (this.balanceUser >= this.chipNode.UserBet && this.GameEnd === false) {\r\n      this.addScore(\r\n        this.chipNode.UserBet,\r\n        this.betTigerLb,\r\n        this.UserBetTigerIcon\r\n      );\r\n      this.UserBetTigerIcon += this.chipNode.UserBet;\r\n      this.ToatalUser[2].active = true;\r\n      this.listCancelBet[1].node.active = true;\r\n\r\n      this.createSpriteNode(-406, 200, this.ValueAnim);\r\n    }\r\n  }\r\n\r\n  private betDragonBtn() {\r\n    if (this.balanceUser >= this.chipNode.UserBet && this.GameEnd === false) {\r\n      this.addScore(\r\n        this.chipNode.UserBet,\r\n        this.betDragonLb,\r\n        this.UserBetDragonIcon\r\n      );\r\n      this.UserBetDragonIcon += this.chipNode.UserBet;\r\n      this.ToatalUser[0].active = true;\r\n      this.listCancelBet[3].node.active = true;\r\n      this.NetworkConnect.room.send(\r\n        \"Bet\",\r\n        JSON.stringify({ betAmount: this.chipNode.UserBet, betType: \"Dragon\" })\r\n      );\r\n      this.PosBet();\r\n      this.createSpriteNode(-951, 193, this.ValueAnim1);\r\n    }\r\n  }\r\n\r\n  private betTieBtn() {\r\n    if (this.balanceUser >= this.chipNode.UserBet && this.GameEnd === false) {\r\n      this.addScore(this.chipNode.UserBet, this.betTieLb, this.UserBetTieIcon);\r\n      this.listCancelBet[2].node.active = true;\r\n      this.UserBetTieIcon += this.chipNode.UserBet;\r\n      this.ToatalUser[1].active = true;\r\n      this.createSpriteNode(-670, 221, this.ValueAnim2);\r\n    }\r\n  }\r\n\r\n  private shuffelCard() {\r\n    tween(this.CardNodeL)\r\n      .to(0.4, { position: new Vec3(1, 70) })\r\n      .call(() => {\r\n        this.CardNodeL.active = false;\r\n        this.CardNodeR.active = false;\r\n        this.CardNodeAnim.node.active = true;\r\n        this.RestartBalnce();\r\n        // setTimeout(() => {\r\n        //   this.CardNodeAnim.node.active = false;\r\n        //   this.CardNodeL.active = true;\r\n        //   this.CardNodeR.active = true;\r\n        //   this.CardNodeR.getComponent(Sprite).spriteFrame = this.bankCard;\r\n        //   this.CardNodeL.getComponent(Sprite).spriteFrame = this.bankCard;\r\n        //   tween(this.CardNodeL)\r\n        //     .to(0.4, { position: this.clonePosCardL })\r\n        //     .call(() => {\r\n        //       this.GameEnd = false;\r\n        //       setTimeout(() => {\r\n        //         tween(this.CardNodeL)\r\n        //           .to(0.4, {\r\n        //             position: new Vec3(\r\n        //               this.CardNodeL.position.x + 100,\r\n        //               this.CardNodeL.position.y - 300\r\n        //             ),\r\n        //           })\r\n        //           .call(() => {\r\n        //             this.displayImages();\r\n        //           })\r\n        //           .start();\r\n        //       }, 30000); //Waitime\r\n        //     })\r\n        //     .start();\r\n        //   tween(this.CardNodeR)\r\n        //     .to(0.4, { position: this.clonePosCardR })\r\n        //     .call(() => {\r\n        //       console.log(\"bat dau dem\");\r\n        //       this.startCountdown(this.countdownTimerBet, 30);\r\n        //       this.StartBet.play(\"Startbet\");\r\n        //       setTimeout(() => {\r\n        //         tween(this.CardNodeR)\r\n        //           .to(0.4, {\r\n        //             position: new Vec3(\r\n        //               this.CardNodeR.position.x - 100,\r\n        //               this.CardNodeR.position.y - 300\r\n        //             ),\r\n        //           })\r\n        //           .call(() => {\r\n        //             this.displayImagesCardR();\r\n        //             this.campareCard();\r\n        //             this.createGrid();\r\n        //             this.createGridNot();\r\n        //           })\r\n        //           .start();\r\n        //         this.GameEnd = true;\r\n        //         this.StartBet.play(\"EndBet\");\r\n        //       }, 30000); //WaitTime\r\n        //     })\r\n        //     .start();\r\n        // }, 3000); //ShuffleTime\r\n      })\r\n      .start();\r\n\r\n    tween(this.CardNodeR)\r\n      .to(0.4, { position: new Vec3(1, 70) })\r\n      .start();\r\n  }\r\n\r\n  private displayImages() {\r\n    this.randomValueCardL = this.NetworkConnect.resultDragon;\r\n    // console.log(this.randomValueCardL);\r\n\r\n    const spriteFrame = this.listCardRes[this.randomValueCardL - 1];\r\n    const sprite = this.CardNodeL.getComponent(Sprite);\r\n    if (sprite && spriteFrame) {\r\n      sprite.spriteFrame = spriteFrame;\r\n    } else {\r\n      console.error(\"Sprite or SpriteFrame is missing!\");\r\n    }\r\n  }\r\n\r\n  private displayImagesCardR() {\r\n    this.randomValueCardR = this.NetworkConnect.resultTiger;\r\n    // console.log(this.randomValueCardR);\r\n    const spriteFrame = this.listCardRes[this.randomValueCardR - 1];\r\n    const sprite = this.CardNodeR.getComponent(Sprite);\r\n    if (sprite && spriteFrame) {\r\n      sprite.spriteFrame = spriteFrame;\r\n    } else {\r\n      console.error(\"Sprite or SpriteFrame is missing!\");\r\n    }\r\n  }\r\n\r\n  private campareCard() {\r\n    if (this.randomValueCardR > this.randomValueCardL) {\r\n      this.balanceUser = this.balanceUser + this.UserBetTigerIcon * 2;\r\n      this.BalancerLb.string = this.balanceUser.toString();\r\n      this.WinNotice.play(\"TigerWin\");\r\n      this.DragonWinintro.play(\"TigerIntro\");\r\n      this.winIntroType = \"TigerIntro\";\r\n      this.DragonWinintro.on(Animation.EventType.FINISHED, () => {\r\n        if (this.winIntroType === \"TigerIntro\") {\r\n          this.TigerNode.play(\"TigerAttack\");\r\n          // this.winIntroType = \"TigerAttack\";\r\n          this.TigerNode.on(Animation.EventType.FINISHED, () => {\r\n            this.DragonNode.play(\"DragonHurt\");\r\n            this.DragonNode.on(Animation.EventType.FINISHED, () => {\r\n              this.DragonNode.play(\"DragonIde\");\r\n              this.tweenChildrenToPosition(\r\n                this.ValueAnim,\r\n                new Vec3(30, 560),\r\n                0.5\r\n              );\r\n              this.tweenChildrenToPosition(\r\n                this.ValueAnim1,\r\n                new Vec3(30, 560),\r\n                0.5\r\n              );\r\n              this.tweenChildrenToPosition(\r\n                this.ValueAnim2,\r\n                new Vec3(30, 560),\r\n                0.5\r\n              );\r\n            });\r\n\r\n            this.TigerNode.play(\"TigerIde\");\r\n\r\n            // this.DragonNode.play(\"DragonIde\");\r\n            setTimeout(() => {\r\n              this.shuffelCard();\r\n            }, 4000);\r\n            this.TigerNode.off(Animation.EventType.FINISHED);\r\n          });\r\n        }\r\n      });\r\n    }\r\n    if (this.randomValueCardR < this.randomValueCardL) {\r\n      this.balanceUser = this.balanceUser + this.UserBetDragonIcon * 2;\r\n      this.BalancerLb.string = this.balanceUser.toString();\r\n      this.WinNotice.play(\"DragonWinIcon\");\r\n      this.DragonWinintro.play(\"DragonIntro\");\r\n      // Sử dụng biến để xác định loại WinIntro\r\n      this.winIntroType = \"DragonIntro\";\r\n      this.DragonWinintro.on(Animation.EventType.FINISHED, () => {\r\n        // Kiểm tra loại WinIntro\r\n        if (this.winIntroType === \"DragonIntro\") {\r\n          this.DragonNode.play(\"DragonAttack\");\r\n          this.DragonNode.on(Animation.EventType.FINISHED, () => {\r\n            this.ExplosionDra.play();\r\n            this.TigerNode.play(\"TigerHurt\");\r\n            this.TigerNode.on(Animation.EventType.FINISHED, () => {\r\n              this.TigerNode.play(\"TigerIde\");\r\n              this.tweenChildrenToPosition(\r\n                this.ValueAnim,\r\n                new Vec3(30, 560),\r\n                0.5\r\n              );\r\n              this.tweenChildrenToPosition(\r\n                this.ValueAnim1,\r\n                new Vec3(30, 560),\r\n                0.5\r\n              );\r\n              this.tweenChildrenToPosition(\r\n                this.ValueAnim2,\r\n                new Vec3(30, 560),\r\n                0.5\r\n              );\r\n            });\r\n            this.DragonNode.play(\"DragonIde\");\r\n\r\n            setTimeout(() => {\r\n              this.shuffelCard();\r\n            }, 4000);\r\n            this.DragonNode.off(Animation.EventType.FINISHED);\r\n          });\r\n        }\r\n      });\r\n    }\r\n    if (this.randomValueCardR === this.randomValueCardL) {\r\n      this.balanceUser = this.balanceUser + this.UserBetTieIcon * 18;\r\n      this.BalancerLb.string = this.balanceUser.toString();\r\n      this.tweenChildrenToPosition(this.ValueAnim, new Vec3(30, 560), 0.5);\r\n      this.tweenChildrenToPosition(this.ValueAnim1, new Vec3(30, 560), 0.5);\r\n      this.tweenChildrenToPosition(this.ValueAnim2, new Vec3(30, 560), 0.5);\r\n      setTimeout(() => {\r\n        this.shuffelCard();\r\n      }, 4000);\r\n    }\r\n  }\r\n\r\n  drawRectangle() {\r\n    const width: number = 250;\r\n    const height: number = 120;\r\n    const graphics = this.AvatarNode.addComponent(Graphics);\r\n    const lightGray = new Color(116, 116, 116, 100);\r\n    graphics.fillColor = lightGray;\r\n    const glowColor = Color.BLACK;\r\n    graphics.strokeColor = glowColor;\r\n    graphics.lineWidth = 5;\r\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\r\n    graphics.fill();\r\n    graphics.stroke();\r\n  }\r\n\r\n  drawRectangle1() {\r\n    const width: number = 220;\r\n    const height: number = 110;\r\n    const graphics = this.AvatarNode1.addComponent(Graphics);\r\n    const lightGray = new Color(116, 116, 116, 100);\r\n    graphics.fillColor = lightGray;\r\n    const glowColor = Color.BLACK;\r\n    graphics.strokeColor = glowColor;\r\n    graphics.lineWidth = 5;\r\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\r\n    graphics.fill();\r\n    graphics.stroke();\r\n  }\r\n\r\n  drawRectangle2() {\r\n    const width: number = 220;\r\n    const height: number = 110;\r\n    const graphics = this.AvatarNode2.addComponent(Graphics);\r\n    const lightGray = new Color(116, 116, 116, 100);\r\n    graphics.fillColor = lightGray;\r\n    const glowColor = Color.BLACK;\r\n    graphics.strokeColor = glowColor;\r\n    graphics.lineWidth = 5;\r\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\r\n    graphics.fill();\r\n    graphics.stroke();\r\n  }\r\n\r\n  drawRectangle3() {\r\n    const width: number = 220;\r\n    const height: number = 110;\r\n    const graphics = this.AvatarNode3.addComponent(Graphics);\r\n    const lightGray = new Color(116, 116, 116, 100);\r\n    graphics.fillColor = lightGray;\r\n    const glowColor = Color.BLACK;\r\n    graphics.strokeColor = glowColor;\r\n    graphics.lineWidth = 5;\r\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\r\n    graphics.fill();\r\n    graphics.stroke();\r\n  }\r\n\r\n  drawRectangleTotalUser(number: number) {\r\n    const width: number = 60;\r\n    const height: number = 20;\r\n    const graphics = this.ToatalUser[number].addComponent(Graphics);\r\n    const lightGray = new Color(0, 0, 0, 255);\r\n    graphics.fillColor = lightGray;\r\n    const glowColor = Color.BLACK;\r\n    graphics.strokeColor = glowColor;\r\n    graphics.lineWidth = 5;\r\n    graphics.roundRect(-width / 2, -height / 2, width, height, 2);\r\n    graphics.fill();\r\n    graphics.stroke();\r\n\r\n    const circleRadius: number = 10;\r\n    graphics.fillColor = Color.WHITE; // Màu trắng\r\n    graphics.strokeColor = Color.BLACK; // Viền màu đen\r\n    graphics.circle(-20, 0, circleRadius); // Vẽ hình tròn tại tọa độ (0,0) với bán kính circleRadius\r\n    graphics.fill(); // Tô màu\r\n    graphics.stroke(); // Vẽ viền\r\n  }\r\n  private drawRectangleTotal(list: number) {\r\n    const width: number = 100;\r\n    const height: number = 70;\r\n    const graphics = this.ToatalAv[list].addComponent(Graphics);\r\n    const lightGray = new Color(0, 0, 0, 255);\r\n    graphics.fillColor = lightGray;\r\n    const glowColor = Color.BLACK;\r\n    graphics.strokeColor = glowColor;\r\n    graphics.lineWidth = 1;\r\n\r\n    // Tính toán các điểm để vẽ viên thuốc\r\n    const centerX = 0;\r\n    const centerY = 0;\r\n    const pillHeight = height * 0.6; // Chiều cao của viên thuốc\r\n    const pillWidth = width * 0.8; // Chiều rộng của viên thuốc\r\n    const pillRadius = pillHeight / 2; // Bán kính của đầu viên thuốc\r\n    const bodyWidth = width * 0.5; // Chiều rộng của phần thân viên thuốc\r\n\r\n    // Vẽ phần thân của viên thuốc\r\n    graphics.rect(\r\n      centerX - bodyWidth / 2,\r\n      centerY - pillRadius,\r\n      bodyWidth,\r\n      pillHeight\r\n    );\r\n\r\n    // Vẽ đầu viên thuốc bên trái\r\n    graphics.arc(\r\n      centerX - pillWidth / 2 + pillRadius,\r\n      centerY,\r\n      pillRadius,\r\n      -Math.PI / 2,\r\n      Math.PI / 2,\r\n      false\r\n    );\r\n\r\n    // Vẽ đầu viên thuốc bên phải\r\n    graphics.arc(\r\n      centerX + pillWidth / 2 - pillRadius,\r\n      centerY,\r\n      pillRadius,\r\n      Math.PI / 2,\r\n      -Math.PI / 2,\r\n      false\r\n    );\r\n\r\n    graphics.fill(); // Đổ màu\r\n    graphics.stroke(); // Vẽ viền\r\n  }\r\n  drawRectanglel(Avatar: Node) {\r\n    const width: number = 220;\r\n    const height: number = 100;\r\n    const graphics = Avatar.addComponent(Graphics);\r\n\r\n    const lightGray = new Color(116, 116, 116, 100);\r\n    graphics.fillColor = lightGray;\r\n    const glowColor = Color.BLACK;\r\n    graphics.strokeColor = glowColor;\r\n    graphics.lineWidth = 5;\r\n    graphics.roundRect(-width / 2, -height / 2, width, height, 10);\r\n    graphics.fill();\r\n    graphics.stroke();\r\n  }\r\n\r\n  createSpriteNode(posX, PosY, PosNode: Node) {\r\n    // Tạo một Node mới\r\n    const spriteNode = new Node(\"SpriteNode\");\r\n    spriteNode.scale = new Vec3(0.5, 0.5);\r\n\r\n    // Thêm một component Sprite vào Node\r\n    const spriteComponent = spriteNode.addComponent(Sprite);\r\n\r\n    // Gán SpriteFrame cho component Sprite\r\n    spriteComponent.spriteFrame =\r\n      this.chipNode.buttonPub.node.getComponent(Sprite).spriteFrame;\r\n    // spriteNode.position=new Vec3(this.chipNode.buttonPub.node.position)\r\n    // Thêm Node vào Scene hiện tại (ví dụ: Node cha của tất cả Sprite)\r\n    PosNode.addChild(spriteNode);\r\n    tween(spriteNode)\r\n      .to(0.3, { position: new Vec3(posX, PosY) })\r\n      .start();\r\n  }\r\n\r\n  createSpriteNodePay(posX, posY, posNode: Node, spriteFrames: SpriteFrame[]) {\r\n    // Lặp qua từng sprite frame để tạo node tương ứng\r\n    for (let i = 0; i < spriteFrames.length; i++) {\r\n      // Tạo một Node mới\r\n      const spriteNode = new Node(\"SpriteNode\");\r\n      spriteNode.scale = new Vec3(0.5, 0.5);\r\n\r\n      // Thêm một component Sprite vào Node\r\n      const spriteComponent = spriteNode.addComponent(Sprite);\r\n\r\n      // Gán SpriteFrame cho component Sprite dựa trên index\r\n      spriteComponent.spriteFrame = spriteFrames[i];\r\n\r\n      // Thêm Node vào Scene hiện tại (ví dụ: Node cha của tất cả Sprite)\r\n      posNode.addChild(spriteNode);\r\n\r\n      // Tween Node đến vị trí mong muốn\r\n      tween(spriteNode)\r\n        .delay(i * 0.1) // thiết lập thời gian trễ dựa trên index của node\r\n        .to(1, { position: new Vec3(posX, posY) })\r\n        .call(() => {\r\n          spriteNode.active = false;\r\n        })\r\n        .start();\r\n    }\r\n  }\r\n\r\n  drawGrid(Grid: Node) {\r\n    const numRows: number = this.numRows;\r\n    const numCols: number = this.numCols;\r\n    const gridSize: number = Math.min(575 / numCols, 200 / numRows); // Kích thước ô vuông\r\n    const cellWidth: number = this.cellWidth; // Chiều rộng của mỗi ô\r\n    const cellHeight: number = this.cellHeight; // Chiều cao của mỗi ô\r\n\r\n    const graphics = Grid.addComponent(Graphics);\r\n    const lightGray = new Color(116, 116, 116, 50);\r\n    const glowColor = Color.BLACK;\r\n    graphics.strokeColor = glowColor;\r\n    graphics.lineWidth = 4;\r\n\r\n    // Vẽ các đường ngang\r\n    for (let i = 0; i <= numRows; i++) {\r\n      const y = i * cellHeight - (numRows * cellHeight) / 2; // Đặt lưới vào giữa theo chiều cao\r\n      graphics.moveTo((-numCols * cellWidth) / 2, y);\r\n      graphics.lineTo((numCols * cellWidth) / 2, y);\r\n      graphics.stroke();\r\n    }\r\n\r\n    for (let j = 0; j <= numCols; j++) {\r\n      const x = j * cellWidth - (numCols * cellWidth) / 2; // Đặt lưới vào giữa theo chiều rộng\r\n      graphics.moveTo(x, (-numRows * cellHeight) / 2);\r\n      graphics.lineTo(x, (numRows * cellHeight) / 2);\r\n      graphics.stroke();\r\n    }\r\n\r\n    // Tô màu cho lưới\r\n    graphics.fillColor = lightGray;\r\n    graphics.rect(\r\n      (-numCols * cellWidth) / 2,\r\n      (-numRows * cellHeight) / 2,\r\n      numCols * cellWidth,\r\n      numRows * cellHeight\r\n    );\r\n    graphics.fill();\r\n  }\r\n\r\n  private createGrid() {\r\n    let prefabType;\r\n    if (this.randomValueCardL === this.randomValueCardR) {\r\n      prefabType = this.Tie;\r\n    } else if (this.randomValueCardL < this.randomValueCardR) {\r\n      prefabType = this.Under;\r\n    } else if (this.randomValueCardL > this.randomValueCardR) {\r\n      prefabType = this.Over;\r\n    }\r\n\r\n    if (\r\n      this.currentRowClone > 5 &&\r\n      prefabType.name !== this.previousPrefabType.name\r\n    ) {\r\n      this.currentCol++;\r\n      // this.currentRow = 0;\r\n      if (this.currentCol >= this.numCols) {\r\n        this.clearGrid();\r\n        this.currentCol = 0;\r\n      }\r\n    }\r\n    if (\r\n      this.previousPrefabType !== null &&\r\n      prefabType.name !== this.previousPrefabType.name\r\n    ) {\r\n      this.currentCol++;\r\n      this.currentRow = 0;\r\n      this.currentRowClone = 0;\r\n      if (this.currentCol >= this.numCols) {\r\n        this.clearGrid();\r\n        this.currentCol = 0;\r\n      }\r\n    }\r\n\r\n    const cell = instantiate(prefabType);\r\n    const posX = this.currentCol * this.cellWidth;\r\n    const posY = -this.currentRow * this.cellHeight;\r\n    cell.position = new Vec3(posX, posY);\r\n    this.pref.addChild(cell);\r\n\r\n    this.previousPrefabType = prefabType;\r\n    this.currentRowClone++;\r\n    if (this.currentRow < 5) {\r\n      this.currentRow++;\r\n    }\r\n  }\r\n\r\n  private clearGrid() {\r\n    this.pref.removeAllChildren();\r\n  }\r\n\r\n  private createGridNot() {\r\n    let prefabType;\r\n    if (this.randomValueCardL === this.randomValueCardR) {\r\n      prefabType = this.Tie;\r\n    } else if (this.randomValueCardL < this.randomValueCardR) {\r\n      prefabType = this.Under;\r\n    } else if (this.randomValueCardL > this.randomValueCardR) {\r\n      prefabType = this.Over;\r\n    }\r\n    if (this.currentRowL >= this.numRows) {\r\n      this.currentColL++;\r\n      this.currentRowL = 0;\r\n      if (this.currentColL >= this.numCols) {\r\n        this.clearGridNt();\r\n        this.currentCol = 0;\r\n      }\r\n    }\r\n    const cell = instantiate(prefabType);\r\n    const posX = this.currentColL * this.cellWidth; // Tính vị trí x dựa trên chỉ mục cột hiện tại\r\n    const posY = -this.currentRowL * this.cellHeight; // Tính vị trí y dựa trên chỉ mục hàng hiện tại\r\n    cell.position = new Vec3(posX, posY);\r\n    this.prefL.addChild(cell);\r\n    this.currentRowL++;\r\n  }\r\n\r\n  private clearGridNt() {\r\n    this.prefL.removeAllChildren();\r\n  }\r\n\r\n  private startCountdown(timeCountDown: number, timereset: number) {\r\n    this.countdownTimerBet = 30;\r\n    const countdownInterval = setInterval(() => {\r\n      this.countdownTimerBet--;\r\n      if (this.countdownTimerBet <= 0) {\r\n        clearInterval(countdownInterval);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  private Cancel() {\r\n    if (this.GameEnd === false) {\r\n      this.ToatalUser[0].active = false;\r\n      this.ToatalUser[1].active = false;\r\n      this.ToatalUser[2].active = false;\r\n      this.listCancelBet[0].node.active = false;\r\n      this.listCancelBet[1].node.active = false;\r\n      this.listCancelBet[2].node.active = false;\r\n      this.listCancelBet[3].node.active = false;\r\n      this.UserBetDragonIcon = 0;\r\n      this.UserBetTieIcon = 0;\r\n      this.UserBetTigerIcon = 0;\r\n      this.balanceUser = this.balanceUser + this.cloneBalance;\r\n      this.cloneBalance = 0;\r\n      this.BalancerLb.string = this.balanceUser.toString();\r\n      this.betDragonLb.string = this.UserBetDragonIcon.toString();\r\n      this.betTigerLb.string = this.UserBetTigerIcon.toString();\r\n      this.betTieLb.string = this.UserBetTieIcon.toString();\r\n      this.ValueAnim.removeAllChildren();\r\n      this.ValueAnim1.removeAllChildren();\r\n      this.ValueAnim2.removeAllChildren();\r\n    }\r\n  }\r\n\r\n  private RestartBalnce() {\r\n    this.ToatalUser[0].active = false;\r\n    this.ToatalUser[1].active = false;\r\n    this.ToatalUser[2].active = false;\r\n    this.listCancelBet[0].node.active = false;\r\n    this.listCancelBet[1].node.active = false;\r\n    this.listCancelBet[2].node.active = false;\r\n    this.listCancelBet[3].node.active = false;\r\n    this.UserBetDragonIcon = 0;\r\n    this.UserBetTieIcon = 0;\r\n    this.UserBetTigerIcon = 0;\r\n    this.cloneBalance = 0;\r\n    this.betDragonLb.string = this.UserBetDragonIcon.toString();\r\n    this.betTigerLb.string = this.UserBetTigerIcon.toString();\r\n    this.betTieLb.string = this.UserBetTieIcon.toString();\r\n    this.ValueAnim.removeAllChildren();\r\n    this.ValueAnim1.removeAllChildren();\r\n    this.ValueAnim2.removeAllChildren();\r\n  }\r\n\r\n  private CancelBetTiger() {\r\n    if (this.GameEnd === false) {\r\n      this.ToatalUser[2].active = false;\r\n      this.listCancelBet[1].node.active = false;\r\n\r\n      this.cloneBalance = this.cloneBalance - this.UserBetTigerIcon;\r\n      this.balanceUser = this.balanceUser + this.UserBetTigerIcon;\r\n      this.BalancerLb.string = this.balanceUser.toString();\r\n      this.UserBetTigerIcon = 0;\r\n      this.betTigerLb.string = this.UserBetTigerIcon.toString();\r\n      this.ValueAnim.removeAllChildren();\r\n    }\r\n  }\r\n\r\n  private CancelBetDragon() {\r\n    if (this.GameEnd === false) {\r\n      this.ToatalUser[0].active = false;\r\n      this.listCancelBet[3].node.active = false;\r\n      this.cloneBalance = this.cloneBalance - this.UserBetDragonIcon;\r\n      this.balanceUser = this.balanceUser + this.UserBetDragonIcon;\r\n      this.BalancerLb.string = this.balanceUser.toString();\r\n      this.UserBetDragonIcon = 0;\r\n      this.betDragonLb.string = this.UserBetDragonIcon.toString();\r\n      this.ValueAnim1.removeAllChildren();\r\n    }\r\n  }\r\n\r\n  private CancelBetTie() {\r\n    if (this.GameEnd === false) {\r\n      this.ToatalUser[1].active = false;\r\n      this.listCancelBet[2].node.active = false;\r\n\r\n      this.cloneBalance = this.cloneBalance - this.UserBetTieIcon;\r\n      this.balanceUser = this.balanceUser + this.UserBetTieIcon;\r\n      this.BalancerLb.string = this.balanceUser.toString();\r\n      this.UserBetTieIcon = 0;\r\n      this.betTieLb.string = this.UserBetTieIcon.toString();\r\n      this.ValueAnim2.removeAllChildren();\r\n    }\r\n  }\r\n\r\n  tweenChildrenToPosition(node: Node, targetPosition: Vec3, duration: number) {\r\n    node.children.forEach((child: Node) => {\r\n      tween(child)\r\n        .to(duration, { position: targetPosition })\r\n        .call(() => {\r\n          child.removeFromParent();\r\n        })\r\n\r\n        .start();\r\n    });\r\n  }\r\n\r\n  private PayoutAnim(){\r\n    if (this.NetworkConnect.TotalUser > 0) {\r\n      console.log(\"tra cho minh\");\r\n    }\r\n    \r\n    if (this.NetworkConnect.TotalUser > 1) {\r\n      console.log(\"aaa\");\r\n\r\n      this.createSpriteNodePay(\r\n        -1450,\r\n        1,\r\n        this.PayUser[0],\r\n        this.PayUserSprite\r\n      );\r\n    }\r\n    if (this.NetworkConnect.TotalUser > 2) {\r\n      console.log(\"aabbba\");\r\n\r\n      this.createSpriteNodePay(\r\n        -1450,\r\n        -100,\r\n        this.PayUser[1],\r\n        this.PayUserSprite\r\n      );\r\n    }\r\n    if (this.NetworkConnect.TotalUser > 3) {\r\n      console.log(\"cc\");\r\n\r\n      this.createSpriteNodePay(\r\n        -1450,\r\n        -200,\r\n        this.PayUser[2],\r\n        this.PayUserSprite\r\n      );\r\n    }\r\n    if (this.NetworkConnect.TotalUser > 4) {\r\n      this.createSpriteNodePay(\r\n      -1450,\r\n      -300,\r\n      this.PayUser[3],\r\n      this.PayUserSprite\r\n    );\r\n    }\r\n\r\n    if (this.NetworkConnect.TotalUser > 5) {\r\n            this.createSpriteNodePay(\r\n      -1450,\r\n      -400,\r\n      this.PayUser[4],\r\n      this.PayUserSprite\r\n    );\r\n    }\r\n    \r\n    if (this.NetworkConnect.TotalUser > 6) {\r\n         this.createSpriteNodePay(\r\n      -1450,\r\n      -500,\r\n      this.PayUser[5],\r\n      this.PayUserSprite\r\n    );\r\n    }\r\n\r\n   \r\n\r\n    // this.createSpriteNodePay(\r\n    //   0,\r\n    //   -500,\r\n    //   this.PayUser[6],\r\n    //   this.PayUserSprite\r\n    // );\r\n  }\r\n\r\n  private Idle() {\r\n    this.shuffelCard();\r\n    this.DragonNode.play(\"DragonIde\");\r\n    this.TigerNode.play(\"TigerIde\");\r\n    this.GameStatePayOut=false;\r\n    // this.GameStateStart = false;\r\n  }\r\n\r\n  private StartBetting() {\r\n    console.log(\"played\");\r\n    this.GameStateIdle = false;\r\n    this.CardNodeAnim.node.active = false;\r\n    this.CardNodeL.active = true;\r\n    this.CardNodeR.active = true;\r\n    this.CardNodeR.getComponent(Sprite).spriteFrame = this.bankCard;\r\n    this.CardNodeL.getComponent(Sprite).spriteFrame = this.bankCard;\r\n    this.StartBet.play(\"Startbet\");\r\n    tween(this.CardNodeL)\r\n      .to(0.4, { position: this.clonePosCardL })\r\n      .call(() => {\r\n        // this.GameEnd = false;\r\n      })\r\n      .start();\r\n    tween(this.CardNodeR)\r\n      .to(0.4, { position: this.clonePosCardR })\r\n      .call(() => {})\r\n      .start();\r\n    // this.GameStateStart = true;\r\n  }\r\n\r\n  private stopBetting() {\r\n    this.StartBet.play(\"EndBet\");\r\n    this.GameEnd = true;\r\n  }\r\n  private PosBet() {\r\n  \r\n  }\r\n\r\n  private fight() {\r\n    if (this.NetworkConnect.resultTiger > this.NetworkConnect.resultDragon) {\r\n      this.balanceUser = this.balanceUser + this.UserBetTigerIcon * 2;\r\n      this.BalancerLb.string = this.balanceUser.toString();\r\n      this.WinNotice.play(\"TigerWin\");\r\n      this.DragonWinintro.play(\"TigerIntro\");\r\n      this.winIntroType = \"TigerIntro\";\r\n      this.DragonWinintro.on(Animation.EventType.FINISHED, () => {\r\n        if (this.winIntroType === \"TigerIntro\") {\r\n          this.TigerNode.play(\"TigerAttack\");\r\n          // this.winIntroType = \"TigerAttack\";\r\n          this.TigerNode.on(Animation.EventType.FINISHED, () => {\r\n            this.DragonNode.play(\"DragonHurt\");\r\n            this.DragonNode.on(Animation.EventType.FINISHED, () => {\r\n              this.DragonNode.play(\"DragonIde\");\r\n              this.tweenChildrenToPosition(\r\n                this.ValueAnim,\r\n                new Vec3(30, 560),\r\n                0.5\r\n              );\r\n              this.tweenChildrenToPosition(\r\n                this.ValueAnim1,\r\n                new Vec3(30, 560),\r\n                0.5\r\n              );\r\n              this.tweenChildrenToPosition(\r\n                this.ValueAnim2,\r\n                new Vec3(30, 560),\r\n                0.5\r\n              );\r\n            });\r\n\r\n            this.TigerNode.play(\"TigerIde\");\r\n            this.TigerNode.off(Animation.EventType.FINISHED);\r\n          });\r\n        }\r\n      });\r\n    }\r\n    if (this.NetworkConnect.resultDragon > this.NetworkConnect.resultTiger) {\r\n      console.log(\"TigerRRES2\", this.NetworkConnect.resultTiger);\r\n      console.log(\"DragonRRES2\", this.NetworkConnect.resultDragon);\r\n      this.balanceUser = this.balanceUser + this.UserBetDragonIcon * 2;\r\n      this.BalancerLb.string = this.balanceUser.toString();\r\n      this.WinNotice.play(\"DragonWinIcon\");\r\n      this.DragonWinintro.play(\"DragonIntro\");\r\n      // Sử dụng biến để xác định loại WinIntro\r\n      this.winIntroType = \"DragonIntro\";\r\n      this.DragonWinintro.on(Animation.EventType.FINISHED, () => {\r\n        // Kiểm tra loại WinIntro\r\n        if (this.winIntroType === \"DragonIntro\") {\r\n          this.DragonNode.play(\"DragonAttack\");\r\n          this.DragonNode.on(Animation.EventType.FINISHED, () => {\r\n            this.ExplosionDra.play();\r\n            this.TigerNode.play(\"TigerHurt\");\r\n            this.TigerNode.on(Animation.EventType.FINISHED, () => {\r\n              this.TigerNode.play(\"TigerIde\");\r\n              this.tweenChildrenToPosition(\r\n                this.ValueAnim,\r\n                new Vec3(30, 560),\r\n                0.5\r\n              );\r\n              this.tweenChildrenToPosition(\r\n                this.ValueAnim1,\r\n                new Vec3(30, 560),\r\n                0.5\r\n              );\r\n              this.tweenChildrenToPosition(\r\n                this.ValueAnim2,\r\n                new Vec3(30, 560),\r\n                0.5\r\n              );\r\n            });\r\n            this.DragonNode.play(\"DragonIde\");\r\n            this.DragonNode.off(Animation.EventType.FINISHED);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n  private shownResult() {\r\n    tween(this.CardNodeL)\r\n      .to(0.4, {\r\n        position: new Vec3(\r\n          this.CardNodeL.position.x + 100,\r\n          this.CardNodeL.position.y - 300\r\n        ),\r\n      })\r\n      .call(() => {\r\n        this.displayImages();\r\n        this.tweenChildrenToPosition(this.ValueAnim, new Vec3(30, 560), 0.5);\r\n        this.tweenChildrenToPosition(this.ValueAnim1, new Vec3(30, 560), 0.5);\r\n        this.tweenChildrenToPosition(this.ValueAnim2, new Vec3(30, 560), 0.5);\r\n      })\r\n      .start();\r\n\r\n    tween(this.CardNodeR)\r\n      .to(0.4, {\r\n        position: new Vec3(\r\n          this.CardNodeR.position.x - 100,\r\n          this.CardNodeR.position.y - 300\r\n        ),\r\n      })\r\n      .call(() => {\r\n        this.displayImagesCardR();\r\n        // this.campareCard();\r\n        // this.createGrid();\r\n        // this.createGridNot();\r\n      })\r\n      .start();\r\n  }\r\n}\r\n"]}