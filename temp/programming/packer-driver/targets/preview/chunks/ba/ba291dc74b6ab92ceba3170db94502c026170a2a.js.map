{"version":3,"sources":["file:///Users/waostudio/Downloads/Telegram%20Desktop/TigerDragon4/assets/Scripts/NetworkConnect.ts"],"names":["_decorator","Component","Label","Node","Colyseus","ccclass","property","NetworkConnect","type","String","Number","Boolean","client","room","gameState","resultDragon","resultTiger","TotalUser","UserBet","NotmeBet","start","Client","useSSL","hostname","port","connect","rooms","getAvailableRooms","length","create","console","log","sessionId","joinById","roomId","onMessage","message","TimerDown","string","dragonCard","value","tigerCard","playerID","onStateChange","state","players","values","updatePlayerList","roundState","onLeave","code","e","error","playerList","numElements","ListL","forEach","node","active","i","ListLabel"],"mappings":"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","sourcesContent":["import { _decorator, Component, Label, Node, Sprite, tween, Vec3 } from \"cc\";\nconst { ccclass, property } = _decorator;\nimport Colyseus from \"db://colyseus-sdk/colyseus.js\";\n\n@ccclass(\"NetworkConnect\")\nexport class NetworkConnect extends Component {\n  @property({ type: String })\n  hostname = \"7bb3-115-79-59-222.ngrok-free.app\";\n\n  @property({ type: Number })\n  port = 80;\n\n  @property({ type: Boolean })\n  useSSL = true;\n\n  @property({ type: Node })\n  private ListL: Node[] = [];\n\n  @property({ type: Label })\n  private ListLabel: Label[] = [];\n\n  @property(Label)\n  private TimerDown: Label;\n\n  client!: Colyseus.Client;\n  room!: Colyseus.Room;\n  gameState;\n  resultDragon;\n  resultTiger;\n  TotalUser;\n  UserBet;\n  NotmeBet;\n\n  start() {\n    this.client = new Colyseus.Client(\n      `${this.useSSL ? \"wss\" : \"ws\"}://${this.hostname}:${this.port}`\n    );\n\n    this.connect();\n  }\n\n  async connect() {\n    try {\n      const rooms = await this.client.getAvailableRooms(\"room1\");\n\n      if (rooms.length === 0) {\n        this.room = await this.client.create(\"room1\");\n        console.log(\"Created new room with sessionId:\", this.room.sessionId);\n      } else {\n        // Nếu có phòng có sẵn, tham gia vào phòng đầu tiên trong danh sách\n        this.room = await this.client.joinById(rooms[0].roomId);\n        console.log(\n          \"Joined existing room with sessionId:\",\n          this.room.sessionId\n        );\n      }\n\n      console.log(\"Joined successfully!\");\n      console.log(\"User's sessionId:\", this.room.sessionId);\n\n      // this.room.onMessage(\"playerList\", (message) => {\n      //   console.log(message);\n      //   this.updatePlayerList(message);\n      // });\n\n      this.room.onMessage(\"timer\", (message) => {\n        this.TimerDown.string = message;\n      });\n\n      this.room.onMessage(\"result\", (message) => {\n        this.resultDragon = message.dragonCard.value;\n        this.resultTiger = message.tigerCard.value;\n      });\n\n      this.room.onMessage(\"userBet\", (message) => {\n        if (message.playerID !== this.room.sessionId) {\n          console.log(\"Thang kia bet\");\n          this.UserBet = message.playerID;\n        } else {\n          console.log(\"false\");\n        }\n      });\n\n      this.room.onStateChange((state) => {\n        console.log(\"Room state changed:\", state);\n        console.log(\"onStateChange: \", state);\n        const players = [...state.players.values()];\n        this.updatePlayerList(players);\n        console.log(players);\n\n        this.gameState = state.roundState;\n      });\n\n      this.room.onLeave((code) => {\n        console.log(\"Left room with code:\", code);\n      });\n    } catch (e) {\n      console.error(\"Error:\", e);\n    }\n  }\n\n  updatePlayerList(playerList: any[]) {\n    const numElements = playerList.length;\n    this.ListL.forEach((node) => {\n      node.active = false;\n    });\n    for (let i = 0; i < numElements && i < this.ListL.length; i++) {\n        if(this.UserBet)\n        this.ListL[i].active = true;\n        this.ListLabel[i].string = playerList[i].sessionId;\n    }\n  }\n\n  // createSpriteNode(posX, PosY, PosNode: Node) {\n  //   // Tạo một Node mới\n  //   const spriteNode = new Node(\"SpriteNode\");\n  //   spriteNode.scale = new Vec3(0.5, 0.5);\n\n  //   // Thêm một component Sprite vào Node\n  //   const spriteComponent = spriteNode.addComponent(Sprite);\n\n  //   // Gán SpriteFrame cho component Sprite\n  //   spriteComponent.spriteFrame =\n  //     this.chipNode.buttonPub.node.getComponent(Sprite).spriteFrame;\n  //   // spriteNode.position=new Vec3(this.chipNode.buttonPub.node.position)\n  //   // Thêm Node vào Scene hiện tại (ví dụ: Node cha của tất cả Sprite)\n  //   PosNode.addChild(spriteNode);\n  //   tween(spriteNode)\n  //     .to(0.3, { position: new Vec3(posX, PosY) })\n  //     .start();\n  // }\n}\n"]}