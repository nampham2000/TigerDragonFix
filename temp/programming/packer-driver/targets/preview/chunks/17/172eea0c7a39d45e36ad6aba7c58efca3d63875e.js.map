{"version":3,"sources":["file:///C:/Users/Admin/OneDrive/Desktop/dragonfix/assets/Scripts/LoginScript/Controller.ts"],"names":["_decorator","Component","Node","ccclass","property","Controller","client","room","start","update","deltaTime","creatAcc","offLoginTable","LoginTable","active","LoginBtnTb","onLoginTable","offResTable","ResTable","ResBtnTb","onResTable"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAoBC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;;;;;;;;;OAClC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;4BAKjBK,U,WADZF,OAAO,CAAC,YAAD,C,UAELC,QAAQ,CAACF,IAAD,C,UAGRE,QAAQ,CAACF,IAAD,C,UAGRE,QAAQ,CAACF,IAAD,C,UAGRE,QAAQ,CAACF,IAAD,C,UAGRE,QAAQ,CAACF,IAAD,C,UAGRE,QAAQ,CAACF,IAAD,C,2BAjBX,MACaG,UADb,SACgCJ,SADhC,CAC0C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAmBxCK,MAnBwC;AAAA,eAoBxCC,IApBwC;AAAA;;AAqBxC;AACA;AACA;AACA;AACAC,QAAAA,KAAK,GAAG,CAAE;;AAEVC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAAE;;AAEdC,QAAAA,QAAQ,GAAG,CACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAVuB;AAWxB;;AACOC,QAAAA,aAAa,GAAG;AACtB,eAAKC,UAAL,CAAgBC,MAAhB,GAAyB,KAAzB;AACA,eAAKC,UAAL,CAAgBD,MAAhB,GAAyB,KAAzB;AACD;;AAEOE,QAAAA,YAAY,GAAG;AACrB,eAAKH,UAAL,CAAgBC,MAAhB,GAAyB,IAAzB;AACA,eAAKC,UAAL,CAAgBD,MAAhB,GAAyB,IAAzB;AACD;;AAEOG,QAAAA,WAAW,GAAG;AACpB,eAAKC,QAAL,CAAcJ,MAAd,GAAuB,KAAvB;AACA,eAAKK,QAAL,CAAcL,MAAd,GAAuB,KAAvB;AACD;;AAEOM,QAAAA,UAAU,GAAG;AACnB,eAAKF,QAAL,CAAcJ,MAAd,GAAuB,IAAvB;AACA,eAAKK,QAAL,CAAcL,MAAd,GAAuB,IAAvB;AACD;;AA3DuC,O","sourcesContent":["import { _decorator, Button, Component, Node } from \"cc\";\r\nconst { ccclass, property } = _decorator;\r\nimport Colyseus from \"db://colyseus-sdk/colyseus.js\";\r\nimport sdk, { Client, Account, ID } from \"appwrite\";\r\n\r\n@ccclass(\"Controller\")\r\nexport class Controller extends Component {\r\n  @property(Node)\r\n  private ResBtn: Node;\r\n\r\n  @property(Node)\r\n  private LoginBtn: Node;\r\n\r\n  @property(Node)\r\n  private LoginTable: Node;\r\n\r\n  @property(Node)\r\n  private ResTable: Node;\r\n\r\n  @property(Node)\r\n  private ResBtnTb: Node;\r\n\r\n  @property(Node)\r\n  private LoginBtnTb: Node;\r\n\r\n  client!: Colyseus.Client;\r\n  room!: Colyseus.Room;\r\n  // private appwriteClient = new sdk.Client()\r\n  //   .setEndpoint(\"https://adroit-appwrite.our-projects.org/v1\") // Your API Endpoint\r\n  //   .setProject(\"6604076a003c15f4a892\"); // Your project ID\r\n  // private db = new sdk.Databases(this.appwriteClient);\r\n  start() {}\r\n\r\n  update(deltaTime: number) {}\r\n\r\n  private async creatAcc() {\r\n    // const account = new Account(client);\r\n    // const promise = account.create(null, \"nampham@gmail.com\", \"123\");\r\n    // promise.then(\r\n    //   function (response) {\r\n    //     console.log(response); // Success\r\n    //   },\r\n    //   function (error) {\r\n    //     console.log(error); // Failure\r\n    //   }\r\n    // );\r\n  }\r\n  private offLoginTable() {\r\n    this.LoginTable.active = false;\r\n    this.LoginBtnTb.active = false;\r\n  }\r\n\r\n  private onLoginTable() {\r\n    this.LoginTable.active = true;\r\n    this.LoginBtnTb.active = true;\r\n  }\r\n\r\n  private offResTable() {\r\n    this.ResTable.active = false;\r\n    this.ResBtnTb.active = false;\r\n  }\r\n\r\n  private onResTable() {\r\n    this.ResTable.active = true;\r\n    this.ResBtnTb.active = true;\r\n  }\r\n}\r\n"]}