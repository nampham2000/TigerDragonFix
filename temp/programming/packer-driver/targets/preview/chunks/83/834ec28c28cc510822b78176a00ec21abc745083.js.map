{"version":3,"sources":["file:///Users/waostudio/Desktop/dragonfix/assets/Scripts/NetworkConnect.ts"],"names":["_decorator","Component","instantiate","Label","Node","Prefab","Sprite","SpriteFrame","tween","Vec3","Animation","Colyseus","AudioController","Chip","ccclass","property","NetworkConnect","type","String","Number","Boolean","parentNodeChip","client","room","gameState","resultDragon","resultTiger","TotalUser","UserBet","NotmeBet","winner","currentHost","balanceUser","TotalBalanceUser","betDragon","betTiger","betTie","totaluserBetDragon","totaluserBetTiger","totaluserBetTie","dragonReuslt","tigerResult","namePlayer","winnerPLayer","start","Client","useSSL","hostname","port","connect","auth","token","localStorage","getItem","console","log","rooms","getAvailableRooms","length","create","sessionId","joinById","roomId","users","onMessage","message","TimerDown","string","onAudio","PayoutAnim","winAnimPlus","usercancel","state","players","get","playerId","displayName","i","ListLabel","node","removeAllChildren","betAmount","playerID","betType","createSpriteNode","balance","setInterval","send","onStateChange","roundState","totalBetDragon","totalBetTiger","totalBetTie","totalUserBetDragon","totalUserBetTiger","totalUserBetTie","currentHostId","values","updatePlayerList","onLeave","code","e","error","playerList","displayIndex","displayIndexR","list","list2","ListL","forEach","active","ListR","value","key","nameUser","isHost","warn","nameUser2","ListLabelR","prefab","prefabs","spriteNode","scale","v3","PosTarget","DragonNode","ChipParent","TigerNode","TieNode","addChild","inverseTransformPoint","worldPosition","to","position","winnerList","winnerNode","findWinnerNode","PayUser","createSpriteNodePay","x","y","PayUserSprite","winid","CoinWinAni","price","toString","getComponent","play","winnerName","posX","posY","spriteFrames","spriteComponent","addComponent","spriteFrame","delay","call"],"mappings":"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","sourcesContent":["import {\n  _decorator,\n  Component,\n  instantiate,\n  Label,\n  Node,\n  Prefab,\n  Sprite,\n  SpriteFrame,\n  tween,\n  Vec3,\n  Animation,\n} from \"cc\";\n\nconst { ccclass, property } = _decorator;\nimport Colyseus from \"db://colyseus-sdk/colyseus.js\";\nimport { AudioController } from \"./AudioController\";\nimport { Chip } from \"./Chip\";\n@ccclass(\"NetworkConnect\")\nexport class NetworkConnect extends Component {\n  @property({ type: String })\n  hostname = \"localhost\";\n\n  @property({ type: Number })\n  port = 80;\n\n  @property({ type: Boolean })\n  useSSL = true;\n\n  @property({ type: Node })\n  private ListL: Node[] = [];\n\n  @property({ type: Node })\n  private ListR: Node[] = [];\n\n  @property({ type: Label })\n  public ListLabel: Label[] = [];\n\n  @property({ type: Label })\n  public ListLabelR: Label[] = [];\n\n  @property(Label)\n  private TimerDown: Label;\n\n  @property(Label)\n  private CoinWinAni: Label;\n\n  @property({\n    type: Chip,\n  })\n  private chipNode: Chip;\n\n  @property({\n    type: Prefab,\n  })\n  private prfab: Prefab;\n\n  @property({\n    type: Node,\n  })\n  private DragonNode: Node;\n\n  @property({\n    type: Node,\n  })\n  private TigerNode: Node;\n\n  @property({\n    type: Node,\n  })\n  private TieNode: Node;\n\n  @property({\n    type: Node,\n  })\n  private PayUser: Node;\n\n  @property({ type: Node })\n  private ChipParent: Node[] = [];\n\n  @property({ type: Prefab })\n  public prefabs: Prefab[] = [];\n\n  parentNodeChip;\n\n  client!: Colyseus.Client;\n  room!: Colyseus.Room;\n  gameState;\n  resultDragon: number = 0;\n  resultTiger: number = 0;\n  TotalUser;\n  UserBet;\n  NotmeBet;\n  // result;\n  winner;\n  currentHost: any;\n  balanceUser: any;\n  TotalBalanceUser: any;\n  betDragon: any;\n  betTiger: any;\n  betTie: any;\n  totaluserBetDragon: any;\n  totaluserBetTiger: any;\n  totaluserBetTie: any;\n  dragonReuslt;\n  tigerResult;\n  namePlayer;\n  winnerPLayer;\n  @property({\n    type: AudioController,\n  })\n  private AudioController: AudioController;\n\n  @property({\n    type: SpriteFrame,\n  })\n  private PayUserSprite: SpriteFrame[] = [];\n\n  async start() {\n    this.client = new Colyseus.Client(\n      `${this.useSSL ? \"wss\" : \"ws\"}://${this.hostname}:${this.port}`\n    );\n\n    this.connect();\n  }\n\n  async connect() {\n    try {\n      this.client.auth.token = localStorage.getItem(\"Token\");\n      console.log(this.client.auth.token);\n\n      // this.room = await this.client.joinOrCreate(\"room1\");\n      const rooms = await this.client.getAvailableRooms(\"room1\");\n      if (rooms.length === 0) {\n        this.room = await this.client.create(\"room1\");\n        console.log(\"Created new room with sessionId:\", this.room.sessionId);\n      } else {\n        // Nếu có phòng có sẵn, tham gia vào phòng đầu tiên trong danh sách\n        this.room = await this.client.joinById(rooms[0].roomId);\n        console.log(\n          \"Joined existing room with sessionId:\",\n          this.room.sessionId\n        );\n      }\n      const users = {};\n\n      // Sự kiện được kích hoạt khi một người dùng tham gia vào phòng\n      console.log(\"Joined successfully!\");\n      console.log(\"User's sessionId:\", this.room.sessionId);\n\n      this.room.onMessage(\"timer\", (message) => {\n        this.TimerDown.string = message;\n        if (message < 30 && message > 0) {\n          this.AudioController.onAudio(3);\n        }\n        if (message === 0) {\n          this.AudioController.onAudio(4);\n        }\n      });\n\n      this.room.onMessage(\"winnerList\", (message) => {\n        this.PayoutAnim(message);\n        this.winAnimPlus(message);\n      });\n\n      this.room.onMessage(\"userCancel\", (message) => {\n        const usercancel = this.room.state.players.get(\n          message.playerId\n        ).displayName;\n        for (let i = 0; i < this.ListLabel.length; i++) {\n          if (usercancel === this.ListLabel[i].string) {\n            this.ListLabel[i].node.removeAllChildren();\n          }\n        }\n      });\n\n      // this.room.onMessage(\"result\", (message) => {\n      //   // console.log(message.result);\n      //   this.dragonReuslt = message.dragonCard.value;\n      //   this.tigerResult = message.tigerCard.value;\n      //   console.log(\"Roong\", this.dragonReuslt);\n      //   console.log(\"HO\", this.tigerResult);\n\n      //   this.result = message.result;\n      // });\n\n      this.room.onMessage(\"userBet\", (message) => {\n        console.log(message.betAmount);\n\n        this.namePlayer = this.room.state.players.get(message.playerID);\n        if (message.playerID != this.room.sessionId) {\n          this.UserBet = message.betType;\n          this.createSpriteNode(this.namePlayer.displayName, message.betAmount);\n        } else {\n          // console.log(\"false\");\n        }\n      });\n\n      this.room.onMessage(\"balance\", (message) => {\n        this.balanceUser = message.balance;\n        console.log(message);\n      });\n      setInterval(() => {\n        this.room.send(\"getBalance\");\n      }, 500);\n\n      this.room.onStateChange((state) => {\n        console.log(\"Room state changed:\", state);\n        console.log(\"onStateChange: \", state);\n        console.log(state.roundState);\n\n        this.betDragon = state.totalBetDragon;\n        this.betTiger = state.totalBetTiger;\n        this.betTie = state.totalBetTie;\n        this.totaluserBetDragon = state.totalUserBetDragon;\n        this.totaluserBetTiger = state.totalUserBetTiger;\n        this.totaluserBetTie = state.totalUserBetTie;\n\n        // console.log(this.room.state);\n        this.currentHost = state.currentHostId;\n        const players = [...state.players.values()];\n        console.log(\"player List:........\", players);\n\n        this.updatePlayerList(players);\n        // console.log(\"PlayerStatus\", players[0].isHost);\n        this.TotalUser = players.length;\n        this.gameState = state.roundState;\n      });\n\n      this.room.onLeave((code) => {\n        console.log(\"Left room with code:\", code);\n      });\n    } catch (e) {\n      console.error(\"Error:\", e);\n    }\n  }\n\n  // updatePlayerList(playerList: any[]) {\n  //   let displayIndex = 0;\n\n  //   [\n  //     {\n  //       0: [{}],\n  //     },\n  //   ];\n\n  //   // // Lấy từng giá trị value từ\n  //   const list = playerList[0];\n  //   console.log(\"Listtttttt:\", list);\n\n  //   const numElements = list.length;\n\n  //   this.ListL.forEach((node) => {\n  //     node.active = false;\n  //   });\n\n  //   list.forEach((value: any, key: any) => {\n  //     if (\n  //       value.sessionId !== this.room.sessionId &&\n  //       value.sessionId !== this.currentHost\n  //     ) {\n  //       const nameUser = value.displayName;\n  //       console.log(\"Hostttttttttttt:\", value.isHost);\n\n  //       if (nameUser) {\n  //         // Check if nameUser is defined\n  //         this.ListLabel[displayIndex].string = nameUser;\n  //         this.ListL[displayIndex].active = true;\n  //         displayIndex++;\n  //         this.AudioController.onAudio(9);\n  //       } else {\n  //         console.warn(\n  //           `Player with sessionId ${value.sessionId} not found in room state.`\n  //         );\n  //       }\n  //     }\n  //   });\n  //   for (let i = displayIndex; i < this.ListL.length; i++) {\n  //     this.ListL[i].active = false;\n  //   }\n  // }\n\n  updatePlayerList(playerList: any[]) {\n    let displayIndex = 0;\n    let displayIndexR = 0;\n    [\n      {\n        0: [{}],\n      },\n    ];\n    // // Lấy từng giá trị value từ\n    const list = playerList[0];\n    const list2 = playerList[0];\n    console.log(\"Listtttttt:\", list);\n    this.ListL.forEach((node) => {\n      node.active = false;\n    });\n\n    this.ListR.forEach((node) => {\n      node.active = false;\n    });\n\n    list.forEach((value: any, key: any) => {\n      if (\n        value.sessionId !== this.room.sessionId &&\n        value.sessionId !== this.currentHost\n      ) {\n        const nameUser = value.displayName;\n        if (nameUser && value.isHost === false) {\n          // Check if nameUser is defined\n          this.ListLabel[displayIndex].string = nameUser;\n          this.ListL[displayIndex].active = true;\n          displayIndex++;\n          this.AudioController.onAudio(9);\n        } else {\n          console.warn(\n            `Player with sessionId ${value.sessionId} not found in room state.`\n          );\n        }\n      }\n      if (value.isHost === true && value.sessionId !== this.currentHost) {\n        const nameUser2 = value.displayName;\n        if (nameUser2 && value.isHost === true) {\n          this.ListLabelR[displayIndexR].string = nameUser2;\n          this.ListR[displayIndexR].active = true;\n          displayIndexR++;\n          this.AudioController.onAudio(9);\n        } else {\n          console.warn(\n            `Player with sessionId ${value.sessionId} not found in room state.`\n          );\n        }\n      }\n    });\n\n    // list2.forEach((value: any, key: any) => {\n\n    // });\n    for (let i = displayIndex; i < this.ListL.length; i++) {\n      this.ListL[i].active = false;\n    }\n\n    for (let i = displayIndexR; i < this.ListR.length; i++) {\n      this.ListR[i].active = false;\n    }\n  }\n\n  private createSpriteNode(sessionId: string, betAmount: number) {\n    if (betAmount < 1 || betAmount > 6) {\n      console.error(\"Invalid betAmount:\", betAmount);\n      return;\n    }\n\n    // Lấy prefab tương ứng với betAmount\n    const prefab = this.prefabs[betAmount - 1];\n    const spriteNode = instantiate(prefab);\n    spriteNode.scale = new Vec3(0.5, 0.5);\n    let v3 = new Vec3();\n    let PosTarget;\n\n    // Kiểm tra nếu sessionId trùng khớp với label nào đó\n    for (let i = 0; i < this.ListLabel.length; i++) {\n      if (sessionId === this.ListLabel[i].string) {\n        // Thêm node mới làm con của node có label tương ứng\n        if (this.UserBet === \"Dragon\") {\n          PosTarget = this.DragonNode;\n          this.parentNodeChip = this.ChipParent[0];\n        } else if (this.UserBet === \"Tiger\") {\n          PosTarget = this.TigerNode;\n          this.parentNodeChip = this.ChipParent[1];\n        } else {\n          PosTarget = this.TieNode;\n          this.parentNodeChip = this.ChipParent[2];\n        }\n        this.ListLabel[i].node.addChild(spriteNode);\n        this.ListLabel[i].node.inverseTransformPoint(\n          v3,\n          PosTarget.worldPosition\n        );\n        tween(spriteNode).to(0.3, { position: v3 }).start();\n        break;\n      }\n    }\n\n    for (let i = 0; i < this.ListLabelR.length; i++) {\n      if (sessionId === this.ListLabelR[i].string) {\n        // Thêm node mới làm con của node có label tương ứng\n        if (this.UserBet === \"Dragon\") {\n          PosTarget = this.DragonNode;\n          this.parentNodeChip = this.ChipParent[0];\n        } else if (this.UserBet === \"Tiger\") {\n          PosTarget = this.TigerNode;\n          this.parentNodeChip = this.ChipParent[1];\n        } else {\n          PosTarget = this.TieNode;\n          this.parentNodeChip = this.ChipParent[2];\n        }\n        this.ListLabelR[i].node.addChild(spriteNode);\n        this.ListLabelR[i].node.inverseTransformPoint(\n          v3,\n          PosTarget.worldPosition\n        );\n        tween(spriteNode).to(0.3, { position: v3 }).start();\n        break;\n      }\n    }\n  }\n\n  private PayoutAnim(winnerList) {\n    if (winnerList.length > 0) {\n      this.AudioController.onAudio(6);\n    }\n\n    // Lặp qua danh sách người chiến thắng và tạo nút trả tiền cho mỗi người chiến thắng\n    for (let i = 0; i < winnerList.length; i++) {\n      const winner = this.room.state.players.get(\n        winnerList[i].sessionId\n      ).displayName;\n\n      // Tìm node tương ứng với người chiến thắng\n      const winnerNode = this.findWinnerNode(winner);\n\n      if (winnerNode) {\n        let v3 = new Vec3();\n        this.PayUser.inverseTransformPoint(v3, winnerNode.worldPosition);\n        // Tạo nút trả tiền cho người chiến thắng\n        this.createSpriteNodePay(v3.x, v3.y, this.PayUserSprite);\n      }\n    }\n  }\n  private winAnimPlus(winid) {\n    for (let i = 0; i < winid.length; i++) {\n      if (winid[i].sessionId === this.room.sessionId) {\n        this.CoinWinAni.string = \"+\" + winid[i].price.toString();\n        this.CoinWinAni.node.active = true;\n        this.CoinWinAni.node.getComponent(Animation).play();\n        break; // Nếu tìm thấy phần tử thỏa mãn, dừng vòng lặp\n      }\n    }\n  }\n\n  // Hàm để tìm node tương ứng với người chiến thắng\n  private findWinnerNode(winnerName) {\n    // Lặp qua danh sách nhãn để tìm node có tên trùng khớp với người chiến thắng\n    for (let i = 0; i < this.ListLabel.length; i++) {\n      if (winnerName === this.ListLabel[i].string) {\n        return this.ListLabel[i].node;\n      }\n    }\n    return null; // Trả về null nếu không tìm thấy node\n  }\n\n  createSpriteNodePay(posX, posY, spriteFrames: SpriteFrame[]) {\n    // Lặp qua từng sprite frame để tạo node tương ứng\n    for (let i = 0; i < spriteFrames.length; i++) {\n      // Tạo một Node mới\n      const spriteNode = new Node(\"SpriteNode\");\n      spriteNode.scale = new Vec3(0.5, 0.5);\n\n      // Thêm một component Sprite vào Node\n      const spriteComponent = spriteNode.addComponent(Sprite);\n\n      // Gán SpriteFrame cho component Sprite dựa trên index\n      spriteComponent.spriteFrame = spriteFrames[i];\n\n      // Thêm Node vào Scene hiện tại (ví dụ: Node cha của tất cả Sprite)\n      this.PayUser.addChild(spriteNode); // Giả sử winner.node là node của người chiến thắng\n\n      // Tween Node đến vị trí mong muốn\n      tween(spriteNode)\n        .delay(i * 0.1) // thiết lập thời gian trễ dựa trên index của node\n        .to(1, { position: new Vec3(posX, posY) })\n        .call(() => {\n          spriteNode.active = false;\n        })\n        .start();\n    }\n  }\n}\n"]}