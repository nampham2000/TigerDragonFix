{"version":3,"sources":["file:///C:/Users/Admin/OneDrive/Desktop/dragonfix/assets/Scripts/Chip.ts"],"names":["_decorator","Button","Component","Label","Vec3","AudioController","ccclass","property","Chip","type","checkTiger","checkdragon","checkTie","UserBet","buttonPub","listScore","start","previousButton","button","listButtonBet","i","node","on","EventType","CLICK","scale","onAudio","length","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;AAAoBC,MAAAA,I,OAAAA,I;;AACnDC,MAAAA,e,iBAAAA,e;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;sBAGjBQ,I,WADZF,OAAO,CAAC,MAAD,C,UAELC,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,CAACR,MAAD;AAAR,OAAD,C,UAORM,QAAQ,CAAC;AACRE,QAAAA,IAAI,EAAEN;AADE,OAAD,C,UAIRI,QAAQ,CAAC;AACRE,QAAAA,IAAI;AAAA;AAAA;AADI,OAAD,C,2BAbX,MACaD,IADb,SAC0BN,SAD1B,CACoC;AAAA;AAAA;;AAAA;;AAAA,eAG1BQ,UAH0B,GAGJ,KAHI;AAAA,eAI1BC,WAJ0B,GAIH,KAJG;AAAA,eAK1BC,QAL0B,GAKN,KALM;AAAA,eAM3BC,OAN2B,GAMT,CANS;AAAA,eAOlCC,SAPkC;;AAAA;;AAAA;;AAAA,eAiB3BC,SAjB2B,GAiBL,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAjBK;AAAA;;AAkBlCC,QAAAA,KAAK,GAAG;AAAA;;AACN,cAAIC,cAAc,GAAG,IAArB;;AADM,wCAG8C;AAClD,gBAAIC,MAAM,GAAG,KAAI,CAACC,aAAL,CAAmBC,CAAnB,CAAb;AAEAF,YAAAA,MAAM,CAACG,IAAP,CAAYC,EAAZ,CAAerB,MAAM,CAACsB,SAAP,CAAiBC,KAAhC,EAAuC,MAAM;AAC3C;AACA,kBAAIP,cAAJ,EAAoB;AAClBA,gBAAAA,cAAc,CAACI,IAAf,CAAoBI,KAApB,GAA4B,IAAIrB,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAA5B;AACD,eAJ0C,CAM3C;;;AACAc,cAAAA,MAAM,CAACG,IAAP,CAAYI,KAAZ,GAAoB,IAAIrB,IAAJ,CAAS,GAAT,EAAc,GAAd,EAAmB,GAAnB,CAApB;AACAa,cAAAA,cAAc,GAAGC,MAAjB;;AACA,cAAA,KAAI,CAACb,eAAL,CAAqBqB,OAArB,CAA6B,CAA7B,EAT2C,CAU3C;;;AACA,cAAA,KAAI,CAACb,OAAL,GAAe,KAAI,CAACE,SAAL,CAAeK,CAAf,CAAf;AACA,cAAA,KAAI,CAACN,SAAL,GAAiBI,MAAjB;AACD,aAbD;AAcD,WApBK;;AAGN,eAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKD,aAAL,CAAmBQ,MAAvC,EAA+CP,CAAC,EAAhD;AAAA;AAAA;AAkBD;;AACDQ,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAAE;;AAxCM,O;;;;;iBAER,E","sourcesContent":["import { _decorator, Button, Component, Label, logID, Node, Vec3 } from \"cc\";\r\nimport { AudioController } from \"./AudioController\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"Chip\")\r\nexport class Chip extends Component {\r\n  @property({ type: [Button] })\r\n  listButtonBet: Button[] = [];\r\n  private checkTiger: boolean = false;\r\n  private checkdragon: boolean = false;\r\n  private checkTie: boolean = false;\r\n  public UserBet: number = 0;\r\n  buttonPub;\r\n  @property({\r\n    type: Label,\r\n  })\r\n  private betTiger: Label;\r\n  @property({\r\n    type: AudioController,\r\n  })\r\n  private AudioController: AudioController;\r\n\r\n  public listScore: number[] = [1, 2, 3, 4, 5, 6];\r\n  start() {\r\n    let previousButton = null;\r\n\r\n    for (let i = 0; i < this.listButtonBet.length; i++) {\r\n      let button = this.listButtonBet[i];\r\n\r\n      button.node.on(Button.EventType.CLICK, () => {\r\n        // Nếu có nút được nhấp trước đó, đặt lại kích thước của nó\r\n        if (previousButton) {\r\n          previousButton.node.scale = new Vec3(1, 1, 1);\r\n        }\r\n\r\n        // Thay đổi kích thước của nút được nhấp hiện tại\r\n        button.node.scale = new Vec3(1.2, 1.2, 1.2);\r\n        previousButton = button;\r\n        this.AudioController.onAudio(7);\r\n        // Cập nhật dữ liệu hoặc thực hiện các thao tác khác\r\n        this.UserBet = this.listScore[i];\r\n        this.buttonPub = button;\r\n      });\r\n    }\r\n  }\r\n  update(deltaTime: number) {}\r\n}\r\n"]}