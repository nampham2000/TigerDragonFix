{"version":3,"sources":["file:///Users/waostudio/Desktop/Fix4/assets/Scripts/NetworkConnect.ts"],"names":["_decorator","Component","instantiate","Label","Node","Prefab","Sprite","SpriteFrame","tween","Vec3","Animation","Colyseus","AudioController","Chip","ccclass","property","NetworkConnect","type","String","Number","Boolean","client","room","gameState","resultDragon","resultTiger","TotalUser","UserBet","NotmeBet","result","winner","currentHost","balanceUser","TotalBalanceUser","betDragon","betTiger","betTie","totaluserBetDragon","totaluserBetTiger","totaluserBetTie","dragonReuslt","tigerResult","start","Client","useSSL","hostname","port","connect","auth","token","localStorage","getItem","joinOrCreate","users","console","log","sessionId","onMessage","message","TimerDown","string","onAudio","PayoutAnim","winAnimPlus","dragonCard","value","tigerCard","playerID","betType","createSpriteNode","balance","setInterval","send","onStateChange","state","roundState","totalBetDragon","totalBetTiger","totalBetTie","totalUserBetDragon","totalUserBetTiger","totalUserBetTie","currentHostId","players","values","updatePlayerList","length","onLeave","code","e","error","playerList","displayIndex","numElements","ListL","forEach","node","active","i","nameUser","get","ListLabel","displayName","spriteNode","prfab","v3","PosTarget","DragonNode","TigerNode","TieNode","addChild","inverseTransformPoint","worldPosition","to","position","call","winnerList","winnerNode","findWinnerNode","PayUser","createSpriteNodePay","x","y","PayUserSprite","winid","price","CoinWinAni","toString","getComponent","play","winnerName","posX","posY","spriteFrames","scale","spriteComponent","addComponent","spriteFrame","delay"],"mappings":"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","sourcesContent":["import {\n  _decorator,\n  Component,\n  instantiate,\n  Label,\n  Node,\n  Prefab,\n  Sprite,\n  SpriteFrame,\n  tween,\n  Vec3,\n  Animation,\n} from \"cc\";\n\nconst { ccclass, property } = _decorator;\nimport Colyseus from \"db://colyseus-sdk/colyseus.js\";\nimport { AudioController } from \"./AudioController\";\nimport { Chip } from \"./Chip\";\n@ccclass(\"NetworkConnect\")\nexport class NetworkConnect extends Component {\n  @property({ type: String })\n  hostname = \"localhost\";\n\n  @property({ type: Number })\n  port = 80;\n\n  @property({ type: Boolean })\n  useSSL = true;\n\n  @property({ type: Node })\n  private ListL: Node[] = [];\n\n  @property({ type: Label })\n  public ListLabel: Label[] = [];\n\n  @property(Label)\n  private TimerDown: Label;\n\n  @property(Label)\n  private CoinWinAni: Label;\n\n  @property({\n    type: Chip,\n  })\n  private chipNode: Chip;\n\n  @property({\n    type: Prefab,\n  })\n  private prfab: Prefab;\n\n  @property({\n    type: Node,\n  })\n  private DragonNode: Node;\n\n  @property({\n    type: Node,\n  })\n  private TigerNode: Node;\n\n  @property({\n    type: Node,\n  })\n  private TieNode: Node;\n\n  @property({\n    type: Node,\n  })\n  private PayUser: Node;\n\n  client!: Colyseus.Client;\n  room!: Colyseus.Room;\n  gameState;\n  resultDragon: number = 0;\n  resultTiger: number = 0;\n  TotalUser;\n  UserBet;\n  NotmeBet;\n  result;\n  winner;\n  currentHost: any;\n  balanceUser: any;\n  TotalBalanceUser: any;\n  betDragon: any;\n  betTiger: any;\n  betTie: any;\n  totaluserBetDragon: any;\n  totaluserBetTiger: any;\n  totaluserBetTie: any;\n  dragonReuslt;\n  tigerResult;\n\n  @property({\n    type: AudioController,\n  })\n  private AudioController: AudioController;\n\n  @property({\n    type: SpriteFrame,\n  })\n  private PayUserSprite: SpriteFrame[] = [];\n\n  async start() {\n    this.client = new Colyseus.Client(\n      `${this.useSSL ? \"wss\" : \"ws\"}://${this.hostname}:${this.port}`\n    );\n\n    this.connect();\n  }\n\n  async connect() {\n    try {\n      this.client.auth.token = localStorage.getItem(\"Token\");\n      this.room = await this.client.joinOrCreate(\"room1\");\n\n      // const rooms = await this.client.getAvailableRooms(\"room1\");\n      // if (rooms.length === 0) {\n      //   this.room = await this.client.create(\"room1\");\n      //   console.log(\"Created new room with sessionId:\", this.room.sessionId);\n      // } else {\n      //   // Nếu có phòng có sẵn, tham gia vào phòng đầu tiên trong danh sách\n      //   this.room = await this.client.crea(rooms[0].roomId);\n      //   console.log(\n      //     \"Joined existing room with sessionId:\",\n      //     this.room.sessionId\n      //   );\n      // }\n      const users = {};\n\n      // Sự kiện được kích hoạt khi một người dùng tham gia vào phòng\n      console.log(\"Joined successfully!\");\n      console.log(\"User's sessionId:\", this.room.sessionId);\n      // this.room.send(\n      //   \"signup\",\n      //   JSON.stringify({\n      //     email: \"nampham78934@gmail.com\",\n      //     password: \"nam123455664\",\n      //   })\n      // );\n\n      this.room.onMessage(\"timer\", (message) => {\n        this.TimerDown.string = message;\n        if (message < 30 && message > 0) {\n          this.AudioController.onAudio(3);\n        }\n        if (message === 0) {\n          this.AudioController.onAudio(4);\n        }\n      });\n\n      this.room.onMessage(\"winnerList\", (message) => {\n        // console.log(\"WinList\", message);\n        this.PayoutAnim(message);\n        this.winAnimPlus(message);\n      });\n\n      this.room.onMessage(\"result\", (message) => {\n        // console.log(message.result);\n        console.log(\"rong\", message.dragonCard.value);\n        console.log(\"ho\", message.tigerCard.value);\n        this.result = message.result;\n      });\n\n      this.room.onMessage(\"userBet\", (message) => {\n        console.log(\"messagesssssssssss\", message.playerID);\n        console.log(\"messagesssssssssss\", this.room.sessionId);\n        if (message.playerID != this.room.sessionId) {\n          console.log(\"1233333333\");\n\n          this.UserBet = message.betType;\n          this.createSpriteNode(message.playerID);\n        } else {\n          // console.log(\"false\");\n        }\n      });\n\n      this.room.onMessage(\"balance\", (message) => {\n        this.balanceUser = message.balance;\n        console.log(message);\n      });\n      setInterval(() => {\n        this.room.send(\"getBalance\");\n      }, 500);\n\n      this.room.onStateChange((state) => {\n        console.log(\"Room state changed:\", state);\n        console.log(\"onStateChange: \", state);\n        console.log(state.roundState);\n\n        this.betDragon = state.totalBetDragon;\n        this.betTiger = state.totalBetTiger;\n        this.betTie = state.totalBetTie;\n        this.totaluserBetDragon = state.totalUserBetDragon;\n        this.totaluserBetTiger = state.totalUserBetTiger;\n        this.totaluserBetTie = state.totalUserBetTie;\n\n        // console.log(this.room.state);\n        this.currentHost = state.currentHostId;\n        console.log(this.currentHost);\n\n        const players = [...state.players.values()];\n\n        this.updatePlayerList(players);\n        // console.log(\"PlayerStatus\", players[0].isHost);\n        this.TotalUser = players.length;\n        this.gameState = state.roundState;\n      });\n\n      this.room.onLeave((code) => {\n        console.log(\"Left room with code:\", code);\n      });\n    } catch (e) {\n      console.error(\"Error:\", e);\n    }\n  }\n\n  updatePlayerList(playerList: any[]) {\n    let displayIndex = 0;\n    const numElements = playerList.length;\n    this.ListL.forEach((node) => {\n      node.active = false;\n    });\n    for (let i = 0; i < numElements && displayIndex < this.ListL.length; i++) {\n      if (\n        playerList[i].sessionId !== this.room.sessionId &&\n        playerList[i].sessionId !== this.currentHost\n      ) {\n        const nameUser = this.room.state.players.get(playerList[i].sessionId);\n        this.ListLabel[displayIndex].string = nameUser.displayName;\n        this.ListL[displayIndex].active = true;\n        displayIndex++;\n        this.AudioController.onAudio(9);\n      }\n    }\n    for (let i = displayIndex; i < this.ListL.length; i++) {\n      this.ListL[i].active = false;\n    }\n  }\n\n  private createSpriteNode(sessionId: string) {\n    const spriteNode = instantiate(this.prfab);\n    let v3 = new Vec3();\n    let PosTarget;\n    // Kiểm tra nếu sessionId trùng khớp với label nào đó\n    for (let i = 0; i < this.ListLabel.length; i++) {\n      if (sessionId === this.ListLabel[i].string) {\n        // Thêm node mới làm con của node có label tương ứng\n        if (this.UserBet === \"Dragon\") {\n          PosTarget = this.DragonNode;\n        } else if (this.UserBet === \"Tiger\") {\n          PosTarget = this.TigerNode;\n        } else {\n          PosTarget = this.TieNode;\n        }\n        this.ListLabel[i].node.addChild(spriteNode);\n        this.ListLabel[i].node.inverseTransformPoint(\n          v3,\n          PosTarget.worldPosition\n        );\n        tween(spriteNode)\n          .to(0.3, { position: v3 })\n          .call(() => {})\n          .start();\n\n        break; // Dừng vòng lặp sau khi thêm node\n      }\n    }\n  }\n\n  private PayoutAnim(winnerList) {\n    if (winnerList.length > 0) {\n      this.AudioController.onAudio(6);\n    }\n\n    // Lặp qua danh sách người chiến thắng và tạo nút trả tiền cho mỗi người chiến thắng\n    for (let i = 0; i < winnerList.length; i++) {\n      const winner = winnerList[i].sessionId;\n\n      // Tìm node tương ứng với người chiến thắng\n      const winnerNode = this.findWinnerNode(winner);\n\n      if (winnerNode) {\n        let v3 = new Vec3();\n        this.PayUser.inverseTransformPoint(v3, winnerNode.worldPosition);\n        // Tạo nút trả tiền cho người chiến thắng\n        this.createSpriteNodePay(v3.x, v3.y, this.PayUserSprite);\n      }\n    }\n  }\n  private winAnimPlus(winid) {\n    for (let i = 0; i < winid.length; i++) {\n      if (winid[i].sessionId === this.room.sessionId) {\n        console.log(\"Price:\", winid[i].price);\n\n        this.CoinWinAni.string = \"+\" + winid[i].price.toString();\n        this.CoinWinAni.node.active = true;\n        this.CoinWinAni.node.getComponent(Animation).play();\n        break; // Nếu tìm thấy phần tử thỏa mãn, dừng vòng lặp\n      }\n    }\n  }\n\n  // Hàm để tìm node tương ứng với người chiến thắng\n  private findWinnerNode(winnerName) {\n    // Lặp qua danh sách nhãn để tìm node có tên trùng khớp với người chiến thắng\n    for (let i = 0; i < this.ListLabel.length; i++) {\n      if (winnerName === this.ListLabel[i].string) {\n        return this.ListLabel[i].node;\n      }\n    }\n    return null; // Trả về null nếu không tìm thấy node\n  }\n\n  createSpriteNodePay(posX, posY, spriteFrames: SpriteFrame[]) {\n    // Lặp qua từng sprite frame để tạo node tương ứng\n    for (let i = 0; i < spriteFrames.length; i++) {\n      // Tạo một Node mới\n      const spriteNode = new Node(\"SpriteNode\");\n      spriteNode.scale = new Vec3(0.5, 0.5);\n\n      // Thêm một component Sprite vào Node\n      const spriteComponent = spriteNode.addComponent(Sprite);\n\n      // Gán SpriteFrame cho component Sprite dựa trên index\n      spriteComponent.spriteFrame = spriteFrames[i];\n\n      // Thêm Node vào Scene hiện tại (ví dụ: Node cha của tất cả Sprite)\n      this.PayUser.addChild(spriteNode); // Giả sử winner.node là node của người chiến thắng\n\n      // Tween Node đến vị trí mong muốn\n      tween(spriteNode)\n        .delay(i * 0.1) // thiết lập thời gian trễ dựa trên index của node\n        .to(1, { position: new Vec3(posX, posY) })\n        .call(() => {\n          spriteNode.active = false;\n        })\n        .start();\n    }\n  }\n}\n"]}