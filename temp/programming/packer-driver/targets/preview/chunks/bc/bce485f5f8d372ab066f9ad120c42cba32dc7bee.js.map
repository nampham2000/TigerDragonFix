{"version":3,"sources":["file:///Users/waostudio/Desktop/dragonfix/assets/Scripts/LoginScript/Connect.ts"],"names":["_decorator","Component","Node","Animation","director","EditBox","Button","Colyseus","ccclass","property","loggedInUserSession","NetworkConnect","type","String","Number","Boolean","client","room","login","email","password","response","fetch","method","headers","body","JSON","stringify","cookies","get","cookiesObject","parse","sessionValue","localStorage","setItem","LoadingPageProcess","active","loadingAnimProject","play","moveToGameScene","error","console","showErrorMessage","Signup","name","WarnEmail","userId","generateUUID","ResTable","ResBtnTb","WarnRes","d","Date","getTime","uuid","replace","c","r","Math","random","floor","toString","loadScene","message","loginBtn","username","boxNameLogin","string","boxPassLogin","LoginBtnactive","node","setTimeout","signUp","boxNameRes","boxPassRes","boxRePassRes","ResBtn","start","Client","useSSL","hostname","port","checkToken","getItem","connect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACEA,MAAAA,U,OAAAA,U;AACAC,MAAAA,S,OAAAA,S;AAGAC,MAAAA,I,OAAAA,I;AAMAC,MAAAA,S,OAAAA,S;AACAC,MAAAA,Q,OAAAA,Q;AACAC,MAAAA,O,OAAAA,O;AACAC,MAAAA,M,OAAAA,M;;AAGKC,MAAAA,Q;;;;;;;;;OADD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;AAG9B;AACA;AACIU,MAAAA,mB,GAA2B,I;;gCAGlBC,c,WADZH,OAAO,CAAC,gBAAD,C,UAELC,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEC;AAAR,OAAD,C,UAGRJ,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEE;AAAR,OAAD,C,UAGRL,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEG;AAAR,OAAD,C,UAGRN,QAAQ,CAACJ,OAAD,C,UAGRI,QAAQ,CAACJ,OAAD,C,UAGRI,QAAQ,CAACJ,OAAD,C,UAGRI,QAAQ,CAACJ,OAAD,C,UAGRI,QAAQ,CAACJ,OAAD,C,WAGRI,QAAQ,CAACP,IAAD,C,WAGRO,QAAQ,CAACN,SAAD,C,WAGRM,QAAQ,CAACP,IAAD,C,WAGRO,QAAQ,CAACP,IAAD,C,WAGRO,QAAQ,CAACN,SAAD,C,WAGRM,QAAQ,CAACN,SAAD,C,WAGRM,QAAQ,CAACH,MAAD,C,WAGRG,QAAQ,CAACH,MAAD,C,WAGRG,QAAQ,CAACH,MAAD,C,2BAlDX,MACaK,cADb,SACoCV,SADpC,CAC8C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAoD5C;AACA;AACA;AACA;AAvD4C,eAyD5Ce,MAzD4C;AAAA,eA0D5CC,IA1D4C;AAAA;;AA2D9BC,QAAAA,KAAK,CAACC,KAAD,EAAgBC,QAAhB,EAAkC;AAAA;;AAAA;AACnD,gBAAI;AACF;AACA,kBAAIC,QAAQ,SAASC,KAAK,CACxB,oEADwB,EAExB;AACEC,gBAAAA,MAAM,EAAE,MADV;AAEEC,gBAAAA,OAAO,EAAE;AACP,iDAA+B,GADxB;AAEP,kCAAgB,kBAFT;AAGP,gDAA8B,OAHvB;AAIP,wCAAsB;AAJf,iBAFX;AAQEC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBR,kBAAAA,KADmB;AAEnBC,kBAAAA;AAFmB,iBAAf;AARR,eAFwB,CAA1B;AAgBA,kBAAII,OAAO,GAAGH,QAAQ,CAACG,OAAvB;AACA,kBAAMI,OAAO,GAAGJ,OAAO,CAACK,GAAR,CAAY,oBAAZ,CAAhB;AACA,kBAAMC,aAAa,GAAGJ,IAAI,CAACK,KAAL,CAAWH,OAAX,CAAtB;AACA,kBAAMI,YAAY,GAAGF,aAAa,CAAC,gCAAD,CAAlC;AACAG,cAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,YAA9B;AACA,cAAA,KAAI,CAACG,kBAAL,CAAwBC,MAAxB,GAAiC,IAAjC;;AACA,cAAA,KAAI,CAACC,kBAAL,CAAwBC,IAAxB;;AACA,cAAA,KAAI,CAACC,eAAL;AACD,aA1BD,CA0BE,OAAOC,KAAP,EAAc;AACdC,cAAAA,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB;;AACA,cAAA,KAAI,CAACE,gBAAL,CAAsB,6BAAtB;AACD;AA9BkD;AA+BpD;;AAEaC,QAAAA,MAAM,CAACxB,KAAD,EAAgBC,QAAhB,EAAkCwB,IAAlC,EAAgD;AAAA;;AAAA;AAClE,gBAAI,CAACzB,KAAD,IAAU,CAACC,QAAX,IAAuB,CAACwB,IAA5B,EAAkC;AAChC,cAAA,MAAI,CAACC,SAAL,CAAeP,IAAf,CAAoB,cAApB;;AACA;AACD;;AACD,gBAAI;AACF;AACA,kBAAIjB,QAAQ,SAASC,KAAK,CACxB,qDADwB,EAExB;AACEC,gBAAAA,MAAM,EAAE,MADV;AAEEC,gBAAAA,OAAO,EAAE;AACP,iDAA+B,GADxB;AAEP,kCAAgB,kBAFT;AAGP,gDAA8B,OAHvB;AAIP,wCAAsB;AAJf,iBAFX;AAQEC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBmB,kBAAAA,MAAM,EAAE,MAAI,CAACC,YAAL,EADW;AAEnB5B,kBAAAA,KAAK,EAAEA,KAFY;AAGnBC,kBAAAA,QAAQ,EAAEA,QAHS;AAInBwB,kBAAAA,IAAI,EAAEA;AAJa,iBAAf;AARR,eAFwB,CAA1B;;AAkBA,kBAAI,MAAI,CAACI,QAAL,IAAiB,MAAI,CAACC,QAA1B,EAAoC;AAClC,gBAAA,MAAI,CAACD,QAAL,CAAcZ,MAAd,GAAuB,KAAvB;AACA,gBAAA,MAAI,CAACa,QAAL,CAAcb,MAAd,GAAuB,KAAvB;;AACA,gBAAA,MAAI,CAACc,OAAL,CAAaZ,IAAb;AACD;AACF,aAzBD,CAyBE,OAAOE,KAAP,EAAc;AACdC,cAAAA,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB;;AACA,cAAA,MAAI,CAACE,gBAAL,CAAsB,6BAAtB;AACD;AAjCiE;AAkCnE;;AACDK,QAAAA,YAAY,GAAG;AACb,cAAII,CAAC,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAR;AACA,cAAMC,IAAI,GAAG,+BAA+BC,OAA/B,CAAuC,OAAvC,EAAgD,UAAUC,CAAV,EAAa;AACxE,gBAAMC,CAAC,GAAG,CAACN,CAAC,GAAGO,IAAI,CAACC,MAAL,KAAgB,EAArB,IAA2B,EAA3B,GAAgC,CAA1C;AACAR,YAAAA,CAAC,GAAGO,IAAI,CAACE,KAAL,CAAWT,CAAC,GAAG,EAAf,CAAJ;AACA,mBAAO,CAACK,CAAC,KAAK,GAAN,GAAYC,CAAZ,GAAiBA,CAAC,GAAG,GAAL,GAAY,GAA7B,EAAkCI,QAAlC,CAA2C,EAA3C,CAAP;AACD,WAJY,CAAb;AAKA,iBAAOP,IAAP;AACD;;AAEOf,QAAAA,eAAe,GAAG;AACxB;AACAnC,UAAAA,QAAQ,CAAC0D,SAAT,CAAmB,MAAnB;AACD;;AAEOpB,QAAAA,gBAAgB,CAACqB,OAAD,EAAkB,CACxC;AACD;;AAEOC,QAAAA,QAAQ,GAAG;AACjB,cAAMC,QAAQ,GAAG,KAAKC,YAAL,CAAkBC,MAAnC;AACA,cAAM/C,QAAQ,GAAG,KAAKgD,YAAL,CAAkBD,MAAnC;AACA,eAAKjD,KAAL,CAAW+C,QAAX,EAAqB7C,QAArB;AACA,eAAKiD,cAAL,CAAoBC,IAApB,CAAyBlC,MAAzB,GAAkC,IAAlC;AACAmC,UAAAA,UAAU,CAAC,MAAM;AACf,iBAAKF,cAAL,CAAoBC,IAApB,CAAyBlC,MAAzB,GAAkC,KAAlC;AACD,WAFS,EAEP,IAFO,CAAV;AAGD;;AAEOoC,QAAAA,MAAM,CAACrD,KAAD,EAAgBC,QAAhB,EAAkCwB,IAAlC,EAAgD;AAC5DzB,UAAAA,KAAK,GAAG,KAAKsD,UAAL,CAAgBN,MAAxB;AACA/C,UAAAA,QAAQ,GAAG,KAAKsD,UAAL,CAAgBP,MAA3B;AACAvB,UAAAA,IAAI,GAAG,KAAK+B,YAAL,CAAkBR,MAAzB;AACA,eAAKxB,MAAL,CAAYxB,KAAZ,EAAmBC,QAAnB,EAA6BwB,IAA7B;AACA,eAAKgC,MAAL,CAAYN,IAAZ,CAAiBlC,MAAjB,GAA0B,IAA1B;AACAmC,UAAAA,UAAU,CAAC,MAAM;AACf,iBAAKK,MAAL,CAAYN,IAAZ,CAAiBlC,MAAjB,GAA0B,KAA1B;AACD,WAFS,EAEP,IAFO,CAAV;AAGD,SArK2C,CAuK5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAyC,QAAAA,KAAK,GAAG;AACN;AACA,eAAK7D,MAAL,GAAc,IAAI;AAAA;AAAA,oCAAS8D,MAAb,EACT,KAAKC,MAAL,GAAc,KAAd,GAAsB,IADb,YACuB,KAAKC,QAD5B,SACwC,KAAKC,IAD7C,CAAd;AAGA,cAAM3B,IAAI,GAAG,KAAKP,YAAL,EAAb;AACA,cAAMmC,UAAU,GAAGjD,YAAY,CAACkD,OAAb,CAAqB,KAArB,CAAnB;;AACA,cAAID,UAAJ,EAAgB;AACd,iBAAK/C,kBAAL,CAAwBC,MAAxB,GAAiC,IAAjC;AACA,iBAAKC,kBAAL,CAAwBC,IAAxB;AACA,iBAAKC,eAAL;AACD,WAJD,MAIO,CACN,CAZK,CAaN;;AACD;;AAEK6C,QAAAA,OAAO,GAAG,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAnCc;AAoCf;;AAtO2C,O;;;;;iBAEjC,W;;;;;;;iBAGJ,E;;;;;;;iBAGE,I;;;;;;;iBAGqB,I;;;;;;;iBAGE,I;;;;;;;iBAGA,I;;;;;;;iBAGF,I;;;;;;;iBAGE,I;;;;;;;iBAGG,I;;;;;;;iBAGK,I","sourcesContent":["import {\n  _decorator,\n  Component,\n  instantiate,\n  Label,\n  Node,\n  Prefab,\n  Sprite,\n  SpriteFrame,\n  tween,\n  Vec3,\n  Animation,\n  director,\n  EditBox,\n  Button,\n} from \"cc\";\nconst { ccclass, property } = _decorator;\nimport Colyseus from \"db://colyseus-sdk/colyseus.js\";\nimport { getToken } from \"../Constant\";\n// import { AudioController } from \"./AudioController\";\n// import { Chip } from \"./Chip\";\nlet loggedInUserSession: any = null;\n\n@ccclass(\"NetworkConnect\")\nexport class NetworkConnect extends Component {\n  @property({ type: String })\n  hostname = \"localhost\";\n\n  @property({ type: Number })\n  port = 80;\n\n  @property({ type: Boolean })\n  useSSL = true;\n\n  @property(EditBox)\n  private boxNameRes: EditBox = null;\n\n  @property(EditBox)\n  private boxNameLogin: EditBox = null;\n\n  @property(EditBox)\n  private boxPassLogin: EditBox = null;\n\n  @property(EditBox)\n  private boxPassRes: EditBox = null;\n\n  @property(EditBox)\n  private boxRePassRes: EditBox = null;\n\n  @property(Node)\n  private LoadingPageProcess: Node = null;\n\n  @property(Animation)\n  private loadingAnimProject: Animation = null;\n\n  @property(Node)\n  private ResTable: Node;\n\n  @property(Node)\n  private ResBtnTb: Node;\n\n  @property(Animation)\n  private WarnRes: Animation;\n\n  @property(Animation)\n  private WarnEmail: Animation;\n\n  @property(Button)\n  private LoginBtn: Button;\n\n  @property(Button)\n  private ResBtn: Button;\n\n  @property(Button)\n  private LoginBtnactive: Button;\n\n  // @property({\n  //   type: Chip,\n  // })\n  // private chipNode: Chip;\n\n  client!: Colyseus.Client;\n  room!: Colyseus.Room;\n  private async login(email: string, password: string) {\n    try {\n      //   // Gửi thông tin đăng nhập đến phòng Colyseus\n      let response = await fetch(\n        \"https://adroit-appwrite.our-projects.org/v1/account/sessions/email\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Content-Type\": \"application/json\",\n            \"X-Appwrite-Response-Format\": \"1.5.0\",\n            \"X-Appwrite-Project\": \"6604076a003c15f4a892\",\n          },\n          body: JSON.stringify({\n            email,\n            password,\n          }),\n        }\n      );\n      let headers = response.headers;\n      const cookies = headers.get(\"x-fallback-cookies\");\n      const cookiesObject = JSON.parse(cookies);\n      const sessionValue = cookiesObject[\"a_session_6604076a003c15f4a892\"];\n      localStorage.setItem(\"Token\", sessionValue);\n      this.LoadingPageProcess.active = true;\n      this.loadingAnimProject.play();\n      this.moveToGameScene();\n    } catch (error) {\n      console.error(\"Error:\", error);\n      this.showErrorMessage(\"Incorrect email or password\");\n    }\n  }\n\n  private async Signup(email: string, password: string, name: string) {\n    if (!email || !password || !name) {\n      this.WarnEmail.play(\"WarningEmail\");\n      return;\n    }\n    try {\n      // Gửi thông tin đăng nhập đến phòng Colyseus\n      let response = await fetch(\n        \"https://adroit-appwrite.our-projects.org/v1/account\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Content-Type\": \"application/json\",\n            \"X-Appwrite-Response-Format\": \"1.5.0\",\n            \"X-Appwrite-Project\": \"6604076a003c15f4a892\",\n          },\n          body: JSON.stringify({\n            userId: this.generateUUID(),\n            email: email,\n            password: password,\n            name: name,\n          }),\n        }\n      );\n      if (this.ResTable && this.ResBtnTb) {\n        this.ResTable.active = false;\n        this.ResBtnTb.active = false;\n        this.WarnRes.play();\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      this.showErrorMessage(\"Incorrect email or password\");\n    }\n  }\n  generateUUID() {\n    let d = new Date().getTime();\n    const uuid = \"xxxxxxxxxxxxxxxyxxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n      const r = (d + Math.random() * 16) % 16 | 0;\n      d = Math.floor(d / 16);\n      return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n    });\n    return uuid;\n  }\n\n  private moveToGameScene() {\n    // Chuyển đến scene chơi game\n    director.loadScene(\"Game\");\n  }\n\n  private showErrorMessage(message: string) {\n    // Hiển thị thông báo lỗi trên màn hình nếu cần\n  }\n\n  private loginBtn() {\n    const username = this.boxNameLogin.string;\n    const password = this.boxPassLogin.string;\n    this.login(username, password);\n    this.LoginBtnactive.node.active = true;\n    setTimeout(() => {\n      this.LoginBtnactive.node.active = false;\n    }, 3000);\n  }\n\n  private signUp(email: string, password: string, name: string) {\n    email = this.boxNameRes.string;\n    password = this.boxPassRes.string;\n    name = this.boxRePassRes.string;\n    this.Signup(email, password, name);\n    this.ResBtn.node.active = true;\n    setTimeout(() => {\n      this.ResBtn.node.active = false;\n    }, 3000);\n  }\n\n  // Phương thức để xử lý kết quả đăng nhập từ server\n  // private handleLoginResponse(response: any) {\n  //   if (response.success) {\n  //     // Nếu đăng nhập thành công, chuyển đến scene game\n  //     this.moveToGameScene();\n  //   } else {\n  //     // Nếu đăng nhập thất bại, hiển thị thông báo lỗi\n  //     this.showErrorMessage(\"Incorrect email or password\");\n  //   }\n  // }\n\n  start() {\n    // Khởi tạo kết nối đến Colyseus và gọi phương thức connect\n    this.client = new Colyseus.Client(\n      `${this.useSSL ? \"wss\" : \"ws\"}://${this.hostname}:${this.port}`\n    );\n    const uuid = this.generateUUID();\n    const checkToken = localStorage.getItem(\"key\");\n    if (checkToken) {\n      this.LoadingPageProcess.active = true;\n      this.loadingAnimProject.play();\n      this.moveToGameScene();\n    } else {\n    }\n    // this.connect();\n  }\n\n  async connect() {\n    // try {\n    // this.client.auth.token =\n    //   \"eyJpZCI6IjY2MWUyNmFmMDAzOWVjOGFhNDc1Iiwic2VjcmV0IjoiNjQ2MTQ5N2U0YjNiY2I3ODUwM2VjZmZhZmJiMWI2ZmJjNTViNmYwNWM5MTJkYmYxMDIxYzY5YWY3Mjc1MTU5NDkyNzk0Y2ZjMTE5OTU4OTRhYTJjZWViYWZmZDZlZjQxZmQ4ODNiMDQ1NmVkMmQzNzU4YmY3OGI3MjRmYWNjN2MxNzVjNzFkNDU1ZDlhZmM1OTNiMjQwMDBiMDVkNDYyMzZjMzBhYTM4MWVmZTM4ZWVlMDU5OTVmMDYwMTkwMTk3ODMxOGI0OWIxYjIwYjg0ZDMyODVkMGQyMzA2ZmY0NWMyNzk0MjdmZjkzZmNmYzdmYTNiMjAyNzE1MTQ4ZDE3YiJ9\";\n    // // this.client.joinOrCreate(\"room1\").then((room) => {\n    // //   console.log(room);\n    // // });\n    // // Kết nối đến Colyseus và tham gia vào phòng\n    // const rooms = await this.client.getAvailableRooms(\"room1\");\n    // if (rooms.length === 0) {\n    //   this.room = await this.client.create(\"room1\");\n    //   // console.log(\"Created new room with sessionId:\", this.room.sessionId);\n    // } else {\n    //   // // Nếu có phòng có sẵn, tham gia vào phòng đầu tiên trong danh sách\n    //   this.room = await this.client.joinById(rooms[0].roomId);\n    //   console.log(\n    //     \"Joined existing room with sessionId:\",\n    //     this.room.sessionId\n    //   );\n    //   }\n    //   console.log(\"Joined successfully!\");\n    //   console.log(\"User's sessionId:\", this.room.sessionId);\n    //   this.room.onMessage(\"loginResult\", (message) => {\n    //     if (message) {\n    //       console.log(message);\n    //       // this.LoadingNode.active = true;\n    //       localStorage.setItem(\"key\", message.secret);\n    //       console.log(message);\n    //       this.moveToGameScene();\n    //     } else {\n    //       console.log(\"Not define\");\n    //     }\n    //   });\n    // } catch (e) {\n    //   console.error(\"Error:\", e);\n    // }\n  }\n}\n"]}